Search.setIndex({"docnames": ["authors", "autoapi/index", "autoapi/py_experimenter/database_connector/index", "autoapi/py_experimenter/database_connector_lite/index", "autoapi/py_experimenter/database_connector_mysql/index", "autoapi/py_experimenter/exceptions/index", "autoapi/py_experimenter/experiment_status/index", "autoapi/py_experimenter/experimenter/index", "autoapi/py_experimenter/index", "autoapi/py_experimenter/result_processor/index", "autoapi/py_experimenter/utils/index", "changelog", "examples/example_conditional_grid", "examples/example_general_usage", "examples/example_logtables", "examples/index", "help", "how-to-contribute", "index", "installation", "license", "usage/database_credential_file", "usage/execution", "usage/experiment_configuration_file", "usage/experiment_function", "usage/index"], "filenames": ["authors.rst", "autoapi/index.rst", "autoapi/py_experimenter/database_connector/index.rst", "autoapi/py_experimenter/database_connector_lite/index.rst", "autoapi/py_experimenter/database_connector_mysql/index.rst", "autoapi/py_experimenter/exceptions/index.rst", "autoapi/py_experimenter/experiment_status/index.rst", "autoapi/py_experimenter/experimenter/index.rst", "autoapi/py_experimenter/index.rst", "autoapi/py_experimenter/result_processor/index.rst", "autoapi/py_experimenter/utils/index.rst", "changelog.rst", "examples/example_conditional_grid.ipynb", "examples/example_general_usage.ipynb", "examples/example_logtables.ipynb", "examples/index.rst", "help.rst", "how-to-contribute.rst", "index.rst", "installation.rst", "license.rst", "usage/database_credential_file.rst", "usage/execution.rst", "usage/experiment_configuration_file.rst", "usage/experiment_function.rst", "usage/index.rst"], "titles": ["Authors", "API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">py_experimenter.database_connector</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">py_experimenter.database_connector_lite</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">py_experimenter.database_connector_mysql</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">py_experimenter.exceptions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">py_experimenter.experiment_status</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">py_experimenter.experimenter</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">py_experimenter</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">py_experimenter.result_processor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">py_experimenter.utils</span></code>", "Changelog", "Example: Conditional Parameter Grids", "Example: General Usage", "Example: Usage of Logtables", "Examples", "Need Help?", "How to Contribute", "Welcome to PyExperimenter\u2019s documentation!", "Installation", "License", "Database Credential File", "Executing PyExperimenter", "Experiment Configuration File", "Experiment Function", "Usage"], "terms": {"tanja": [0, 12, 13, 14, 19, 20], "torned": [0, 17, 19, 20], "alexand": [0, 19, 20], "luka": [0, 19, 20], "fehr": [0, 19, 20], "helena": [0, 19, 20], "graf": [0, 19, 20], "jona": [0, 19, 20], "hansel": [0, 19, 20], "felix": [0, 19, 20], "mohr": [0, 19, 20], "marcel": [0, 19, 20], "wever": [0, 19, 20], "gehr": [0, 19, 20], "thi": [1, 6, 7, 9, 11, 12, 13, 14, 17, 18, 20, 21, 22, 23, 25], "page": [1, 11], "contain": [1, 7, 11, 12, 13, 17, 21, 22, 23], "auto": [1, 13, 14], "gener": [1, 6, 11, 12, 14, 15, 17, 22, 25], "document": [1, 11, 12, 13, 14, 19, 20], "1": [1, 7, 12, 13, 14, 19, 22, 23], "py_experiment": [1, 12, 13, 14, 17, 19, 22, 23, 24], "database_connector": [1, 3, 4, 8], "database_connector_lit": [1, 8], "database_connector_mysql": [1, 8], "except": [1, 7, 8, 11, 17], "experiment_statu": [1, 8], "experiment": [1, 8, 11, 12, 13, 14, 17, 19, 22], "result_processor": [1, 7, 8, 12, 13, 14, 24], "util": [1, 8], "creat": [1, 2, 6, 7, 10, 11, 12, 13, 14, 16, 18, 23, 25], "sphinx": [1, 11, 17, 19], "autoapi": [1, 19], "databaseconnector": [2, 3, 4], "config": [2, 7, 10, 12, 13, 14, 21, 22], "configpars": [2, 4, 7, 10], "base": [2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 17, 18, 22, 25], "abc": 2, "helper": 2, "provid": [2, 7, 12, 13, 14, 17, 20, 21, 22, 23, 25], "standard": [2, 23], "wai": [2, 18, 22], "an": [2, 7, 9, 11, 12, 13, 14, 18, 20, 21, 22, 23, 24, 25], "us": [2, 9, 11, 12, 13, 14, 18, 20, 22, 23], "inherit": 2, "abstract": 2, "_extract_credenti": [2, 3, 4], "_test_connect": [2, 3, 4], "connect": [2, 3, 4, 7, 10, 20, 23], "close_connect": 2, "commit": [2, 17], "none": [2, 4, 7, 9, 10, 12, 13, 14], "execut": [2, 7, 11, 17, 18, 19, 21, 24, 25], "cursor": [2, 3, 4], "sql_statement": 2, "fetchal": 2, "create_table_if_not_exist": 2, "_table_exist": [2, 3, 4], "static": [2, 3, 4, 7, 9], "_compute_column": 2, "keyfield": [2, 7, 11, 12, 13, 14, 22, 24], "resultfield": [2, 11, 12, 13, 14], "_exclude_fixed_column": 2, "column": [2, 7, 11, 13, 22, 23], "list": [2, 3, 4, 7, 9, 10, 11, 13, 17, 22, 23, 25], "str": [2, 3, 7, 9, 10, 13, 14], "_create_t": 2, "tupl": [2, 3, 4, 7, 9, 10, 13], "table_nam": [2, 7, 9, 22, 23], "logtabl": [2, 11, 15], "bool": [2, 3, 7, 10], "fals": [2, 4, 7, 12, 13, 14, 23], "_get_create_table_queri": 2, "get_autoincr": [2, 3, 4], "self": 2, "_table_has_correct_structur": [2, 3, 4], "typed_field": [2, 3, 4], "fill_tabl": 2, "paramet": [2, 7, 10, 11, 13, 14, 15, 18, 22, 23, 24, 25], "fixed_parameter_combin": [2, 7, 10, 12], "_check_combination_in_existing_row": 2, "combin": [2, 7, 12], "existing_row": 2, "keyfield_nam": [2, 10, 23], "_get_existing_row": [2, 3, 4], "column_nam": [2, 3, 4], "get_experiment_configur": 2, "_execute_queri": 2, "int": [2, 3, 4, 7, 9, 12, 13, 14, 23], "_pull_open_experi": [2, 3, 4], "_write_to_databas": 2, "kei": [2, 7, 11, 17, 23], "valu": [2, 7, 9, 12, 14, 22, 23, 24, 25], "update_databas": 2, "dict": [2, 7, 9, 10, 12, 13, 14, 22, 24], "object": [2, 9, 14], "condit": [2, 11, 15, 20, 22], "_prepare_update_queri": 2, "not_executed_yet": 2, "where": [2, 7, 17, 22, 23], "reset_experi": [2, 7, 11, 13, 22], "state": [2, 7, 11, 17, 22, 23], "_pop_experiments_with_statu": 2, "statu": [2, 7, 9, 11, 12, 13, 14, 19, 22, 25], "_get_experiments_with_condit": 2, "_delete_experiments_with_condit": 2, "get_structure_from_t": [2, 3, 4], "execute_queri": 2, "queri": 2, "delete_t": [2, 7, 11], "get_logt": [2, 7, 14], "logtable_nam": [2, 23, 24], "panda": [2, 7, 11, 12, 13, 19, 22, 25], "datafram": [2, 7, 11, 12, 13, 22, 25], "get_tabl": [2, 7, 12, 13, 14, 22], "databaseconnectorlit": 3, "_write_to_database_separ": [3, 4], "_prepared_statement_placehold": [3, 4], "escape_sql_char": [3, 4], "arg": [3, 4], "databaseconnectormysql": 4, "experiment_configuration_file_path": [4, 7, 12, 13, 14, 22], "database_credential_file_path": [4, 7, 22], "": [4, 13], "_create_database_if_not_exist": 4, "credenti": [4, 7, 17, 22, 23, 25], "_start_transact": 4, "readonli": 4, "pyexperimentererror": 5, "common": [5, 23], "class": [5, 11], "all": [5, 6, 7, 11, 12, 13, 14, 17, 20, 22, 23, 24, 25], "non": [5, 18], "exit": 5, "parametercombinationerror": [5, 7], "databaseerror": 5, "databasecreationerror": 5, "databaseconnectionerror": [5, 7], "databasequeryerror": 5, "emptyfilldatabasecallerror": 5, "creatingtableerror": 5, "invalidresultfielderror": 5, "tablehaswrongstructureerror": 5, "noexperimentsleftexcept": 5, "configerror": 5, "noconfigfileerror": 5, "filenotfounderror": 5, "invalidconfigerror": [5, 7], "invalidvaluesinconfigur": [5, 7], "missinglogtableerror": 5, "experimentstatu": [6, 11], "enum": [6, 11], "enumer": 6, "deriv": 6, "from": [6, 7, 9, 10, 12, 13, 14, 18, 20, 24, 25], "defin": [6, 7, 11, 18, 22, 23, 24, 25], "new": [6, 10, 11, 17, 22], "run": [6, 7, 11, 12, 22, 25], "done": [6, 7, 12, 13, 14, 17, 22, 23, 25], "error": [6, 7, 11, 12, 13, 14, 22, 25], "pyexperiment": [7, 11, 16, 17, 19, 21, 23, 25], "o": [7, 11, 12, 13, 14, 24], "path": [7, 10, 12, 13, 14, 17, 21, 22, 23, 24], "join": [7, 12, 13, 14, 24], "experiment_configur": [7, 22], "cfg": [7, 12, 13, 14, 21, 22], "database_credenti": [7, 21, 22], "database_nam": [7, 22, 23], "name": [7, 9, 10, 11, 12, 13, 14, 17, 19, 22, 23], "handl": [7, 11], "initi": [7, 10, 14], "collect": [7, 18], "experi": [7, 9, 10, 11, 18, 19, 25], "respect": 7, "result": [7, 9, 11, 12, 18, 19, 23, 24, 25], "set_config_valu": 7, "section_nam": 7, "modifi": [7, 11, 14, 20], "configur": [7, 10, 11, 18, 25], "so": [7, 12, 17, 20, 22], "within": [7, 11, 18, 23, 24], "given": [7, 11, 12, 13, 14, 17, 21, 22, 23, 24], "properti": [7, 18], "identifi": [7, 23], "i": [7, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25], "overwritten": [7, 24], "wa": [7, 11, 18, 23], "exist": [7, 10, 12, 13, 14, 17, 22], "beforehand": [7, 22], "The": [7, 11, 12, 13, 14, 17, 18, 19, 20, 22, 23, 24, 25], "section": [7, 22, 23, 24], "which": [7, 11, 12, 13, 17, 22, 23, 25], "should": [7, 12, 13, 14, 17, 23], "set": [7, 11, 12, 14, 18, 22, 25], "whose": [7, 23], "rais": [7, 12, 13], "If": [7, 10, 12, 13, 14, 16, 17, 21, 22, 23], "either": [7, 17, 23], "miss": [7, 11], "ha": [7, 11, 12, 13, 14, 16, 17, 21, 22, 23, 24, 25], "invalid": 7, "inform": [7, 10, 11, 17, 22, 24, 25], "get_config_valu": 7, "return": [7, 10], "type": [7, 23], "nooptionerror": 7, "call": [7, 9, 11, 12, 13, 22, 23, 24], "part": [7, 11, 23, 24], "has_sect": 7, "check": [7, 11, 16, 17, 22], "whether": [7, 20], "true": [7, 12, 13, 14, 23, 24], "otherwis": [7, 17, 20, 25], "has_opt": 7, "_is_valid_configur": 7, "_config": [7, 9], "valid": 7, "e": [7, 11, 12, 13, 14, 17, 19, 22, 23, 24, 25], "necessari": [7, 25], "field": [7, 9, 10, 11, 18], "databas": [7, 9, 10, 11, 12, 13, 14, 17, 18, 19, 24, 25], "mysql": [7, 11, 17, 19, 21, 23, 25], "sqlite": [7, 12, 13, 14, 23], "case": [7, 13, 17, 21, 23, 25], "ar": [7, 11, 12, 13, 14, 17, 18, 19, 22, 23, 24, 25], "avail": [7, 11, 17, 22], "option": [7, 11, 23], "file": [7, 10, 11, 17, 18, 20, 25], "host": [7, 21], "user": [7, 13, 17, 21, 25], "password": [7, 21], "default": [7, 21, 22, 23], "fill_table_from_combin": [7, 12], "add": [7, 11, 17], "row": [7, 11, 13], "tabl": [7, 10, 11, 14, 23, 25], "first": [7, 11, 12, 13, 14, 17, 24], "doe": [7, 10, 12, 13, 14], "been": [7, 11, 16, 17, 23, 25], "afterward": [7, 12, 17], "fill": [7, 11, 14, 23, 24], "To": [7, 12, 13, 14, 17], "end": [7, 13, 17, 23], "cartesian": [7, 12, 13, 22], "product": [7, 12, 13, 19, 22], "built": [7, 17], "each": [7, 11, 12, 22, 23, 25], "make": [7, 13, 17, 22], "up": [7, 13, 18], "note": [7, 12, 13, 14, 22, 23, 24], "onli": [7, 11, 12, 22, 23, 24], "ad": [7, 11, 13, 17, 22, 23], "do": [7, 12, 16, 17, 20, 22, 24], "alreadi": [7, 14], "For": [7, 12, 14, 17, 23], "ani": [7, 12, 17, 20, 22, 23, 24, 25], "match": 7, "In": [7, 11, 13, 17, 18, 23, 25], "follow": [7, 17, 19, 20, 22, 23, 24, 25], "exampl": [7, 16, 17, 18, 22, 23, 24], "method": [7, 9, 11, 12, 13, 14, 17], "a2": 7, "2": [7, 12, 13, 14, 19, 23], "4": [7, 12, 13, 14, 19, 22, 23], "b": [7, 17], "c": [7, 11, 20], "cat": 7, "dog": 7, "accord": [7, 11, 12, 13, 17, 22, 23], "four": [7, 23], "predefin": 7, "dictionari": [7, 9], "possibl": [7, 23], "fill_table_from_config": [7, 13, 14, 22], "build": [7, 11, 17, 19], "fill_table_with_row": [7, 13, 22], "A": [7, 17, 20, 22, 23, 25], "entri": [7, 12, 13, 23, 24], "made": [7, 17], "pair": [7, 9], "valueerror": [7, 12, 13, 17], "experiment_funct": [7, 13, 22], "callabl": 7, "resultprocessor": [7, 9, 11, 12, 13, 14, 24], "max_experi": [7, 11, 12, 13, 14, 22], "pull": [7, 11, 25], "open": [7, 11, 12, 13, 14, 22, 25], "them": [7, 9, 11, 12, 17], "mani": [7, 11, 22], "process": [7, 9, 12, 13, 24, 25], "start": [7, 11, 17, 18, 23], "specifi": [7, 14, 18, 23], "n_job": [7, 11, 14, 23], "singl": [7, 11, 12, 13, 14, 18, 23, 24], "sequenti": [7, 14, 22], "until": [7, 22], "after": [7, 12, 13, 17, 18, 25], "can": [7, 9, 11, 12, 13, 14, 16, 17, 18, 19, 22, 23, 24, 25], "continu": [7, 16], "written": [7, 12, 13, 22, 24], "dure": [7, 11, 22, 24, 25], "via": [7, 11, 12, 13, 17, 18, 19, 23], "success": 7, "correspond": [7, 14, 19, 21, 22, 23, 25], "occur": [7, 17, 22], "chang": [7, 11, 17], "log": [7, 9, 11, 14, 17, 22, 23, 24, 25], "therefor": [7, 11, 13, 17], "befor": [7, 17], "local": [7, 12, 13, 14, 17], "appear": 7, "function": [7, 11, 17, 18, 22, 23, 25], "differ": [7, 14, 18, 22, 24, 25], "parametr": 7, "number": [7, 12, 13, 14, 23], "wrong": [7, 11], "data": [7, 12, 13, 14, 23], "_worker": 7, "worker": [7, 11], "repeatedli": 7, "_execution_work": 7, "_execution_wrapp": [7, 11, 13], "one": [7, 10, 12, 13, 14, 17, 18, 23], "Then": [7, 17], "therebi": [7, 18, 19, 23], "updat": [7, 11], "have": [7, 11, 13, 14, 16, 17, 22, 23, 24], "when": [7, 11, 17, 21, 23], "directli": [7, 17, 23], "finish": 7, "successfulli": 7, "noexperimentslefterror": 7, "left": 7, "delet": [7, 22], "again": [7, 13, 17], "reset": [7, 11, 13, 25], "variabl": [7, 14], "length": 7, "argument": 7, "multipl": [7, 11, 12, 13, 24], "drop": 7, "addition": [7, 12, 13, 14, 17, 22, 23, 25], "associ": [7, 20], "pd": [7, 13], "result_logg": 9, "formatt": 9, "file_handl": 9, "credential_path": 9, "result_field": 9, "experiment_id": [9, 14, 23], "whenev": 9, "you": [9, 12, 13, 14, 16, 17, 22, 23, 24], "want": [9, 13, 17, 22, 23], "write": [9, 11, 12, 13, 14, 23, 24, 25], "process_result": [9, 12, 13, 14, 24], "param": [9, 10], "_add_timestamps_to_result": 9, "process_log": [9, 14, 24], "_change_statu": 9, "_write_error": 9, "error_msg": 9, "_set_machin": 9, "machine_id": 9, "_set_nam": 9, "_valid_result_field": 9, "load_config": 10, "load": [10, 13], "get_keyfield_data": 10, "extract_db_credentials_and_table_name_from_config": 10, "automat": [10, 11, 17, 19, 25], "mysql_connector": 10, "get_keyfield_nam": 10, "get_keyfield": 10, "get_result_field_nam": 10, "get_resultfield": 10, "extract_column": 10, "clean": 10, "timestamps_for_result_field": 10, "add_timestep_result_column": 10, "result_field_configur": 10, "extract_logt": 10, "experiment_table_nam": 10, "combine_fill_table_paramet": 10, "_generate_int_data": 10, "keyfield_valu": [10, 13], "get_timestamp_represent": 10, "allow": [11, 17, 18, 23], "increment": 11, "describ": [11, 13, 17, 23], "detail": [11, 17], "usag": [11, 12, 15, 23, 24], "rework": 11, "larg": 11, "addit": [11, 17, 18, 21, 23, 25], "issu": [11, 16], "notebook": [11, 12, 13, 14], "caus": 11, "fail": [11, 25], "due": [11, 12, 13, 14, 17], "directori": [11, 12, 13, 14], "improv": [11, 17], "cover": [11, 23], "extend": 11, "date": 11, "now": [11, 14], "support": [11, 12, 18, 23], "python": [11, 17, 19], "version": [11, 14, 17, 19], "9": [11, 12, 13, 14, 17, 19], "identif": 11, "id": [11, 12, 13, 14, 22, 23], "instead": [11, 12, 14, 23], "stack": 11, "trace": 11, "correctli": [11, 17], "connector": [11, 19], "implement": 11, "multiprocess": 11, "joblib": [11, 19], "random_ord": 11, "need": [11, 12, 13, 14, 17, 21, 22], "anymor": 11, "remov": 11, "reflect": 11, "workflow": 11, "push": [11, 17], "websit": [11, 17], "separ": [11, 17, 22, 23], "branch": [11, 17], "gh": 11, "api": [11, 19], "access": [11, 21, 22], "readm": [11, 19], "refer": [11, 17], "convert": 11, "project": [11, 17, 18], "pyproject": [11, 17], "toml": [11, 17], "poetri": [11, 19], "depend": [11, 12, 17, 19], "itself": [11, 17], "well": [11, 12, 14, 18, 23], "develop": [11, 13, 19], "cpu": 11, "max": 11, "renam": 11, "spawn": 11, "onc": [11, 24, 25], "advanc": 11, "complet": 11, "select": [11, 17], "includ": [11, 17, 19, 20, 25], "random": [11, 12, 13, 14, 25], "limit": [11, 12, 13, 18, 20], "same": [11, 12, 13, 14, 17, 23], "transact": 11, "its": [11, 22], "reach": 11, "hold": 11, "py": [11, 13, 17, 19], "abl": 11, "get": [11, 14], "final": [11, 17, 24, 25], "paper": 11, "draft": 11, "latest": [11, 17], "referenc": 11, "bugfix": 11, "order": 11, "db": 11, "unfavor": 11, "see": [11, 17], "abov": [11, 13, 14, 20, 22, 23, 24], "simpl": 11, "runner": 11, "github": [11, 16, 17, 19], "action": [11, 18, 20], "instal": [11, 12, 13, 14, 17, 18], "packag": [11, 17, 19], "lock": [11, 17], "cach": 11, "virtual": 11, "environ": [11, 17], "prevent": 11, "everi": [11, 14, 23], "time": [11, 12, 13, 17, 18, 24], "cut": 11, "down": 11, "ci": 11, "roundtrip": 11, "It": [11, 12, 13, 17, 18, 23], "matrix": 11, "variou": 11, "7": [11, 12, 13, 14, 19], "8": [11, 12, 13, 14, 17, 19, 23], "ubuntu": 11, "maco": 11, "window": 11, "exclud": 11, "sinc": [11, 18], "some": [11, 13, 14, 17, 23, 24], "take": 11, "veri": [11, 17], "long": [11, 23], "restructur": 11, "shortcut": 11, "longer": 11, "integ": [11, 23], "timestep": 11, "give": [11, 17], "instanc": [11, 25], "parallel": [11, 12, 13, 18, 23], "hpc": [11, 12, 13, 18, 22], "cluster": 11, "obtain": [11, 12, 13, 14, 20], "current": [11, 22, 23], "easili": [11, 12, 13, 14, 19, 22, 25], "export": [11, 22, 25], "g": [11, 13, 17, 19, 22, 24], "latex": [11, 22, 25], "robust": 11, "creation": 11, "jupyt": 11, "explain": [11, 23], "how": [11, 14, 16, 22], "grid": [11, 14, 15, 22, 25], "duplic": 11, "string": [11, 23], "quotat": [11, 23], "mark": [11, 23], "compon": 11, "No": 11, "summari": 11, "releas": 11, "show": [12, 13, 14], "we": [12, 14, 17], "programmat": 12, "vector": 12, "machin": [12, 13, 14, 17, 19, 25], "entir": 12, "pip": [12, 13, 14, 17, 19], "scikit": [12, 13, 14], "learn": [12, 13, 14, 19], "further": [12, 13, 14, 16, 17, 22, 23, 25], "explan": [12, 13, 14], "about": [12, 13, 17], "found": [12, 13, 14, 17, 22, 23, 24, 25], "here": [12, 13, 24], "import": [12, 13, 14, 17, 22, 24], "content": [12, 13, 14, 22], "example_conditional_grid": 12, "dataset": [12, 13, 14, 22, 23, 24], "cross_validation_split": [12, 13, 14, 22, 23], "seed": [12, 13, 14, 22, 23, 24, 25], "kernel": [12, 13, 14, 22, 23], "gamma": [12, 13, 14], "decim": [12, 13, 23], "degre": 12, "coef0": 12, "train_f1": [12, 13, 23, 24], "train_accuraci": [12, 13, 14, 23, 24], "test_f1": [12, 13, 14, 23, 24], "test_accuraci": [12, 13, 14, 23, 24], "timestamp": [12, 13, 14, 23], "custom": [12, 13, 14], "sample_data": [12, 13, 14, 23], "mkdir": [12, 13, 14], "w": [12, 13, 14], "f": [12, 13, 14], "next": [12, 13, 14], "dummi": [12, 13, 14], "reason": [12, 13, 14], "code": [12, 13, 17, 22, 23, 24, 25], "meant": [12, 13, 23, 24], "core": [12, 13, 17, 19], "numpi": [12, 13, 14, 17, 19], "np": [12, 13, 14, 24], "sklearn": [12, 13, 14], "load_iri": [12, 13, 14], "model_select": [12, 13, 14], "cross_valid": [12, 13, 14], "pipelin": [12, 13, 14, 23, 24], "make_pipelin": [12, 13, 14], "preprocess": [12, 13, 14], "standardscal": [12, 13, 14], "svm": [12, 13, 14], "svc": [12, 13, 14], "sleep": 12, "randint": 12, "def": [12, 13, 14, 24], "run_svm": 12, "custom_config": [12, 13, 14], "0": [12, 13, 14, 19], "5": [12, 13, 14, 19, 23], "x": [12, 13, 14], "y": [12, 13, 14], "target": [12, 13, 14], "linear": [12, 13, 14, 23], "elif": 12, "poli": [12, 13, 14, 22, 23], "rbf": [12, 13, 14, 23], "model": [12, 13, 14], "iri": [12, 13, 14, 23], "score": [12, 13, 14, 24], "cv": [12, 13, 14], "accuraci": [12, 13, 14], "f1_micro": [12, 13, 14], "return_train_scor": [12, 13, 14], "mean": [12, 13, 14, 18, 22, 24], "train_f1_micro": [12, 13, 14, 24], "test_f1_micro": [12, 13, 14, 24], "actual": [12, 13, 14, 17, 22, 23], "step": [12, 13, 17, 23, 25], "previous": [12, 13, 22], "job": [12, 13, 14, 22], "especi": [12, 13, 23], "3": [12, 13, 14, 17, 18, 19], "svm_experimenter_01": 12, "fix": [12, 23], "three": 12, "line": [12, 13, 22, 23], "present": 12, "nan": [12, 13], "thu": 12, "uncondition": 12, "creation_d": [12, 13, 14], "start_dat": [12, 13, 14], "end_dat": [12, 13, 14], "2023": [12, 13, 14], "03": [12, 13], "31": [12, 13], "20": [12, 13, 14], "48": 12, "29": 12, "6": [12, 13, 14, 23], "10": [12, 13, 14, 23], "11": [12, 13, 14, 19], "12": [12, 13, 14], "13": [12, 13, 14], "14": [12, 13, 14], "15": [12, 14, 19], "16": [12, 14], "17": [12, 14], "18": [12, 14], "19": [12, 14], "21": 12, "22": 12, "23": 12, "24": [12, 22], "25": 12, "26": 12, "27": 12, "28": 12, "30": 12, "32": 12, "33": 12, "34": [12, 13], "35": 12, "36": 12, "37": 12, "38": 12, "39": 12, "40": 12, "41": 12, "42": [12, 13, 22], "43": [12, 14], "44": 12, "45": 12, "46": 12, "47": [12, 13, 14], "49": 12, "50": [12, 14], "51": 12, "52": 12, "53": 12, "54": 12, "55": 12, "other": [12, 13, 17, 20, 23], "just": [12, 13, 14], "predifin": [12, 13, 14], "replac": [12, 13, 14, 17], "amount": [12, 13, 14], "relat": [12, 13, 14, 16], "macbook": [12, 13, 14], "pro": [12, 13, 14], "von": [12, 13, 14], "975": 12, "966667": [12, 13, 14], "57": 12, "58": 12, "59": 12, "00": 12, "01": [12, 14], "02": 12, "04": [12, 14], "08": 12, "over": [13, 14, 24, 25], "extract": [13, 24, 25], "example_general_usag": 13, "sigmoid": [13, 14, 23], "longtext": [13, 23], "run_ml": [13, 14, 24], "read_csv": 13, "example_notebook": [13, 14], "error_dataset": 13, "09": 13, "root": 13, "traceback": 13, "most": 13, "recent": 13, "last": 13, "370": 13, "custom_field": [13, 24], "var": 13, "folder": [13, 17, 23], "8l": 13, "vv83bgdn0zg97jp8pbsfxq040000gn": 13, "t": [13, 16, 19], "ipykernel_13290": 13, "1244630566": 13, "standardsca": 13, "971667": [13, 14], "936667": [13, 14], "933333": [13, 14], "975000": [13, 14], "896667": [13, 14], "893333": [13, 14], "n": [13, 17], "u": 13, "As": [13, 23], "those": [13, 18, 25], "were": 13, "anoth": [13, 17], "try": [13, 17], "also": [13, 14, 17, 22, 23, 24], "simpli": 13, "pass": [13, 23], "thei": [13, 23], "aggreg": [13, 18], "result_table_agg": 13, "groupbi": [13, 22], "numeric_onli": 13, "945": 13, "94": 13, "style": 13, "to_latex": [13, 22], "begin": [13, 17], "tabular": 13, "lr": 13, "amp": 13, "940000": 13, "understand": [14, 17], "basic": 14, "pyexeriment": 14, "purpos": [14, 20], "demonstr": [14, 24], "howev": [14, 18, 23], "slightli": 14, "adapt": [14, 17], "goal": 14, "small": 14, "find": [14, 16], "best": 14, "search": 14, "perform": [14, 18, 23, 24], "example_logt": 14, "best_kernel_f1": 14, "varchar": [14, 23], "best_kernel_accuraci": 14, "train_scor": 14, "log_train_scor": 14, "doubl": 14, "f1": 14, "iter": 14, "init": 14, "performance_f1": 14, "performance_accuraci": 14, "reproduc": [14, 17], "read": [14, 18], "implicit": 14, "question": 16, "problem": [16, 17], "don": 16, "know": 16, "mayb": 16, "suitabl": [16, 17], "solut": 16, "someon": [16, 17], "els": [16, 17], "similar": [16, 17], "situat": 16, "could": [16, 17], "anyth": 16, "pleas": [16, 17, 22], "would": [17, 23], "appreci": 17, "idea": 17, "bug": 17, "sure": [17, 22], "had": 17, "feedback": 17, "plan": 17, "work": [17, 18, 21], "yourself": 17, "like": [17, 23, 24], "great": 17, "comment": 17, "what": 17, "exactli": 17, "At": 17, "your": [17, 24], "mention": 17, "review": 17, "third": 17, "person": [17, 20], "vision": 17, "featur": [17, 22, 23, 25], "go": 17, "summar": [17, 22], "titl": 17, "neccessari": 17, "report": [17, 18], "descript": [17, 19], "produc": 17, "assumpt": [17, 25], "think": 17, "And": 17, "label": 17, "usabl": 17, "enhanc": 17, "help": [17, 23], "face": 17, "provic": 17, "fork": 17, "git": 17, "blog": 17, "post": 17, "repositori": [17, 19], "click": 17, "button": 17, "top": 17, "right": [17, 20], "corner": 17, "clone": 17, "On": [17, 18], "command": 17, "ensur": 17, "usernam": 17, "http": [17, 19], "com": [17, 19], "remot": 17, "origin": 17, "upstream": 17, "switch": 17, "feature_branch_nam": 17, "meaning": 17, "fetch": 17, "v": 17, "checkout": 17, "anaconda": 17, "conda": 17, "env": 17, "activ": 17, "pandoc": 17, "articl": 17, "suggest": 17, "navig": 17, "pytest": [17, 19], "succeed": 17, "manual": [17, 18, 23, 25], "upgrad": 17, "manag": [17, 18, 22], "tool": [17, 18, 19], "declar": 17, "upload": 17, "instruct": 17, "than": [17, 23], "ones": 17, "below": [17, 23, 25], "NOT": [17, 20], "out": [17, 20, 22], "specif": 17, "second": 17, "package_nam": 17, "dev": [17, 19], "group": [17, 19], "dist": 17, "good": 17, "mandatori": 17, "locat": [17, 21, 22, 23], "structur": [17, 25], "affect": 17, "succe": 17, "without": [17, 20, 22], "But": 17, "test_run_experi": 17, "test_run_mysql_experi": 17, "doc": 17, "shinx": 17, "output": 17, "html": 17, "sourc": 17, "correct": 17, "destin": 17, "full": 17, "did": 17, "facilit": 18, "setup": [18, 25], "subsequ": 18, "evalu": [18, 24], "empir": 18, "studi": 18, "algorithm": 18, "particular": [18, 20], "design": [18, 25], "reduc": 18, "involv": 18, "effort": 18, "significantli": 18, "intend": [18, 19], "research": [18, 19], "artifici": [18, 19], "intellig": [18, 19], "analysi": 18, "often": 18, "accompani": 18, "input": [18, 23, 25], "variant": 18, "measur": 18, "individu": 18, "usual": [18, 23], "independ": 18, "distribut": [18, 20, 25], "manner": [18, 19], "system": [18, 19, 22, 25], "requir": [18, 19], "extens": 18, "monitor": 18, "restart": [18, 25], "tediou": [18, 23], "consum": 18, "These": 18, "challeng": 18, "address": 18, "central": 18, "massiv": 18, "allevi": 18, "aforement": 18, "overhead": 18, "eas": 18, "easiest": 18, "dive": 18, "our": [18, 23], "partial": 18, "german": 18, "feder": 18, "ministri": 18, "econom": 18, "affair": 18, "climat": 18, "fleme": 18, "03e16012f": 18, "foundat": 18, "dfg": 18, "collabor": 18, "center": 18, "fly": 18, "comput": [18, 23, 25], "sfb": 18, "901": 18, "160364472": 18, "pypi": 19, "ml": 19, "captur": 19, "unifi": 19, "author": [19, 20], "ai": 19, "uni": 19, "hannov": 19, "de": 19, "stud": 19, "h": 19, "upb": 19, "ifi": 19, "lmu": 19, "unisabana": 19, "edu": 19, "co": 19, "licens": 19, "mit": [19, 20], "md": 19, "io": 19, "keyword": 19, "executor": 19, "classifi": 19, "stabl": 19, "audienc": 19, "scienc": 19, "topic": 19, "scientif": 19, "engin": 19, "program": 19, "languag": 19, "jupyterlab": 19, "mock": 19, "nbsphinx": 19, "galleri": 19, "rtd": 19, "theme": 19, "recommonmark": 19, "freezegun": 19, "backend": [19, 23], "masonri": 19, "copyright": 20, "2021": 20, "2022": 20, "permiss": 20, "herebi": 20, "grant": 20, "free": 20, "charg": 20, "copi": 20, "softwar": 20, "deal": 20, "restrict": 20, "merg": 20, "publish": 20, "sublicens": 20, "sell": 20, "permit": 20, "whom": 20, "furnish": 20, "subject": 20, "notic": 20, "shall": 20, "substanti": 20, "portion": 20, "THE": 20, "AS": 20, "warranti": 20, "OF": 20, "kind": 20, "express": 20, "OR": 20, "impli": 20, "BUT": 20, "TO": 20, "merchant": 20, "fit": 20, "FOR": 20, "AND": 20, "noninfring": 20, "IN": 20, "NO": 20, "event": 20, "holder": 20, "BE": 20, "liabl": 20, "claim": 20, "damag": 20, "liabil": 20, "contract": 20, "tort": 20, "aris": [20, 25], "WITH": 20, "By": 21, "explicitli": [21, 23], "few": 22, "run_experi": [22, 24], "someth": 22, "assum": 22, "overwrit": 22, "two": [22, 23], "altern": [22, 23], "more": [22, 23, 24], "complex": 22, "new_data": 22, "new_data_2": 22, "funtion": 22, "determin": 22, "fashion": 22, "comma": [22, 23], "readi": 22, "termin": 22, "interrupt": 22, "result_t": 22, "print": 22, "index_nam": 22, "primarili": 23, "main": 23, "paragraph": 23, "subsect": 23, "new_best_perform": [23, 24], "epoch": [23, 24], "logepoch": 23, "runtim": [23, 24], "float": 23, "furthermor": [23, 24], "togeth": 23, "henc": 23, "thought": 23, "exponenti": 23, "sever": 23, "annot": 23, "keyfield_datatyp": 23, "datatyp": 23, "255": 23, "domain": [23, 25], "neither": 23, "nor": 23, "whitespac": 23, "definit": 23, "task": 23, "size": 23, "form": 23, "stepsiz": 23, "explicit": 23, "store": 23, "resultfield_nam": [23, 24], "resultfield_datatyp": 23, "arbitrarili": 23, "obtatin": 23, "enabl": 23, "interet": 23, "intermedi": 23, "might": 23, "regularili": 23, "databs": 23, "logtable_datatyp": 23, "prefix": 23, "__": 23, "format": 23, "belong": 23, "datetim": 23, "depth": [23, 24], "showcas": [23, 24], "maximum": 23, "under": 23, "ignor": 23, "start_tim": 24, "loop": 24, "while": 24, "stuff": 24, "min": 24, "break": 24, "test": 24, "re": 24, "old": 24, "subset": [24, 25], "resultfield_valu": 24, "logtable_field_nam": 24, "logtable_field_valu": 24, "schema": 25, "figur": 25, "uniqu": 25, "certain": 25, "through": 25, "back": 25, "desir": 25, "jointli": 25, "averag": 25, "view": 25}, "objects": {"": [[8, 0, 0, "-", "py_experimenter"]], "py_experimenter": [[2, 0, 0, "-", "database_connector"], [3, 0, 0, "-", "database_connector_lite"], [4, 0, 0, "-", "database_connector_mysql"], [5, 0, 0, "-", "exceptions"], [6, 0, 0, "-", "experiment_status"], [7, 0, 0, "-", "experimenter"], [9, 0, 0, "-", "result_processor"], [10, 0, 0, "-", "utils"]], "py_experimenter.database_connector": [[2, 1, 1, "", "DatabaseConnector"]], "py_experimenter.database_connector.DatabaseConnector": [[2, 2, 1, "", "_check_combination_in_existing_rows"], [2, 2, 1, "", "_compute_columns"], [2, 2, 1, "", "_create_table"], [2, 2, 1, "", "_delete_experiments_with_condition"], [2, 2, 1, "", "_exclude_fixed_columns"], [2, 2, 1, "", "_execute_queries"], [2, 2, 1, "", "_extract_credentials"], [2, 2, 1, "", "_get_create_table_query"], [2, 2, 1, "", "_get_existing_rows"], [2, 2, 1, "", "_get_experiments_with_condition"], [2, 2, 1, "", "_pop_experiments_with_status"], [2, 2, 1, "", "_prepare_update_query"], [2, 2, 1, "", "_pull_open_experiment"], [2, 2, 1, "", "_table_exists"], [2, 2, 1, "", "_table_has_correct_structure"], [2, 2, 1, "", "_test_connection"], [2, 2, 1, "", "_write_to_database"], [2, 2, 1, "", "close_connection"], [2, 2, 1, "", "commit"], [2, 2, 1, "", "connect"], [2, 2, 1, "", "create_table_if_not_existing"], [2, 2, 1, "", "cursor"], [2, 2, 1, "", "delete_table"], [2, 2, 1, "", "execute"], [2, 2, 1, "", "execute_queries"], [2, 2, 1, "", "fetchall"], [2, 2, 1, "", "fill_table"], [2, 2, 1, "", "get_autoincrement"], [2, 2, 1, "", "get_experiment_configuration"], [2, 2, 1, "", "get_logtable"], [2, 2, 1, "", "get_structure_from_table"], [2, 2, 1, "", "get_table"], [2, 2, 1, "", "not_executed_yet"], [2, 2, 1, "", "reset_experiments"], [2, 2, 1, "", "update_database"]], "py_experimenter.database_connector_lite": [[3, 1, 1, "", "DatabaseConnectorLITE"]], "py_experimenter.database_connector_lite.DatabaseConnectorLITE": [[3, 2, 1, "", "_extract_credentials"], [3, 2, 1, "", "_get_existing_rows"], [3, 3, 1, "", "_prepared_statement_placeholder"], [3, 2, 1, "", "_pull_open_experiment"], [3, 2, 1, "", "_table_exists"], [3, 2, 1, "", "_table_has_correct_structure"], [3, 2, 1, "", "_test_connection"], [3, 3, 1, "", "_write_to_database_separator"], [3, 2, 1, "", "connect"], [3, 2, 1, "", "escape_sql_chars"], [3, 2, 1, "", "get_autoincrement"], [3, 2, 1, "", "get_structure_from_table"]], "py_experimenter.database_connector_mysql": [[4, 1, 1, "", "DatabaseConnectorMYSQL"]], "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL": [[4, 2, 1, "", "_create_database_if_not_existing"], [4, 2, 1, "", "_extract_credentials"], [4, 2, 1, "", "_get_existing_rows"], [4, 3, 1, "", "_prepared_statement_placeholder"], [4, 2, 1, "", "_pull_open_experiment"], [4, 2, 1, "", "_start_transaction"], [4, 2, 1, "", "_table_exists"], [4, 2, 1, "", "_table_has_correct_structure"], [4, 2, 1, "", "_test_connection"], [4, 3, 1, "", "_write_to_database_separator"], [4, 2, 1, "", "connect"], [4, 2, 1, "", "escape_sql_chars"], [4, 2, 1, "", "get_autoincrement"], [4, 2, 1, "", "get_structure_from_table"]], "py_experimenter.exceptions": [[5, 4, 1, "", "ConfigError"], [5, 4, 1, "", "CreatingTableError"], [5, 4, 1, "", "DatabaseConnectionError"], [5, 4, 1, "", "DatabaseCreationError"], [5, 4, 1, "", "DatabaseError"], [5, 4, 1, "", "DatabaseQueryError"], [5, 4, 1, "", "EmptyFillDatabaseCallError"], [5, 4, 1, "", "InvalidConfigError"], [5, 4, 1, "", "InvalidResultFieldError"], [5, 4, 1, "", "InvalidValuesInConfiguration"], [5, 4, 1, "", "MissingLogTableError"], [5, 4, 1, "", "NoConfigFileError"], [5, 4, 1, "", "NoExperimentsLeftException"], [5, 4, 1, "", "ParameterCombinationError"], [5, 4, 1, "", "PyExperimenterError"], [5, 4, 1, "", "TableHasWrongStructureError"]], "py_experimenter.experiment_status": [[6, 1, 1, "", "ExperimentStatus"]], "py_experimenter.experiment_status.ExperimentStatus": [[6, 3, 1, "", "ALL"], [6, 3, 1, "", "CREATED"], [6, 3, 1, "", "DONE"], [6, 3, 1, "", "ERROR"], [6, 3, 1, "", "RUNNING"]], "py_experimenter.experimenter": [[7, 1, 1, "", "PyExperimenter"]], "py_experimenter.experimenter.PyExperimenter": [[7, 2, 1, "", "_execution_worker"], [7, 2, 1, "", "_execution_wrapper"], [7, 2, 1, "", "_is_valid_configuration"], [7, 2, 1, "", "_worker"], [7, 2, 1, "", "delete_table"], [7, 2, 1, "", "execute"], [7, 2, 1, "", "fill_table_from_combination"], [7, 2, 1, "", "fill_table_from_config"], [7, 2, 1, "", "fill_table_with_rows"], [7, 2, 1, "", "get_config_value"], [7, 2, 1, "", "get_logtable"], [7, 2, 1, "", "get_table"], [7, 2, 1, "", "has_option"], [7, 2, 1, "", "has_section"], [7, 2, 1, "", "reset_experiments"], [7, 2, 1, "", "set_config_value"]], "py_experimenter.result_processor": [[9, 1, 1, "", "ResultProcessor"], [9, 5, 1, "", "file_handler"], [9, 5, 1, "", "formatter"], [9, 5, 1, "", "result_logger"]], "py_experimenter.result_processor.ResultProcessor": [[9, 2, 1, "", "_add_timestamps_to_results"], [9, 2, 1, "", "_change_status"], [9, 2, 1, "", "_set_machine"], [9, 2, 1, "", "_set_name"], [9, 2, 1, "", "_valid_result_fields"], [9, 2, 1, "", "_write_error"], [9, 2, 1, "", "process_logs"], [9, 2, 1, "", "process_results"]], "py_experimenter.utils": [[10, 6, 1, "", "_generate_int_data"], [10, 6, 1, "", "add_timestep_result_columns"], [10, 6, 1, "", "combine_fill_table_parameters"], [10, 6, 1, "", "extract_columns"], [10, 6, 1, "", "extract_db_credentials_and_table_name_from_config"], [10, 6, 1, "", "extract_logtables"], [10, 6, 1, "", "get_keyfield_data"], [10, 6, 1, "", "get_keyfield_names"], [10, 6, 1, "", "get_keyfields"], [10, 6, 1, "", "get_result_field_names"], [10, 6, 1, "", "get_resultfields"], [10, 6, 1, "", "get_timestamp_representation"], [10, 6, 1, "", "load_config"], [10, 6, 1, "", "timestamps_for_result_fields"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:exception", "5": "py:data", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "exception", "Python exception"], "5": ["py", "data", "Python data"], "6": ["py", "function", "Python function"]}, "titleterms": {"author": 0, "core": 0, "develop": [0, 17], "team": 0, "contribut": [0, 17], "api": 1, "refer": 1, "py_experiment": [2, 3, 4, 5, 6, 7, 8, 9, 10], "database_connector": 2, "modul": [2, 3, 4, 5, 6, 7, 9, 10], "content": [2, 3, 4, 5, 6, 7, 9, 10], "class": [2, 3, 4, 6, 7, 9], "database_connector_lit": 3, "database_connector_mysql": 4, "except": 5, "experiment_statu": 6, "experiment": 7, "submodul": 8, "result_processor": 9, "attribut": 9, "util": 10, "function": [10, 12, 13, 14, 24], "changelog": 11, "v1": 11, "2": 11, "0": 11, "04": 11, "2023": 11, "featur": 11, "exampl": [11, 12, 13, 14, 15], "fix": 11, "test": [11, 17], "1": 11, "21": 11, "11": 11, "2022": 11, "09": 11, "v0": 11, "6": 11, "01": 11, "03": 11, "5": 11, "17": 11, "4": 11, "02": 11, "2021": 11, "3": 11, "20": 11, "10": 11, "14": 11, "condit": 12, "paramet": 12, "grid": 12, "experi": [12, 13, 14, 22, 23, 24], "configur": [12, 13, 14, 22, 23], "file": [12, 13, 14, 21, 22, 23], "defin": [12, 13, 14], "execut": [12, 13, 14, 22, 23], "pyexperiment": [12, 13, 14, 18, 22], "initi": [12, 13], "fill": [12, 13, 22], "tabl": [12, 13, 22], "gener": 13, "usag": [13, 14, 25], "restart": 13, "fail": 13, "result": [13, 14, 22], "print": 13, "latex": 13, "logtabl": [14, 23, 24], "run": 14, "check": 14, "need": 16, "help": 16, "how": 17, "creat": [17, 22], "an": 17, "issu": 17, "setup": 17, "workflow": 17, "us": 17, "poetri": 17, "extend": 17, "unit": 17, "updat": 17, "document": [17, 18], "pull": 17, "request": 17, "welcom": 18, "": 18, "acknowledg": 18, "instal": 19, "licens": 20, "databas": [21, 22, 23], "credenti": 21, "from": 22, "With": 22, "specif": 22, "row": 22, "reset": 22, "obtain": 22, "inform": 23, "keyfield": 23, "resultfield": [23, 24], "custom": 23, "field": 23, "push": 24, "data": 24, "To": 24}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"Authors": [[0, "authors"]], "Core Development Team": [[0, "core-development-team"]], "Contributions": [[0, "contributions"]], "API Reference": [[1, "api-reference"]], "py_experimenter.database_connector": [[2, "module-py_experimenter.database_connector"]], "Module Contents": [[2, "module-contents"], [3, "module-contents"], [4, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [9, "module-contents"], [10, "module-contents"]], "Classes": [[2, "classes"], [3, "classes"], [4, "classes"], [6, "classes"], [7, "classes"], [9, "classes"]], "py_experimenter.database_connector_lite": [[3, "module-py_experimenter.database_connector_lite"]], "py_experimenter.database_connector_mysql": [[4, "module-py_experimenter.database_connector_mysql"]], "py_experimenter.exceptions": [[5, "module-py_experimenter.exceptions"]], "py_experimenter.experiment_status": [[6, "module-py_experimenter.experiment_status"]], "py_experimenter.experimenter": [[7, "module-py_experimenter.experimenter"]], "py_experimenter": [[8, "module-py_experimenter"]], "Submodules": [[8, "submodules"]], "py_experimenter.result_processor": [[9, "module-py_experimenter.result_processor"]], "Attributes": [[9, "attributes"]], "py_experimenter.utils": [[10, "module-py_experimenter.utils"]], "Functions": [[10, "functions"]], "Changelog": [[11, "changelog"]], "v1.2.0 (04/04/2023)": [[11, "v1-2-0-04-04-2023"]], "Feature": [[11, "feature"], [11, "id1"], [11, "id5"]], "Examples": [[11, "examples"], [11, "id2"], [11, "id6"], [15, "examples"]], "Fix": [[11, "fix"], [11, "id3"], [11, "id7"]], "Tests": [[11, "tests"], [11, "id4"], [11, "id8"]], "v1.1.0 (21/11/2022)": [[11, "v1-1-0-21-11-2022"]], "v1.0.0 (04/09/2022)": [[11, "v1-0-0-04-09-2022"]], "v0.0.6 (01/03/2022)": [[11, "v0-0-6-01-03-2022"]], "v0.0.5 (17/01/2022)": [[11, "v0-0-5-17-01-2022"]], "v0.0.4 (02/11/2021)": [[11, "v0-0-4-02-11-2021"]], "v0.0.3 (20/10/2021)": [[11, "v0-0-3-20-10-2021"]], "v0.0.2 (20/10/2021)": [[11, "v0-0-2-20-10-2021"]], "v0.0.1 (14/10/2021)": [[11, "v0-0-1-14-10-2021"]], "Example: Conditional Parameter Grids": [[12, "Example:-Conditional-Parameter-Grids"]], "Experiment Configuration File": [[12, "Experiment-Configuration-File"], [13, "Experiment-Configuration-File"], [14, "Experiment-Configuration-File"], [23, "experiment-configuration-file"]], "Defining the execution function": [[12, "Defining-the-execution-function"], [13, "Defining-the-execution-function"], [14, "Defining-the-execution-function"]], "Executing PyExperimenter": [[12, "Executing-PyExperimenter"], [13, "Executing-PyExperimenter"], [14, "Executing-PyExperimenter"], [22, "executing-pyexperimenter"]], "Initialize PyExperimenter": [[12, "Initialize-PyExperimenter"], [13, "Initialize-PyExperimenter"]], "Fill Table": [[12, "Fill-Table"], [13, "Fill-Table"]], "Execute PyExperimenter": [[12, "Execute-PyExperimenter"], [13, "Execute-PyExperimenter"]], "Example: General Usage": [[13, "Example:-General-Usage"]], "Restart Failed Experiments": [[13, "Restart-Failed-Experiments"]], "Generating Result Table": [[13, "Generating-Result-Table"]], "Printing LaTex Table": [[13, "Printing-LaTex-Table"]], "Example: Usage of Logtables": [[14, "Example:-Usage-of-Logtables"]], "Run Experiments": [[14, "Run-Experiments"]], "Check results": [[14, "Check-results"]], "Need Help?": [[16, "need-help"]], "How to Contribute": [[17, "how-to-contribute"]], "Creating an Issue": [[17, "creating-an-issue"]], "Setup Development Workflow": [[17, "setup-development-workflow"]], "How to use Poetry": [[17, "how-to-use-poetry"]], "Extend Unit Tests": [[17, "extend-unit-tests"]], "Update Documentation": [[17, "update-documentation"]], "Create Pull Request": [[17, "create-pull-request"]], "Welcome to PyExperimenter\u2019s documentation!": [[18, "welcome-to-pyexperimenter-s-documentation"]], "Acknowledgements": [[18, "acknowledgements"]], "Installation": [[19, "installation"]], "License": [[20, "license"]], "Database Credential File": [[21, "database-credential-file"]], "Creating a PyExperimenter": [[22, "creating-a-pyexperimenter"]], "Fill Database Table": [[22, "fill-database-table"]], "Fill Table From Experiment Configuration File": [[22, "fill-table-from-experiment-configuration-file"]], "Fill Table With Specific Rows": [[22, "fill-table-with-specific-rows"]], "Execute Experiments": [[22, "execute-experiments"]], "Reset Experiments": [[22, "reset-experiments"]], "Obtain Results": [[22, "obtain-results"]], "Database Information": [[23, "database-information"]], "Keyfields": [[23, "keyfields"]], "Resultfields": [[23, "resultfields"]], "Logtables": [[23, "logtables"]], "Execution Information": [[23, "execution-information"]], "Custom Fields": [[23, "custom-fields"]], "Experiment Function": [[24, "experiment-function"]], "Push Data To Resultfields": [[24, "push-data-to-resultfields"]], "Push Data To Logtables": [[24, "push-data-to-logtables"]], "Usage": [[25, "usage"]]}, "indexentries": {"databaseconnector (class in py_experimenter.database_connector)": [[2, "py_experimenter.database_connector.DatabaseConnector"]], "_check_combination_in_existing_rows() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector._check_combination_in_existing_rows"]], "_compute_columns() (py_experimenter.database_connector.databaseconnector static method)": [[2, "py_experimenter.database_connector.DatabaseConnector._compute_columns"]], "_create_table() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector._create_table"]], "_delete_experiments_with_condition() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector._delete_experiments_with_condition"]], "_exclude_fixed_columns() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector._exclude_fixed_columns"]], "_execute_queries() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector._execute_queries"]], "_extract_credentials() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector._extract_credentials"]], "_get_create_table_query() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector._get_create_table_query"]], "_get_existing_rows() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector._get_existing_rows"]], "_get_experiments_with_condition() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector._get_experiments_with_condition"]], "_pop_experiments_with_status() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector._pop_experiments_with_status"]], "_prepare_update_query() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector._prepare_update_query"]], "_pull_open_experiment() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector._pull_open_experiment"]], "_table_exists() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector._table_exists"]], "_table_has_correct_structure() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector._table_has_correct_structure"]], "_test_connection() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector._test_connection"]], "_write_to_database() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector._write_to_database"]], "close_connection() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector.close_connection"]], "commit() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector.commit"]], "connect() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector.connect"]], "create_table_if_not_existing() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector.create_table_if_not_existing"]], "cursor() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector.cursor"]], "delete_table() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector.delete_table"]], "execute() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector.execute"]], "execute_queries() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector.execute_queries"]], "fetchall() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector.fetchall"]], "fill_table() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector.fill_table"]], "get_autoincrement() (py_experimenter.database_connector.databaseconnector static method)": [[2, "py_experimenter.database_connector.DatabaseConnector.get_autoincrement"]], "get_experiment_configuration() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector.get_experiment_configuration"]], "get_logtable() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector.get_logtable"]], "get_structure_from_table() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector.get_structure_from_table"]], "get_table() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector.get_table"]], "module": [[2, "module-py_experimenter.database_connector"], [3, "module-py_experimenter.database_connector_lite"], [4, "module-py_experimenter.database_connector_mysql"], [5, "module-py_experimenter.exceptions"], [6, "module-py_experimenter.experiment_status"], [7, "module-py_experimenter.experimenter"], [8, "module-py_experimenter"], [9, "module-py_experimenter.result_processor"], [10, "module-py_experimenter.utils"]], "not_executed_yet() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector.not_executed_yet"]], "py_experimenter.database_connector": [[2, "module-py_experimenter.database_connector"]], "reset_experiments() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector.reset_experiments"]], "update_database() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector.update_database"]], "databaseconnectorlite (class in py_experimenter.database_connector_lite)": [[3, "py_experimenter.database_connector_lite.DatabaseConnectorLITE"]], "_extract_credentials() (py_experimenter.database_connector_lite.databaseconnectorlite method)": [[3, "py_experimenter.database_connector_lite.DatabaseConnectorLITE._extract_credentials"]], "_get_existing_rows() (py_experimenter.database_connector_lite.databaseconnectorlite method)": [[3, "py_experimenter.database_connector_lite.DatabaseConnectorLITE._get_existing_rows"]], "_prepared_statement_placeholder (py_experimenter.database_connector_lite.databaseconnectorlite attribute)": [[3, "py_experimenter.database_connector_lite.DatabaseConnectorLITE._prepared_statement_placeholder"]], "_pull_open_experiment() (py_experimenter.database_connector_lite.databaseconnectorlite method)": [[3, "py_experimenter.database_connector_lite.DatabaseConnectorLITE._pull_open_experiment"]], "_table_exists() (py_experimenter.database_connector_lite.databaseconnectorlite method)": [[3, "py_experimenter.database_connector_lite.DatabaseConnectorLITE._table_exists"]], "_table_has_correct_structure() (py_experimenter.database_connector_lite.databaseconnectorlite method)": [[3, "py_experimenter.database_connector_lite.DatabaseConnectorLITE._table_has_correct_structure"]], "_test_connection() (py_experimenter.database_connector_lite.databaseconnectorlite method)": [[3, "py_experimenter.database_connector_lite.DatabaseConnectorLITE._test_connection"]], "_write_to_database_separator (py_experimenter.database_connector_lite.databaseconnectorlite attribute)": [[3, "py_experimenter.database_connector_lite.DatabaseConnectorLITE._write_to_database_separator"]], "connect() (py_experimenter.database_connector_lite.databaseconnectorlite method)": [[3, "py_experimenter.database_connector_lite.DatabaseConnectorLITE.connect"]], "escape_sql_chars() (py_experimenter.database_connector_lite.databaseconnectorlite static method)": [[3, "py_experimenter.database_connector_lite.DatabaseConnectorLITE.escape_sql_chars"]], "get_autoincrement() (py_experimenter.database_connector_lite.databaseconnectorlite static method)": [[3, "py_experimenter.database_connector_lite.DatabaseConnectorLITE.get_autoincrement"]], "get_structure_from_table() (py_experimenter.database_connector_lite.databaseconnectorlite method)": [[3, "py_experimenter.database_connector_lite.DatabaseConnectorLITE.get_structure_from_table"]], "py_experimenter.database_connector_lite": [[3, "module-py_experimenter.database_connector_lite"]], "databaseconnectormysql (class in py_experimenter.database_connector_mysql)": [[4, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL"]], "_create_database_if_not_existing() (py_experimenter.database_connector_mysql.databaseconnectormysql method)": [[4, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL._create_database_if_not_existing"]], "_extract_credentials() (py_experimenter.database_connector_mysql.databaseconnectormysql method)": [[4, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL._extract_credentials"]], "_get_existing_rows() (py_experimenter.database_connector_mysql.databaseconnectormysql method)": [[4, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL._get_existing_rows"]], "_prepared_statement_placeholder (py_experimenter.database_connector_mysql.databaseconnectormysql attribute)": [[4, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL._prepared_statement_placeholder"]], "_pull_open_experiment() (py_experimenter.database_connector_mysql.databaseconnectormysql method)": [[4, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL._pull_open_experiment"]], "_start_transaction() (py_experimenter.database_connector_mysql.databaseconnectormysql method)": [[4, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL._start_transaction"]], "_table_exists() (py_experimenter.database_connector_mysql.databaseconnectormysql method)": [[4, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL._table_exists"]], "_table_has_correct_structure() (py_experimenter.database_connector_mysql.databaseconnectormysql method)": [[4, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL._table_has_correct_structure"]], "_test_connection() (py_experimenter.database_connector_mysql.databaseconnectormysql method)": [[4, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL._test_connection"]], "_write_to_database_separator (py_experimenter.database_connector_mysql.databaseconnectormysql attribute)": [[4, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL._write_to_database_separator"]], "connect() (py_experimenter.database_connector_mysql.databaseconnectormysql method)": [[4, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL.connect"]], "escape_sql_chars() (py_experimenter.database_connector_mysql.databaseconnectormysql static method)": [[4, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL.escape_sql_chars"]], "get_autoincrement() (py_experimenter.database_connector_mysql.databaseconnectormysql static method)": [[4, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL.get_autoincrement"]], "get_structure_from_table() (py_experimenter.database_connector_mysql.databaseconnectormysql method)": [[4, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL.get_structure_from_table"]], "py_experimenter.database_connector_mysql": [[4, "module-py_experimenter.database_connector_mysql"]], "configerror": [[5, "py_experimenter.exceptions.ConfigError"]], "creatingtableerror": [[5, "py_experimenter.exceptions.CreatingTableError"]], "databaseconnectionerror": [[5, "py_experimenter.exceptions.DatabaseConnectionError"]], "databasecreationerror": [[5, "py_experimenter.exceptions.DatabaseCreationError"]], "databaseerror": [[5, "py_experimenter.exceptions.DatabaseError"]], "databasequeryerror": [[5, "py_experimenter.exceptions.DatabaseQueryError"]], "emptyfilldatabasecallerror": [[5, "py_experimenter.exceptions.EmptyFillDatabaseCallError"]], "invalidconfigerror": [[5, "py_experimenter.exceptions.InvalidConfigError"]], "invalidresultfielderror": [[5, "py_experimenter.exceptions.InvalidResultFieldError"]], "invalidvaluesinconfiguration": [[5, "py_experimenter.exceptions.InvalidValuesInConfiguration"]], "missinglogtableerror": [[5, "py_experimenter.exceptions.MissingLogTableError"]], "noconfigfileerror": [[5, "py_experimenter.exceptions.NoConfigFileError"]], "noexperimentsleftexception": [[5, "py_experimenter.exceptions.NoExperimentsLeftException"]], "parametercombinationerror": [[5, "py_experimenter.exceptions.ParameterCombinationError"]], "pyexperimentererror": [[5, "py_experimenter.exceptions.PyExperimenterError"]], "tablehaswrongstructureerror": [[5, "py_experimenter.exceptions.TableHasWrongStructureError"]], "py_experimenter.exceptions": [[5, "module-py_experimenter.exceptions"]], "all (py_experimenter.experiment_status.experimentstatus attribute)": [[6, "py_experimenter.experiment_status.ExperimentStatus.ALL"]], "created (py_experimenter.experiment_status.experimentstatus attribute)": [[6, "py_experimenter.experiment_status.ExperimentStatus.CREATED"]], "done (py_experimenter.experiment_status.experimentstatus attribute)": [[6, "py_experimenter.experiment_status.ExperimentStatus.DONE"]], "error (py_experimenter.experiment_status.experimentstatus attribute)": [[6, "py_experimenter.experiment_status.ExperimentStatus.ERROR"]], "experimentstatus (class in py_experimenter.experiment_status)": [[6, "py_experimenter.experiment_status.ExperimentStatus"]], "running (py_experimenter.experiment_status.experimentstatus attribute)": [[6, "py_experimenter.experiment_status.ExperimentStatus.RUNNING"]], "py_experimenter.experiment_status": [[6, "module-py_experimenter.experiment_status"]], "pyexperimenter (class in py_experimenter.experimenter)": [[7, "py_experimenter.experimenter.PyExperimenter"]], "_execution_worker() (py_experimenter.experimenter.pyexperimenter method)": [[7, "py_experimenter.experimenter.PyExperimenter._execution_worker"]], "_execution_wrapper() (py_experimenter.experimenter.pyexperimenter method)": [[7, "py_experimenter.experimenter.PyExperimenter._execution_wrapper"]], "_is_valid_configuration() (py_experimenter.experimenter.pyexperimenter static method)": [[7, "py_experimenter.experimenter.PyExperimenter._is_valid_configuration"]], "_worker() (py_experimenter.experimenter.pyexperimenter method)": [[7, "py_experimenter.experimenter.PyExperimenter._worker"]], "delete_table() (py_experimenter.experimenter.pyexperimenter method)": [[7, "py_experimenter.experimenter.PyExperimenter.delete_table"]], "execute() (py_experimenter.experimenter.pyexperimenter method)": [[7, "py_experimenter.experimenter.PyExperimenter.execute"]], "fill_table_from_combination() (py_experimenter.experimenter.pyexperimenter method)": [[7, "py_experimenter.experimenter.PyExperimenter.fill_table_from_combination"]], "fill_table_from_config() (py_experimenter.experimenter.pyexperimenter method)": [[7, "py_experimenter.experimenter.PyExperimenter.fill_table_from_config"]], "fill_table_with_rows() (py_experimenter.experimenter.pyexperimenter method)": [[7, "py_experimenter.experimenter.PyExperimenter.fill_table_with_rows"]], "get_config_value() (py_experimenter.experimenter.pyexperimenter method)": [[7, "py_experimenter.experimenter.PyExperimenter.get_config_value"]], "get_logtable() (py_experimenter.experimenter.pyexperimenter method)": [[7, "py_experimenter.experimenter.PyExperimenter.get_logtable"]], "get_table() (py_experimenter.experimenter.pyexperimenter method)": [[7, "py_experimenter.experimenter.PyExperimenter.get_table"]], "has_option() (py_experimenter.experimenter.pyexperimenter method)": [[7, "py_experimenter.experimenter.PyExperimenter.has_option"]], "has_section() (py_experimenter.experimenter.pyexperimenter method)": [[7, "py_experimenter.experimenter.PyExperimenter.has_section"]], "py_experimenter.experimenter": [[7, "module-py_experimenter.experimenter"]], "reset_experiments() (py_experimenter.experimenter.pyexperimenter method)": [[7, "py_experimenter.experimenter.PyExperimenter.reset_experiments"]], "set_config_value() (py_experimenter.experimenter.pyexperimenter method)": [[7, "py_experimenter.experimenter.PyExperimenter.set_config_value"]], "py_experimenter": [[8, "module-py_experimenter"]], "resultprocessor (class in py_experimenter.result_processor)": [[9, "py_experimenter.result_processor.ResultProcessor"]], "_add_timestamps_to_results() (py_experimenter.result_processor.resultprocessor static method)": [[9, "py_experimenter.result_processor.ResultProcessor._add_timestamps_to_results"]], "_change_status() (py_experimenter.result_processor.resultprocessor method)": [[9, "py_experimenter.result_processor.ResultProcessor._change_status"]], "_set_machine() (py_experimenter.result_processor.resultprocessor method)": [[9, "py_experimenter.result_processor.ResultProcessor._set_machine"]], "_set_name() (py_experimenter.result_processor.resultprocessor method)": [[9, "py_experimenter.result_processor.ResultProcessor._set_name"]], "_valid_result_fields() (py_experimenter.result_processor.resultprocessor method)": [[9, "py_experimenter.result_processor.ResultProcessor._valid_result_fields"]], "_write_error() (py_experimenter.result_processor.resultprocessor method)": [[9, "py_experimenter.result_processor.ResultProcessor._write_error"]], "file_handler (in module py_experimenter.result_processor)": [[9, "py_experimenter.result_processor.file_handler"]], "formatter (in module py_experimenter.result_processor)": [[9, "py_experimenter.result_processor.formatter"]], "process_logs() (py_experimenter.result_processor.resultprocessor method)": [[9, "py_experimenter.result_processor.ResultProcessor.process_logs"]], "process_results() (py_experimenter.result_processor.resultprocessor method)": [[9, "py_experimenter.result_processor.ResultProcessor.process_results"]], "py_experimenter.result_processor": [[9, "module-py_experimenter.result_processor"]], "result_logger (in module py_experimenter.result_processor)": [[9, "py_experimenter.result_processor.result_logger"]], "_generate_int_data() (in module py_experimenter.utils)": [[10, "py_experimenter.utils._generate_int_data"]], "add_timestep_result_columns() (in module py_experimenter.utils)": [[10, "py_experimenter.utils.add_timestep_result_columns"]], "combine_fill_table_parameters() (in module py_experimenter.utils)": [[10, "py_experimenter.utils.combine_fill_table_parameters"]], "extract_columns() (in module py_experimenter.utils)": [[10, "py_experimenter.utils.extract_columns"]], "extract_db_credentials_and_table_name_from_config() (in module py_experimenter.utils)": [[10, "py_experimenter.utils.extract_db_credentials_and_table_name_from_config"]], "extract_logtables() (in module py_experimenter.utils)": [[10, "py_experimenter.utils.extract_logtables"]], "get_keyfield_data() (in module py_experimenter.utils)": [[10, "py_experimenter.utils.get_keyfield_data"]], "get_keyfield_names() (in module py_experimenter.utils)": [[10, "py_experimenter.utils.get_keyfield_names"]], "get_keyfields() (in module py_experimenter.utils)": [[10, "py_experimenter.utils.get_keyfields"]], "get_result_field_names() (in module py_experimenter.utils)": [[10, "py_experimenter.utils.get_result_field_names"]], "get_resultfields() (in module py_experimenter.utils)": [[10, "py_experimenter.utils.get_resultfields"]], "get_timestamp_representation() (in module py_experimenter.utils)": [[10, "py_experimenter.utils.get_timestamp_representation"]], "load_config() (in module py_experimenter.utils)": [[10, "py_experimenter.utils.load_config"]], "py_experimenter.utils": [[10, "module-py_experimenter.utils"]], "timestamps_for_result_fields() (in module py_experimenter.utils)": [[10, "py_experimenter.utils.timestamps_for_result_fields"]]}})