:py:mod:`py_experimenter.utils`
===============================

.. py:module:: py_experimenter.utils


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   py_experimenter.utils.load_credential_config
   py_experimenter.utils.write_codecarbon_config
   py_experimenter.utils.extract_codecarbon_columns
   py_experimenter.utils.combine_fill_table_parameters
   py_experimenter.utils.get_timestamp_representation



.. py:function:: load_credential_config(path)

   Load and return configuration file.
   :param path: path to the config file
   :return: configuration file


.. py:function:: write_codecarbon_config(codecarbon_config: omegaconf.DictConfig)


.. py:function:: extract_codecarbon_columns() -> Dict[str, str]


.. py:function:: combine_fill_table_parameters(keyfield_names: List[str], parameters: Dict[str, Union[str, int, float, bool]], fixed_parameter_combinations: List[Dict[str, Union[str, int, float, bool]]] = None)

   Combiens different parameters to a list of parameter combinations.
   :param keyfield_names: names of the keyfields
   :type keyfield_names: List[str]
   :param parameters: These values are combiend with each other and every fixed parameter combination. This combination is similar to the cartesian product.
   :type parameters: Dict[str, Union[str, int, float, bool]]
   :param fixed_parameter_combinations: These values are combiend with every parameter like in the cartesian product. However, the values inside of two different list items
   are not combined with each other.


.. py:function:: get_timestamp_representation() -> str


