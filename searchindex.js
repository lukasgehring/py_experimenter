Search.setIndex({"docnames": ["authors", "autoapi/index", "autoapi/py_experimenter/database_connector/index", "autoapi/py_experimenter/database_connector_lite/index", "autoapi/py_experimenter/database_connector_mysql/index", "autoapi/py_experimenter/exceptions/index", "autoapi/py_experimenter/experiment_status/index", "autoapi/py_experimenter/experimenter/index", "autoapi/py_experimenter/index", "autoapi/py_experimenter/result_processor/index", "autoapi/py_experimenter/utils/index", "changelog", "cite", "examples/example_conditional_grid", "examples/example_general_usage", "examples/example_logtables", "examples/index", "help", "how-to-contribute", "index", "installation", "license", "usage/database_credential_file", "usage/execution", "usage/experiment_configuration_file", "usage/experiment_function", "usage/index"], "filenames": ["authors.rst", "autoapi/index.rst", "autoapi/py_experimenter/database_connector/index.rst", "autoapi/py_experimenter/database_connector_lite/index.rst", "autoapi/py_experimenter/database_connector_mysql/index.rst", "autoapi/py_experimenter/exceptions/index.rst", "autoapi/py_experimenter/experiment_status/index.rst", "autoapi/py_experimenter/experimenter/index.rst", "autoapi/py_experimenter/index.rst", "autoapi/py_experimenter/result_processor/index.rst", "autoapi/py_experimenter/utils/index.rst", "changelog.rst", "cite.rst", "examples/example_conditional_grid.ipynb", "examples/example_general_usage.ipynb", "examples/example_logtables.ipynb", "examples/index.rst", "help.rst", "how-to-contribute.rst", "index.rst", "installation.rst", "license.rst", "usage/database_credential_file.rst", "usage/execution.rst", "usage/experiment_configuration_file.rst", "usage/experiment_function.rst", "usage/index.rst"], "titles": ["Authors", "API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">py_experimenter.database_connector</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">py_experimenter.database_connector_lite</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">py_experimenter.database_connector_mysql</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">py_experimenter.exceptions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">py_experimenter.experiment_status</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">py_experimenter.experimenter</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">py_experimenter</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">py_experimenter.result_processor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">py_experimenter.utils</span></code>", "Changelog", "Cite PyExperimenter", "Example: Conditional Parameter Grids", "Example: General Usage", "Example: Usage of Logtables", "Examples", "Need Help?", "How to Contribute", "Welcome to PyExperimenter\u2019s documentation!", "Installation", "License", "Database Credential File", "Executing PyExperimenter", "Experiment Configuration File", "Experiment Function", "Usage"], "terms": {"tanja": [0, 12, 20, 21], "torned": [0, 12, 18, 20, 21], "alexand": [0, 12, 20, 21], "luka": [0, 12, 13, 14, 15, 20, 21], "fehr": [0, 12, 20, 21], "helena": [0, 12, 20, 21], "graf": [0, 12, 20, 21], "jona": [0, 12, 20, 21], "hansel": [0, 12, 20, 21], "felix": [0, 12, 20, 21], "mohr": [0, 12, 20, 21], "marcel": [0, 12, 20, 21], "wever": [0, 12, 20, 21], "karlson": 0, "pfannschmidt": 0, "gehr": [0, 12, 20, 21], "thi": [1, 6, 7, 9, 11, 13, 14, 15, 18, 19, 21, 22, 23, 24, 26], "page": [1, 11, 12], "contain": [1, 7, 11, 13, 14, 18, 22, 23, 24], "auto": [1, 14, 15], "gener": [1, 6, 11, 13, 15, 16, 18, 23, 26], "document": [1, 11, 13, 14, 15, 20, 21], "1": [1, 7, 13, 14, 15, 20, 23, 24], "py_experiment": [1, 13, 14, 15, 18, 20, 23, 24, 25], "database_connector": [1, 3, 4, 8, 13, 14, 15], "database_connector_lit": [1, 8], "database_connector_mysql": [1, 8], "except": [1, 7, 8, 11, 18], "experiment_statu": [1, 8], "experiment": [1, 8, 11, 13, 14, 15, 18, 20, 23], "result_processor": [1, 7, 8, 13, 14, 15, 25], "util": [1, 8], "creat": [1, 2, 4, 6, 7, 10, 11, 13, 14, 15, 17, 19, 24, 26], "sphinx": [1, 11, 18, 20], "autoapi": [1, 20], "databaseconnector": [2, 3, 4], "config": [2, 7, 10, 13, 14, 15, 22, 23], "configpars": [2, 4, 7, 10], "base": [2, 3, 4, 5, 6, 7, 10, 11, 13, 14, 15, 18, 19, 23, 26], "abc": [2, 4], "helper": [2, 4], "provid": [2, 4, 7, 13, 14, 15, 18, 21, 22, 23, 24, 26], "standard": [2, 4, 24], "wai": [2, 4, 12, 19, 23], "an": [2, 4, 7, 9, 11, 13, 14, 15, 19, 21, 22, 23, 24, 25, 26], "us": [2, 4, 9, 11, 12, 13, 14, 15, 19, 21, 23, 24], "inherit": [2, 4], "abstract": 2, "_extract_credenti": [2, 3, 4], "_test_connect": [2, 3, 4], "connect": [2, 3, 4, 7, 10, 13, 14, 15, 21, 24], "close_connect": 2, "commit": [2, 18], "none": [2, 4, 7, 9, 10, 13, 14, 15], "execut": [2, 7, 11, 18, 19, 20, 22, 25, 26], "cursor": [2, 3, 4], "sql_statement": 2, "valu": [2, 7, 9, 13, 15, 23, 24, 25, 26], "fetchal": 2, "create_table_if_not_exist": 2, "_table_exist": [2, 3, 4], "static": [2, 3, 4, 7, 9], "_compute_column": 2, "keyfield": [2, 7, 11, 13, 14, 15, 23, 25], "resultfield": [2, 11, 13, 14, 15], "_exclude_fixed_column": 2, "column": [2, 7, 11, 14, 23, 24], "list": [2, 3, 4, 7, 9, 10, 11, 14, 18, 23, 24, 26], "str": [2, 3, 7, 9, 10, 14], "_create_t": 2, "tupl": [2, 3, 4, 7, 9, 10, 14], "table_nam": [2, 7, 9, 23, 24], "logtabl": [2, 11, 16], "bool": [2, 3, 7, 10], "fals": [2, 4, 7, 13, 14, 15, 24], "_get_create_table_queri": 2, "get_autoincr": [2, 3, 4], "self": 2, "_table_has_correct_structur": [2, 3, 4], "typed_field": [2, 3, 4], "fill_tabl": 2, "paramet": [2, 7, 10, 11, 14, 15, 16, 19, 23, 24, 25, 26], "fixed_parameter_combin": [2, 7, 10, 13], "_check_combination_in_existing_row": 2, "combin": [2, 7, 13], "existing_row": 2, "keyfield_nam": [2, 10, 24], "_get_existing_row": [2, 3, 4], "column_nam": [2, 3, 4], "get_experiment_configur": 2, "_execute_queri": 2, "int": [2, 3, 4, 7, 9, 13, 14, 15, 24], "_pull_open_experi": [2, 3, 4], "_write_to_databas": 2, "prepare_write_queri": 2, "kei": [2, 7, 11, 18, 24], "update_databas": 2, "dict": [2, 7, 9, 10, 13, 14, 15, 23, 25], "object": [2, 9, 13, 14, 15], "condit": [2, 11, 16, 21, 23], "_prepare_update_queri": 2, "reset_experi": [2, 7, 11, 14, 23], "state": [2, 7, 11, 18, 23, 24], "_pop_experiments_with_statu": 2, "statu": [2, 7, 9, 11, 13, 14, 15, 20, 23, 26], "_get_experiments_with_condit": 2, "_delete_experiments_with_condit": 2, "get_structure_from_t": [2, 3, 4], "execute_queri": 2, "queri": [2, 13, 14, 15], "delete_t": [2, 7, 11], "get_logt": [2, 7, 15], "logtable_nam": [2, 24, 25], "panda": [2, 7, 11, 13, 14, 15, 20, 23, 26], "datafram": [2, 7, 11, 13, 14, 23, 26], "get_tabl": [2, 7, 13, 14, 15, 23], "databaseconnectorlit": 3, "_write_to_database_separ": 3, "_prepared_statement_placehold": [3, 4], "escape_sql_char": 3, "arg": 3, "databaseconnectormysql": 4, "experiment_configuration_file_path": [4, 7, 13, 14, 15, 23], "database_credential_file_path": [4, 7, 23], "": [4, 14], "_create_database_if_not_exist": 4, "credenti": [4, 7, 18, 23, 24, 26], "_start_transact": 4, "readonli": 4, "pyexperimentererror": 5, "common": [5, 24], "class": [5, 11], "all": [5, 6, 7, 11, 13, 14, 15, 18, 21, 23, 24, 25, 26], "non": [5, 19], "exit": 5, "parametercombinationerror": [5, 7], "databaseerror": 5, "databasecreationerror": 5, "databaseconnectionerror": [5, 7], "databasequeryerror": 5, "emptyfilldatabasecallerror": 5, "creatingtableerror": 5, "invalidresultfielderror": 5, "tablehaswrongstructureerror": 5, "noexperimentsleftexcept": 5, "configerror": 5, "noconfigfileerror": 5, "filenotfounderror": 5, "invalidconfigerror": [5, 7], "invalidvaluesinconfigur": [5, 7], "missinglogtableerror": 5, "experimentstatu": [6, 11], "enum": [6, 11], "enumer": 6, "deriv": 6, "from": [6, 7, 9, 10, 13, 14, 15, 19, 21, 25, 26], "defin": [6, 7, 11, 19, 23, 24, 25, 26], "new": [6, 10, 11, 18, 23], "run": [6, 7, 11, 13, 23, 26], "done": [6, 7, 13, 14, 15, 18, 23, 24, 26], "error": [6, 7, 11, 13, 14, 15, 23, 26], "pyexperiment": [7, 11, 17, 18, 20, 22, 24, 26], "o": [7, 11, 13, 14, 15, 25], "path": [7, 10, 13, 14, 15, 18, 22, 23, 24, 25], "join": [7, 13, 14, 15, 25], "experiment_configur": [7, 23], "cfg": [7, 13, 14, 15, 22, 23], "database_credenti": [7, 22, 23], "database_nam": [7, 23, 24], "name": [7, 9, 10, 11, 13, 14, 15, 18, 20, 23, 24], "handl": [7, 11], "initi": [7, 10, 15], "collect": [7, 19], "experi": [7, 9, 10, 11, 12, 19, 20, 26], "respect": 7, "result": [7, 9, 11, 12, 13, 19, 20, 24, 25, 26], "set_config_valu": 7, "section_nam": 7, "modifi": [7, 11, 15, 21], "configur": [7, 10, 11, 19, 26], "so": [7, 13, 18, 21, 23], "within": [7, 11, 19, 24, 25], "given": [7, 11, 13, 14, 15, 18, 22, 23, 24, 25], "properti": [7, 19], "identifi": [7, 24], "i": [7, 11, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26], "overwritten": [7, 25], "wa": [7, 11, 19, 24], "exist": [7, 10, 13, 14, 15, 18, 23], "beforehand": [7, 23], "The": [7, 11, 12, 13, 14, 15, 18, 19, 20, 21, 23, 24, 25, 26], "section": [7, 23, 24, 25], "which": [7, 11, 13, 14, 18, 23, 24, 26], "should": [7, 13, 14, 15, 18, 24], "set": [7, 11, 13, 15, 19, 23, 26], "whose": [7, 24], "rais": [7, 13, 14], "If": [7, 10, 12, 13, 14, 15, 17, 18, 22, 23, 24], "either": [7, 18, 24], "miss": [7, 11], "ha": [7, 11, 13, 14, 15, 17, 18, 22, 23, 24, 25, 26], "invalid": 7, "inform": [7, 10, 11, 18, 23, 25, 26], "get_config_valu": 7, "return": [7, 10], "type": [7, 24], "nooptionerror": 7, "call": [7, 9, 11, 13, 14, 23, 24, 25], "part": [7, 11, 24, 25], "has_sect": 7, "check": [7, 11, 17, 18, 23], "whether": [7, 21], "true": [7, 13, 14, 15, 24, 25], "otherwis": [7, 18, 21, 26], "has_opt": 7, "_is_valid_configur": 7, "_config": [7, 9], "valid": 7, "e": [7, 11, 13, 14, 15, 18, 20, 23, 24, 25, 26], "necessari": [7, 26], "field": [7, 9, 10, 11, 19], "databas": [7, 9, 10, 11, 13, 14, 15, 18, 19, 20, 25, 26], "mysql": [7, 11, 18, 20, 22, 24, 26], "sqlite": [7, 13, 14, 15, 24], "case": [7, 14, 18, 22, 24, 26], "ar": [7, 11, 13, 14, 15, 18, 19, 20, 23, 24, 25, 26], "avail": [7, 11, 18, 23], "option": [7, 11, 24], "file": [7, 10, 11, 18, 19, 21, 26], "host": [7, 22], "user": [7, 18, 22, 26], "password": [7, 22], "default": [7, 22, 23, 24], "fill_table_from_combin": [7, 13], "add": [7, 11, 18], "row": [7, 11, 14], "tabl": [7, 10, 11, 15, 24, 26], "first": [7, 11, 13, 14, 15, 18, 25], "doe": [7, 10, 13, 14, 15], "been": [7, 11, 17, 18, 24, 26], "afterward": [7, 13, 18], "fill": [7, 11, 15, 24, 25], "To": [7, 13, 14, 15, 18], "end": [7, 14, 18, 24], "cartesian": [7, 13, 14, 23], "product": [7, 13, 14, 20, 23], "built": [7, 18], "where": [7, 18, 23, 24], "each": [7, 11, 13, 23, 24, 26], "make": [7, 14, 18, 23], "up": [7, 14, 19], "note": [7, 13, 14, 15, 23, 24, 25], "onli": [7, 11, 13, 14, 15, 23, 24, 25], "ad": [7, 11, 14, 18, 23, 24], "do": [7, 13, 17, 18, 21, 23, 25], "alreadi": [7, 15], "For": [7, 13, 15, 18, 24], "ani": [7, 13, 18, 21, 23, 24, 25, 26], "match": 7, "In": [7, 11, 14, 18, 19, 24, 26], "follow": [7, 12, 18, 20, 21, 23, 24, 25, 26], "exampl": [7, 17, 18, 19, 23, 24, 25], "method": [7, 9, 11, 13, 14, 15, 18], "a2": 7, "2": [7, 13, 14, 15, 20, 24], "4": [7, 13, 14, 15, 20, 23, 24], "b": [7, 18], "c": [7, 11, 21], "cat": 7, "dog": 7, "accord": [7, 11, 13, 14, 18, 23, 24], "four": [7, 24], "predefin": 7, "dictionari": [7, 9], "possibl": [7, 24], "fill_table_from_config": [7, 14, 15, 23], "build": [7, 11, 18, 20], "fill_table_with_row": [7, 14, 23], "A": [7, 18, 21, 23, 24, 26], "entri": [7, 13, 14, 24, 25], "made": [7, 18], "pair": [7, 9], "valueerror": [7, 13, 14, 18], "experiment_funct": [7, 14, 23], "callabl": 7, "resultprocessor": [7, 9, 11, 13, 14, 15, 25], "max_experi": [7, 11, 13, 14, 15, 23], "pull": [7, 11, 26], "open": [7, 11, 12, 13, 14, 15, 23, 26], "them": [7, 9, 11, 13, 18], "mani": [7, 11, 23], "process": [7, 9, 13, 14, 25, 26], "start": [7, 11, 18, 19, 24], "specifi": [7, 15, 19, 24], "n_job": [7, 11, 15, 24], "singl": [7, 11, 13, 14, 15, 19, 24, 25], "sequenti": [7, 15, 23], "until": [7, 23], "after": [7, 13, 14, 18, 19, 26], "can": [7, 9, 11, 13, 14, 15, 17, 18, 19, 20, 23, 24, 25, 26], "continu": [7, 17], "written": [7, 13, 14, 23, 25], "dure": [7, 11, 23, 25, 26], "via": [7, 11, 13, 14, 18, 19, 20, 24], "success": 7, "correspond": [7, 15, 20, 22, 23, 24, 26], "occur": [7, 18, 23], "chang": [7, 11, 18], "log": [7, 9, 11, 15, 18, 23, 24, 25, 26], "therefor": [7, 11, 14, 18], "befor": [7, 18], "local": [7, 18], "appear": 7, "function": [7, 11, 18, 19, 23, 24, 26], "differ": [7, 15, 19, 23, 25, 26], "parametr": 7, "number": [7, 12, 13, 14, 15, 24], "wrong": [7, 11], "data": [7, 13, 14, 15, 24], "_worker": 7, "worker": [7, 11], "repeatedli": 7, "_execution_work": 7, "_execution_wrapp": [7, 11, 14], "one": [7, 10, 12, 13, 14, 15, 18, 19, 24], "Then": [7, 18], "therebi": [7, 19, 20, 24], "updat": [7, 11], "have": [7, 11, 14, 15, 17, 18, 23, 24, 25], "when": [7, 11, 18, 22, 24], "directli": [7, 18, 24], "finish": 7, "successfulli": 7, "noexperimentslefterror": 7, "left": 7, "delet": [7, 23], "again": [7, 14, 18], "reset": [7, 11, 14, 26], "variabl": [7, 15], "length": 7, "argument": 7, "multipl": [7, 11, 13, 14, 25], "drop": 7, "addition": [7, 13, 14, 15, 18, 23, 24, 26], "associ": [7, 21], "pd": [7, 13, 14, 15], "result_logg": 9, "formatt": 9, "file_handl": 9, "credential_path": 9, "result_field": 9, "experiment_id": [9, 15, 24], "whenev": 9, "you": [9, 12, 13, 14, 15, 17, 18, 23, 24, 25], "want": [9, 14, 18, 23, 24], "write": [9, 11, 13, 14, 15, 24, 25, 26], "process_result": [9, 13, 14, 15, 25], "param": [9, 10], "_add_timestamps_to_result": 9, "process_log": [9, 15, 25], "_change_statu": 9, "_write_error": 9, "error_msg": 9, "_set_machin": 9, "machine_id": 9, "_set_nam": 9, "_valid_result_field": 9, "load_config": 10, "load": [10, 14], "get_keyfield_data": 10, "extract_db_credentials_and_table_name_from_config": 10, "automat": [10, 11, 18, 20, 26], "mysql_connector": 10, "get_keyfield_nam": 10, "get_keyfield": 10, "get_result_field_nam": 10, "get_resultfield": 10, "extract_column": 10, "clean": 10, "timestamps_for_result_field": 10, "add_timestep_result_column": 10, "result_field_configur": 10, "extract_logt": 10, "experiment_table_nam": 10, "combine_fill_table_paramet": 10, "_generate_int_data": 10, "keyfield_valu": [10, 14], "get_timestamp_represent": 10, "improv": [11, 18], "perform": [11, 15, 19, 24, 25], "issu": [11, 17], "templat": 11, "includ": [11, 18, 20, 21, 26], "joss": [11, 12], "public": [11, 12], "allow": [11, 18, 19, 24], "increment": 11, "describ": [11, 14, 18, 24], "detail": [11, 18], "usag": [11, 13, 16, 24, 25], "rework": 11, "larg": 11, "addit": [11, 18, 19, 22, 24, 26], "notebook": [11, 13, 14, 15], "caus": 11, "fail": [11, 26], "due": [11, 13, 14, 15, 18], "directori": [11, 13, 14, 15], "cover": [11, 24], "extend": 11, "date": 11, "now": [11, 15], "support": [11, 13, 14, 15, 19, 24], "python": [11, 18, 20], "version": [11, 15, 18, 20], "9": [11, 13, 14, 15, 18, 20], "identif": 11, "id": [11, 13, 14, 15, 23, 24], "instead": [11, 13, 15, 24], "stack": 11, "trace": 11, "correctli": [11, 18], "connector": [11, 20], "implement": 11, "multiprocess": 11, "joblib": [11, 20], "random_ord": 11, "need": [11, 13, 14, 15, 18, 22, 23], "anymor": 11, "remov": 11, "reflect": 11, "workflow": 11, "push": [11, 18], "websit": [11, 18], "separ": [11, 18, 23, 24], "branch": [11, 18], "gh": 11, "api": [11, 20], "access": [11, 22, 23], "readm": [11, 20], "refer": [11, 18], "convert": 11, "project": [11, 18, 19], "pyproject": [11, 18], "toml": [11, 18], "poetri": [11, 20], "depend": [11, 13, 18, 20], "itself": [11, 18], "well": [11, 13, 15, 19, 24], "develop": [11, 13, 14, 15, 20], "cpu": 11, "max": 11, "renam": 11, "spawn": 11, "onc": [11, 25, 26], "advanc": 11, "complet": 11, "select": [11, 18], "random": [11, 13, 14, 15, 26], "limit": [11, 13, 14, 19, 21], "same": [11, 13, 14, 15, 18, 24], "transact": 11, "its": [11, 23], "reach": 11, "hold": 11, "py": [11, 13, 14, 15, 18, 20], "abl": 11, "get": [11, 15], "final": [11, 18, 25, 26], "paper": 11, "draft": 11, "latest": [11, 18], "referenc": 11, "bugfix": 11, "order": 11, "db": 11, "unfavor": 11, "see": [11, 18], "abov": [11, 14, 15, 21, 23, 24, 25], "simpl": 11, "runner": 11, "github": [11, 17, 18, 20], "action": [11, 19, 21], "instal": [11, 13, 14, 15, 18, 19], "packag": [11, 18, 20], "lock": [11, 18], "cach": 11, "virtual": 11, "environ": [11, 18], "prevent": 11, "everi": [11, 15, 24], "time": [11, 13, 14, 18, 19, 25], "cut": 11, "down": 11, "ci": 11, "roundtrip": 11, "It": [11, 13, 14, 18, 19, 24], "matrix": 11, "variou": 11, "7": [11, 13, 14, 15, 20], "8": [11, 12, 13, 14, 15, 18, 20, 24], "ubuntu": 11, "maco": 11, "window": 11, "exclud": 11, "sinc": [11, 19], "some": [11, 14, 15, 18, 24, 25], "take": 11, "veri": [11, 18], "long": [11, 24], "restructur": 11, "shortcut": 11, "longer": 11, "integ": [11, 24], "timestep": 11, "give": [11, 18], "instanc": [11, 26], "parallel": [11, 13, 14, 19, 24], "hpc": [11, 13, 14, 19, 23], "cluster": 11, "obtain": [11, 13, 14, 15, 21], "current": [11, 23, 24], "easili": [11, 12, 13, 14, 15, 20, 23, 26], "export": [11, 23, 26], "g": [11, 14, 18, 20, 23, 25], "latex": [11, 23, 26], "robust": 11, "creation": 11, "jupyt": 11, "explain": [11, 24], "how": [11, 15, 17, 23], "grid": [11, 15, 16, 23, 26], "duplic": 11, "string": [11, 13, 14, 15, 24], "quotat": [11, 24], "mark": [11, 24], "compon": 11, "No": 11, "summari": 11, "releas": 11, "scientif": [12, 20], "we": [12, 13, 15, 18], "would": [12, 18, 24], "appreci": [12, 18], "et": 12, "al": 12, "2023": [12, 13, 14, 15], "distribut": [12, 19, 21, 26], "track": 12, "journal": 12, "sourc": [12, 18], "softwar": [12, 21], "84": 12, "5149": 12, "http": [12, 18, 20], "doi": 12, "org": 12, "10": [12, 13, 14, 15, 24], "21105": 12, "05149": 12, "articl": [12, 18], "tornede2023": 12, "titl": [12, 18], "author": [12, 20, 21], "publish": [12, 21], "year": 12, "volum": 12, "url": 12, "show": [13, 14, 15], "programmat": 13, "vector": 13, "machin": [13, 14, 15, 18, 20, 26], "entir": 13, "pip": [13, 14, 15, 18, 20], "scikit": [13, 14, 15], "learn": [13, 14, 15, 20], "further": [13, 14, 15, 17, 18, 23, 24, 26], "explan": [13, 14, 15], "about": [13, 14, 18], "found": [13, 14, 15, 18, 23, 24, 25, 26], "here": [13, 14, 25], "import": [13, 14, 15, 18, 23, 25], "content": [13, 14, 15, 23], "example_conditional_grid": 13, "dataset": [13, 14, 15, 23, 24, 25], "cross_validation_split": [13, 14, 15, 23, 24], "seed": [13, 14, 15, 23, 24, 25, 26], "kernel": [13, 14, 15, 23, 24], "gamma": [13, 14, 15], "decim": [13, 14, 24], "degre": 13, "coef0": 13, "train_f1": [13, 14, 24, 25], "train_accuraci": [13, 14, 15, 24, 25], "test_f1": [13, 14, 15, 24, 25], "test_accuraci": [13, 14, 15, 24, 25], "timestamp": [13, 14, 15, 24], "custom": [13, 14, 15], "sample_data": [13, 14, 15, 24], "mkdir": [13, 14, 15], "w": [13, 14, 15], "f": [13, 14, 15], "next": [13, 14, 15], "dummi": [13, 14, 15], "reason": [13, 14, 15], "code": [13, 14, 18, 23, 24, 25, 26], "meant": [13, 14, 24, 25], "core": [13, 14, 18, 20], "numpi": [13, 14, 15, 18, 20], "np": [13, 14, 15, 25], "sklearn": [13, 14, 15], "load_iri": [13, 14, 15], "model_select": [13, 14, 15], "cross_valid": [13, 14, 15], "pipelin": [13, 14, 15, 24, 25], "make_pipelin": [13, 14, 15], "preprocess": [13, 14, 15], "standardscal": [13, 14, 15], "svm": [13, 14, 15], "svc": [13, 14, 15], "sleep": 13, "randint": 13, "def": [13, 14, 15, 25], "run_svm": 13, "custom_config": [13, 14, 15], "0": [13, 14, 15, 20], "5": [13, 14, 15, 20, 24], "x": [13, 14, 15], "y": [13, 14, 15], "target": [13, 14, 15], "linear": [13, 14, 15, 24], "elif": 13, "poli": [13, 14, 15, 23, 24], "rbf": [13, 14, 15, 24], "model": [13, 14, 15], "iri": [13, 14, 15, 24], "score": [13, 14, 15, 25], "cv": [13, 14, 15], "accuraci": [13, 14, 15], "f1_micro": [13, 14, 15], "return_train_scor": [13, 14, 15], "mean": [13, 14, 15, 19, 23, 25], "train_f1_micro": [13, 14, 15, 25], "test_f1_micro": [13, 14, 15, 25], "actual": [13, 14, 15, 18, 23, 24], "step": [13, 14, 18, 24, 26], "previous": [13, 14, 23], "job": [13, 14, 15, 23], "especi": [13, 14, 24], "3": [13, 14, 15, 18, 19, 20], "svm_experimenter_01": 13, "fix": [13, 24], "three": 13, "line": [13, 14, 23, 24], "present": 13, "nan": [13, 14], "thu": 13, "uncondition": 13, "home": [13, 14, 15], "code_project": [13, 14, 15], "320": [13, 14, 15], "userwarn": [13, 14, 15], "sqlalchemi": [13, 14, 15], "engin": [13, 14, 15, 20], "uri": [13, 14, 15], "sqlite3": [13, 14, 15], "dbapi2": [13, 14, 15], "other": [13, 14, 15, 18, 21, 24], "test": [13, 14, 15, 25], "pleas": [13, 14, 15, 17, 18, 23], "consid": [13, 14, 15], "df": [13, 14, 15], "read_sql": [13, 14, 15], "creation_d": [13, 14, 15], "start_dat": [13, 14, 15], "end_dat": [13, 14, 15], "04": [13, 14, 15], "28": [13, 14, 15], "13": [13, 14, 15], "41": [13, 15], "57": 13, "6": [13, 14, 15, 24], "11": [13, 14, 15, 20], "12": [13, 14, 15], "14": [13, 15], "15": [13, 14, 15, 20], "16": [13, 14, 15], "17": [13, 15], "18": [13, 15], "19": [13, 15], "20": [13, 15], "21": 13, "22": 13, "23": 13, "24": [13, 23], "25": [13, 14], "26": 13, "27": 13, "29": 13, "30": 13, "31": [13, 14, 15], "32": 13, "33": [13, 15], "34": [13, 14, 15], "35": [13, 14, 15], "36": [13, 14, 15], "37": [13, 14, 15], "38": [13, 14, 15], "39": [13, 14, 15], "40": [13, 14, 15], "42": [13, 14, 15, 23], "43": [13, 14, 15], "44": [13, 14, 15], "45": [13, 14, 15], "46": [13, 14, 15], "47": [13, 14], "48": [13, 14], "49": [13, 14], "50": [13, 14, 15], "51": [13, 14], "52": 13, "53": 13, "54": 13, "55": 13, "just": [13, 14, 15], "predifin": [13, 14, 15], "replac": [13, 14, 15, 18], "amount": [13, 14, 15], "relat": [13, 14, 15, 17], "58": 13, "worklaptop": [13, 14, 15], "03": 13, "06": 13, "08": 13, "09": 13, "00": 13, "05": [13, 14], "56": 13, "59": 13, "02": 13, "over": [14, 15, 25, 26], "extract": [14, 25, 26], "example_general_usag": 14, "sigmoid": [14, 15, 24], "longtext": [14, 24], "run_ml": [14, 15, 25], "read_csv": 14, "example_notebook": [14, 15], "error_dataset": 14, "standardsca": 14, "traceback": 14, "most": 14, "recent": 14, "last": 14, "n": [14, 18], "h": [14, 20], "As": [14, 24], "those": [14, 19, 26], "were": 14, "anoth": [14, 18], "try": [14, 18], "also": [14, 15, 18, 23, 24, 25], "simpli": 14, "pass": [14, 24], "nat": 14, "thei": [14, 24], "root": 14, "369": 14, "custom_field": [14, 25], "tmp": 14, "ipykernel_24809": 14, "1244630566": 14, "07": 14, "aggreg": [14, 19], "result_table_agg": 14, "groupbi": [14, 23], "numeric_onli": 14, "style": 14, "to_latex": [14, 23], "begin": [14, 18], "tabular": 14, "lr": 14, "amp": 14, "000000": 14, "understand": [15, 18], "basic": 15, "pyexeriment": 15, "purpos": [15, 21], "demonstr": [15, 25], "howev": [15, 19, 24], "slightli": 15, "adapt": [15, 18], "goal": 15, "small": 15, "find": [15, 17], "best": 15, "search": 15, "example_logt": 15, "best_kernel_f1": 15, "varchar": [15, 24], "best_kernel_accuraci": 15, "train_scor": 15, "log_train_scor": 15, "doubl": 15, "f1": 15, "iter": 15, "init": 15, "performance_f1": 15, "performance_accuraci": 15, "reproduc": [15, 18], "read": [15, 19], "implicit": 15, "971667": 15, "936667": 15, "975000": 15, "896667": 15, "966667": 15, "933333": 15, "893333": 15, "question": 17, "problem": [17, 18], "don": 17, "t": [17, 20], "know": 17, "mayb": 17, "suitabl": [17, 18], "solut": 17, "someon": [17, 18], "els": [17, 18], "similar": [17, 18], "situat": 17, "could": [17, 18], "anyth": 17, "idea": 18, "bug": 18, "sure": [18, 23], "had": 18, "feedback": 18, "plan": 18, "work": [18, 19, 22], "yourself": 18, "like": [18, 24, 25], "great": 18, "comment": 18, "what": 18, "exactli": 18, "At": 18, "your": [18, 25], "mention": 18, "review": 18, "third": 18, "person": [18, 21], "vision": 18, "featur": [18, 23, 24, 26], "go": 18, "summar": [18, 23], "neccessari": 18, "report": [18, 19], "descript": [18, 20], "produc": 18, "assumpt": [18, 26], "think": 18, "And": 18, "label": 18, "usabl": 18, "enhanc": 18, "help": [18, 24], "face": 18, "provic": 18, "fork": 18, "git": 18, "blog": 18, "post": 18, "repositori": [18, 20], "click": 18, "button": 18, "top": 18, "right": [18, 21], "corner": 18, "clone": 18, "On": [18, 19], "folder": [18, 24], "command": 18, "ensur": 18, "usernam": 18, "com": [18, 20], "remot": 18, "origin": 18, "upstream": 18, "switch": 18, "feature_branch_nam": 18, "meaning": 18, "fetch": 18, "v": 18, "checkout": 18, "anaconda": 18, "conda": 18, "env": 18, "activ": 18, "pandoc": 18, "suggest": 18, "navig": 18, "pytest": [18, 20], "succeed": 18, "manual": [18, 19, 24, 26], "upgrad": 18, "manag": [18, 19, 23], "tool": [18, 19, 20], "declar": 18, "upload": 18, "instruct": 18, "than": [18, 24], "ones": 18, "below": [18, 24, 26], "NOT": [18, 21], "out": [18, 21, 23], "specif": 18, "second": 18, "package_nam": 18, "dev": [18, 20], "group": [18, 20], "dist": 18, "good": 18, "mandatori": 18, "locat": [18, 22, 23, 24], "structur": [18, 26], "affect": 18, "succe": 18, "without": [18, 21, 23], "But": 18, "test_run_experi": 18, "test_run_mysql_experi": 18, "doc": 18, "shinx": 18, "output": 18, "html": 18, "correct": 18, "destin": 18, "full": 18, "did": 18, "facilit": 19, "setup": [19, 26], "subsequ": 19, "evalu": [19, 25], "empir": 19, "studi": 19, "algorithm": 19, "particular": [19, 21], "design": [19, 26], "reduc": 19, "involv": 19, "effort": 19, "significantli": 19, "intend": [19, 20], "research": [19, 20], "artifici": [19, 20], "intellig": [19, 20], "analysi": 19, "often": 19, "accompani": 19, "input": [19, 24, 26], "variant": 19, "measur": 19, "individu": 19, "usual": [19, 24], "independ": 19, "manner": [19, 20], "system": [19, 20, 23, 26], "requir": [19, 20], "extens": 19, "monitor": 19, "restart": [19, 26], "tediou": [19, 24], "consum": 19, "These": 19, "challeng": 19, "address": 19, "central": 19, "massiv": 19, "allevi": 19, "aforement": 19, "overhead": 19, "eas": 19, "easiest": 19, "dive": 19, "our": [19, 24], "partial": 19, "german": 19, "feder": 19, "ministri": 19, "econom": 19, "affair": 19, "climat": 19, "fleme": 19, "03e16012f": 19, "foundat": 19, "dfg": 19, "collabor": 19, "center": 19, "fly": 19, "comput": [19, 24, 26], "sfb": 19, "901": 19, "160364472": 19, "pypi": 20, "ml": 20, "captur": 20, "unifi": 20, "ai": 20, "uni": 20, "hannov": 20, "de": 20, "stud": 20, "upb": 20, "ifi": 20, "lmu": 20, "unisabana": 20, "edu": 20, "co": 20, "licens": 20, "mit": [20, 21], "md": 20, "io": 20, "keyword": 20, "executor": 20, "classifi": 20, "stabl": 20, "audienc": 20, "scienc": 20, "topic": 20, "program": 20, "languag": 20, "jupyterlab": 20, "mock": 20, "nbsphinx": 20, "galleri": 20, "rtd": 20, "theme": 20, "recommonmark": 20, "freezegun": 20, "backend": [20, 24], "masonri": 20, "copyright": 21, "2021": 21, "2022": 21, "permiss": 21, "herebi": 21, "grant": 21, "free": 21, "charg": 21, "copi": 21, "deal": 21, "restrict": 21, "merg": 21, "sublicens": 21, "sell": 21, "permit": 21, "whom": 21, "furnish": 21, "subject": 21, "notic": 21, "shall": 21, "substanti": 21, "portion": 21, "THE": 21, "AS": 21, "warranti": 21, "OF": 21, "kind": 21, "express": 21, "OR": 21, "impli": 21, "BUT": 21, "TO": 21, "merchant": 21, "fit": 21, "FOR": 21, "AND": 21, "noninfring": 21, "IN": 21, "NO": 21, "event": 21, "holder": 21, "BE": 21, "liabl": 21, "claim": 21, "damag": 21, "liabil": 21, "contract": 21, "tort": 21, "aris": [21, 26], "WITH": 21, "By": 22, "explicitli": [22, 24], "few": 23, "run_experi": [23, 25], "someth": 23, "assum": 23, "overwrit": 23, "two": [23, 24], "altern": [23, 24], "more": [23, 24, 25], "complex": 23, "new_data": 23, "new_data_2": 23, "funtion": 23, "determin": 23, "fashion": 23, "comma": [23, 24], "readi": 23, "termin": 23, "interrupt": 23, "result_t": 23, "print": 23, "index_nam": 23, "primarili": 24, "main": 24, "paragraph": 24, "subsect": 24, "new_best_perform": [24, 25], "epoch": [24, 25], "logepoch": 24, "runtim": [24, 25], "float": 24, "furthermor": [24, 25], "togeth": 24, "henc": 24, "thought": 24, "exponenti": 24, "sever": 24, "annot": 24, "keyfield_datatyp": 24, "datatyp": 24, "255": 24, "domain": [24, 26], "neither": 24, "nor": 24, "whitespac": 24, "definit": 24, "task": 24, "size": 24, "form": 24, "stepsiz": 24, "explicit": 24, "store": 24, "resultfield_nam": [24, 25], "resultfield_datatyp": 24, "arbitrarili": 24, "obtatin": 24, "enabl": 24, "interet": 24, "intermedi": 24, "might": 24, "regularili": 24, "databs": 24, "logtable_datatyp": 24, "prefix": 24, "__": 24, "format": 24, "belong": 24, "datetim": 24, "depth": [24, 25], "showcas": [24, 25], "maximum": 24, "under": 24, "ignor": 24, "start_tim": 25, "loop": 25, "while": 25, "stuff": 25, "min": 25, "break": 25, "re": 25, "old": 25, "subset": [25, 26], "resultfield_valu": 25, "logtable_field_nam": 25, "logtable_field_valu": 25, "schema": 26, "figur": 26, "uniqu": 26, "certain": 26, "through": 26, "back": 26, "desir": 26, "jointli": 26, "averag": 26, "view": 26}, "objects": {"": [[8, 0, 0, "-", "py_experimenter"]], "py_experimenter": [[2, 0, 0, "-", "database_connector"], [3, 0, 0, "-", "database_connector_lite"], [4, 0, 0, "-", "database_connector_mysql"], [5, 0, 0, "-", "exceptions"], [6, 0, 0, "-", "experiment_status"], [7, 0, 0, "-", "experimenter"], [9, 0, 0, "-", "result_processor"], [10, 0, 0, "-", "utils"]], "py_experimenter.database_connector": [[2, 1, 1, "", "DatabaseConnector"]], "py_experimenter.database_connector.DatabaseConnector": [[2, 2, 1, "", "_check_combination_in_existing_rows"], [2, 2, 1, "", "_compute_columns"], [2, 2, 1, "", "_create_table"], [2, 2, 1, "", "_delete_experiments_with_condition"], [2, 2, 1, "", "_exclude_fixed_columns"], [2, 2, 1, "", "_execute_queries"], [2, 2, 1, "", "_extract_credentials"], [2, 2, 1, "", "_get_create_table_query"], [2, 2, 1, "", "_get_existing_rows"], [2, 2, 1, "", "_get_experiments_with_condition"], [2, 2, 1, "", "_pop_experiments_with_status"], [2, 2, 1, "", "_prepare_update_query"], [2, 2, 1, "", "_pull_open_experiment"], [2, 2, 1, "", "_table_exists"], [2, 2, 1, "", "_table_has_correct_structure"], [2, 2, 1, "", "_test_connection"], [2, 2, 1, "", "_write_to_database"], [2, 2, 1, "", "close_connection"], [2, 2, 1, "", "commit"], [2, 2, 1, "", "connect"], [2, 2, 1, "", "create_table_if_not_existing"], [2, 2, 1, "", "cursor"], [2, 2, 1, "", "delete_table"], [2, 2, 1, "", "execute"], [2, 2, 1, "", "execute_queries"], [2, 2, 1, "", "fetchall"], [2, 2, 1, "", "fill_table"], [2, 2, 1, "", "get_autoincrement"], [2, 2, 1, "", "get_experiment_configuration"], [2, 2, 1, "", "get_logtable"], [2, 2, 1, "", "get_structure_from_table"], [2, 2, 1, "", "get_table"], [2, 2, 1, "", "prepare_write_query"], [2, 2, 1, "", "reset_experiments"], [2, 2, 1, "", "update_database"]], "py_experimenter.database_connector_lite": [[3, 1, 1, "", "DatabaseConnectorLITE"]], "py_experimenter.database_connector_lite.DatabaseConnectorLITE": [[3, 2, 1, "", "_extract_credentials"], [3, 2, 1, "", "_get_existing_rows"], [3, 3, 1, "", "_prepared_statement_placeholder"], [3, 2, 1, "", "_pull_open_experiment"], [3, 2, 1, "", "_table_exists"], [3, 2, 1, "", "_table_has_correct_structure"], [3, 2, 1, "", "_test_connection"], [3, 3, 1, "", "_write_to_database_separator"], [3, 2, 1, "", "connect"], [3, 2, 1, "", "escape_sql_chars"], [3, 2, 1, "", "get_autoincrement"], [3, 2, 1, "", "get_structure_from_table"]], "py_experimenter.database_connector_mysql": [[4, 1, 1, "", "DatabaseConnectorMYSQL"]], "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL": [[4, 2, 1, "", "_create_database_if_not_existing"], [4, 2, 1, "", "_extract_credentials"], [4, 2, 1, "", "_get_existing_rows"], [4, 3, 1, "", "_prepared_statement_placeholder"], [4, 2, 1, "", "_pull_open_experiment"], [4, 2, 1, "", "_start_transaction"], [4, 2, 1, "", "_table_exists"], [4, 2, 1, "", "_table_has_correct_structure"], [4, 2, 1, "", "_test_connection"], [4, 2, 1, "", "connect"], [4, 2, 1, "", "get_autoincrement"], [4, 2, 1, "", "get_structure_from_table"]], "py_experimenter.exceptions": [[5, 4, 1, "", "ConfigError"], [5, 4, 1, "", "CreatingTableError"], [5, 4, 1, "", "DatabaseConnectionError"], [5, 4, 1, "", "DatabaseCreationError"], [5, 4, 1, "", "DatabaseError"], [5, 4, 1, "", "DatabaseQueryError"], [5, 4, 1, "", "EmptyFillDatabaseCallError"], [5, 4, 1, "", "InvalidConfigError"], [5, 4, 1, "", "InvalidResultFieldError"], [5, 4, 1, "", "InvalidValuesInConfiguration"], [5, 4, 1, "", "MissingLogTableError"], [5, 4, 1, "", "NoConfigFileError"], [5, 4, 1, "", "NoExperimentsLeftException"], [5, 4, 1, "", "ParameterCombinationError"], [5, 4, 1, "", "PyExperimenterError"], [5, 4, 1, "", "TableHasWrongStructureError"]], "py_experimenter.experiment_status": [[6, 1, 1, "", "ExperimentStatus"]], "py_experimenter.experiment_status.ExperimentStatus": [[6, 3, 1, "", "ALL"], [6, 3, 1, "", "CREATED"], [6, 3, 1, "", "DONE"], [6, 3, 1, "", "ERROR"], [6, 3, 1, "", "RUNNING"]], "py_experimenter.experimenter": [[7, 1, 1, "", "PyExperimenter"]], "py_experimenter.experimenter.PyExperimenter": [[7, 2, 1, "", "_execution_worker"], [7, 2, 1, "", "_execution_wrapper"], [7, 2, 1, "", "_is_valid_configuration"], [7, 2, 1, "", "_worker"], [7, 2, 1, "", "delete_table"], [7, 2, 1, "", "execute"], [7, 2, 1, "", "fill_table_from_combination"], [7, 2, 1, "", "fill_table_from_config"], [7, 2, 1, "", "fill_table_with_rows"], [7, 2, 1, "", "get_config_value"], [7, 2, 1, "", "get_logtable"], [7, 2, 1, "", "get_table"], [7, 2, 1, "", "has_option"], [7, 2, 1, "", "has_section"], [7, 2, 1, "", "reset_experiments"], [7, 2, 1, "", "set_config_value"]], "py_experimenter.result_processor": [[9, 1, 1, "", "ResultProcessor"], [9, 5, 1, "", "file_handler"], [9, 5, 1, "", "formatter"], [9, 5, 1, "", "result_logger"]], "py_experimenter.result_processor.ResultProcessor": [[9, 2, 1, "", "_add_timestamps_to_results"], [9, 2, 1, "", "_change_status"], [9, 2, 1, "", "_set_machine"], [9, 2, 1, "", "_set_name"], [9, 2, 1, "", "_valid_result_fields"], [9, 2, 1, "", "_write_error"], [9, 2, 1, "", "process_logs"], [9, 2, 1, "", "process_results"]], "py_experimenter.utils": [[10, 6, 1, "", "_generate_int_data"], [10, 6, 1, "", "add_timestep_result_columns"], [10, 6, 1, "", "combine_fill_table_parameters"], [10, 6, 1, "", "extract_columns"], [10, 6, 1, "", "extract_db_credentials_and_table_name_from_config"], [10, 6, 1, "", "extract_logtables"], [10, 6, 1, "", "get_keyfield_data"], [10, 6, 1, "", "get_keyfield_names"], [10, 6, 1, "", "get_keyfields"], [10, 6, 1, "", "get_result_field_names"], [10, 6, 1, "", "get_resultfields"], [10, 6, 1, "", "get_timestamp_representation"], [10, 6, 1, "", "load_config"], [10, 6, 1, "", "timestamps_for_result_fields"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:exception", "5": "py:data", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "exception", "Python exception"], "5": ["py", "data", "Python data"], "6": ["py", "function", "Python function"]}, "titleterms": {"author": 0, "core": 0, "develop": [0, 18], "team": 0, "contribut": [0, 18], "api": 1, "refer": 1, "py_experiment": [2, 3, 4, 5, 6, 7, 8, 9, 10], "database_connector": 2, "modul": [2, 3, 4, 5, 6, 7, 9, 10], "content": [2, 3, 4, 5, 6, 7, 9, 10], "class": [2, 3, 4, 6, 7, 9], "database_connector_lit": 3, "database_connector_mysql": 4, "except": 5, "experiment_statu": 6, "experiment": 7, "submodul": 8, "result_processor": 9, "attribut": 9, "util": 10, "function": [10, 13, 14, 15, 25], "changelog": 11, "v1": 11, "2": 11, "1": 11, "21": 11, "04": 11, "2023": 11, "featur": 11, "0": 11, "exampl": [11, 13, 14, 15, 16], "fix": 11, "test": [11, 18], "11": 11, "2022": 11, "09": 11, "v0": 11, "6": 11, "01": 11, "03": 11, "5": 11, "17": 11, "4": 11, "02": 11, "2021": 11, "3": 11, "20": 11, "10": 11, "14": 11, "cite": 12, "pyexperiment": [12, 13, 14, 15, 19, 23], "citat": 12, "string": 12, "bibtex": 12, "condit": 13, "paramet": 13, "grid": 13, "experi": [13, 14, 15, 23, 24, 25], "configur": [13, 14, 15, 23, 24], "file": [13, 14, 15, 22, 23, 24], "defin": [13, 14, 15], "execut": [13, 14, 15, 23, 24], "initi": [13, 14], "fill": [13, 14, 23], "tabl": [13, 14, 23], "gener": 14, "usag": [14, 15, 26], "restart": 14, "fail": 14, "result": [14, 15, 23], "print": 14, "latex": 14, "logtabl": [15, 24, 25], "run": 15, "check": 15, "need": 17, "help": 17, "how": 18, "creat": [18, 23], "an": 18, "issu": 18, "setup": 18, "workflow": 18, "us": 18, "poetri": 18, "extend": 18, "unit": 18, "updat": 18, "document": [18, 19], "pull": 18, "request": 18, "welcom": 19, "": 19, "acknowledg": 19, "instal": 20, "licens": 21, "databas": [22, 23, 24], "credenti": 22, "from": 23, "With": 23, "specif": 23, "row": 23, "reset": 23, "obtain": 23, "inform": 24, "keyfield": 24, "resultfield": [24, 25], "custom": 24, "field": 24, "push": 25, "data": 25, "To": 25}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"Authors": [[0, "authors"]], "Core Development Team": [[0, "core-development-team"]], "Contributions": [[0, "contributions"]], "API Reference": [[1, "api-reference"]], "py_experimenter.database_connector": [[2, "module-py_experimenter.database_connector"]], "Module Contents": [[2, "module-contents"], [3, "module-contents"], [4, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [9, "module-contents"], [10, "module-contents"]], "Classes": [[2, "classes"], [3, "classes"], [4, "classes"], [6, "classes"], [7, "classes"], [9, "classes"]], "py_experimenter.database_connector_lite": [[3, "module-py_experimenter.database_connector_lite"]], "py_experimenter.database_connector_mysql": [[4, "module-py_experimenter.database_connector_mysql"]], "py_experimenter.exceptions": [[5, "module-py_experimenter.exceptions"]], "py_experimenter.experiment_status": [[6, "module-py_experimenter.experiment_status"]], "py_experimenter.experimenter": [[7, "module-py_experimenter.experimenter"]], "py_experimenter": [[8, "module-py_experimenter"]], "Submodules": [[8, "submodules"]], "py_experimenter.result_processor": [[9, "module-py_experimenter.result_processor"]], "Attributes": [[9, "attributes"]], "py_experimenter.utils": [[10, "module-py_experimenter.utils"]], "Functions": [[10, "functions"]], "Changelog": [[11, "changelog"]], "v1.2.1 (21/04/2023)": [[11, "v1-2-1-21-04-2023"]], "Feature": [[11, "feature"], [11, "id1"], [11, "id2"], [11, "id6"]], "v1.2.0 (04/04/2023)": [[11, "v1-2-0-04-04-2023"]], "Examples": [[11, "examples"], [11, "id3"], [11, "id7"], [16, "examples"]], "Fix": [[11, "fix"], [11, "id4"], [11, "id8"]], "Tests": [[11, "tests"], [11, "id5"], [11, "id9"]], "v1.1.0 (21/11/2022)": [[11, "v1-1-0-21-11-2022"]], "v1.0.0 (04/09/2022)": [[11, "v1-0-0-04-09-2022"]], "v0.0.6 (01/03/2022)": [[11, "v0-0-6-01-03-2022"]], "v0.0.5 (17/01/2022)": [[11, "v0-0-5-17-01-2022"]], "v0.0.4 (02/11/2021)": [[11, "v0-0-4-02-11-2021"]], "v0.0.3 (20/10/2021)": [[11, "v0-0-3-20-10-2021"]], "v0.0.2 (20/10/2021)": [[11, "v0-0-2-20-10-2021"]], "v0.0.1 (14/10/2021)": [[11, "v0-0-1-14-10-2021"]], "Cite PyExperimenter": [[12, "cite-pyexperimenter"]], "Citation String": [[12, "citation-string"]], "BibTex": [[12, "bibtex"]], "Example: Conditional Parameter Grids": [[13, "Example:-Conditional-Parameter-Grids"]], "Experiment Configuration File": [[13, "Experiment-Configuration-File"], [14, "Experiment-Configuration-File"], [15, "Experiment-Configuration-File"], [24, "experiment-configuration-file"]], "Defining the execution function": [[13, "Defining-the-execution-function"], [14, "Defining-the-execution-function"], [15, "Defining-the-execution-function"]], "Executing PyExperimenter": [[13, "Executing-PyExperimenter"], [14, "Executing-PyExperimenter"], [15, "Executing-PyExperimenter"], [23, "executing-pyexperimenter"]], "Initialize PyExperimenter": [[13, "Initialize-PyExperimenter"], [14, "Initialize-PyExperimenter"]], "Fill Table": [[13, "Fill-Table"], [14, "Fill-Table"]], "Execute PyExperimenter": [[13, "Execute-PyExperimenter"], [14, "Execute-PyExperimenter"]], "Example: General Usage": [[14, "Example:-General-Usage"]], "Restart Failed Experiments": [[14, "Restart-Failed-Experiments"]], "Generating Result Table": [[14, "Generating-Result-Table"]], "Printing LaTex Table": [[14, "Printing-LaTex-Table"]], "Example: Usage of Logtables": [[15, "Example:-Usage-of-Logtables"]], "Run Experiments": [[15, "Run-Experiments"]], "Check results": [[15, "Check-results"]], "Need Help?": [[17, "need-help"]], "How to Contribute": [[18, "how-to-contribute"]], "Creating an Issue": [[18, "creating-an-issue"]], "Setup Development Workflow": [[18, "setup-development-workflow"]], "How to use Poetry": [[18, "how-to-use-poetry"]], "Extend Unit Tests": [[18, "extend-unit-tests"]], "Update Documentation": [[18, "update-documentation"]], "Create Pull Request": [[18, "create-pull-request"]], "Welcome to PyExperimenter\u2019s documentation!": [[19, "welcome-to-pyexperimenter-s-documentation"]], "Acknowledgements": [[19, "acknowledgements"]], "Installation": [[20, "installation"]], "License": [[21, "license"]], "Database Credential File": [[22, "database-credential-file"]], "Creating a PyExperimenter": [[23, "creating-a-pyexperimenter"]], "Fill Database Table": [[23, "fill-database-table"]], "Fill Table From Experiment Configuration File": [[23, "fill-table-from-experiment-configuration-file"]], "Fill Table With Specific Rows": [[23, "fill-table-with-specific-rows"]], "Execute Experiments": [[23, "execute-experiments"]], "Reset Experiments": [[23, "reset-experiments"]], "Obtain Results": [[23, "obtain-results"]], "Database Information": [[24, "database-information"]], "Keyfields": [[24, "keyfields"]], "Resultfields": [[24, "resultfields"]], "Logtables": [[24, "logtables"]], "Execution Information": [[24, "execution-information"]], "Custom Fields": [[24, "custom-fields"]], "Experiment Function": [[25, "experiment-function"]], "Push Data To Resultfields": [[25, "push-data-to-resultfields"]], "Push Data To Logtables": [[25, "push-data-to-logtables"]], "Usage": [[26, "usage"]]}, "indexentries": {"databaseconnector (class in py_experimenter.database_connector)": [[2, "py_experimenter.database_connector.DatabaseConnector"]], "_check_combination_in_existing_rows() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector._check_combination_in_existing_rows"]], "_compute_columns() (py_experimenter.database_connector.databaseconnector static method)": [[2, "py_experimenter.database_connector.DatabaseConnector._compute_columns"]], "_create_table() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector._create_table"]], "_delete_experiments_with_condition() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector._delete_experiments_with_condition"]], "_exclude_fixed_columns() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector._exclude_fixed_columns"]], "_execute_queries() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector._execute_queries"]], "_extract_credentials() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector._extract_credentials"]], "_get_create_table_query() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector._get_create_table_query"]], "_get_existing_rows() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector._get_existing_rows"]], "_get_experiments_with_condition() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector._get_experiments_with_condition"]], "_pop_experiments_with_status() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector._pop_experiments_with_status"]], "_prepare_update_query() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector._prepare_update_query"]], "_pull_open_experiment() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector._pull_open_experiment"]], "_table_exists() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector._table_exists"]], "_table_has_correct_structure() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector._table_has_correct_structure"]], "_test_connection() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector._test_connection"]], "_write_to_database() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector._write_to_database"]], "close_connection() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector.close_connection"]], "commit() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector.commit"]], "connect() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector.connect"]], "create_table_if_not_existing() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector.create_table_if_not_existing"]], "cursor() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector.cursor"]], "delete_table() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector.delete_table"]], "execute() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector.execute"]], "execute_queries() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector.execute_queries"]], "fetchall() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector.fetchall"]], "fill_table() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector.fill_table"]], "get_autoincrement() (py_experimenter.database_connector.databaseconnector static method)": [[2, "py_experimenter.database_connector.DatabaseConnector.get_autoincrement"]], "get_experiment_configuration() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector.get_experiment_configuration"]], "get_logtable() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector.get_logtable"]], "get_structure_from_table() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector.get_structure_from_table"]], "get_table() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector.get_table"]], "module": [[2, "module-py_experimenter.database_connector"], [3, "module-py_experimenter.database_connector_lite"], [4, "module-py_experimenter.database_connector_mysql"], [5, "module-py_experimenter.exceptions"], [6, "module-py_experimenter.experiment_status"], [7, "module-py_experimenter.experimenter"], [8, "module-py_experimenter"], [9, "module-py_experimenter.result_processor"], [10, "module-py_experimenter.utils"]], "prepare_write_query() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector.prepare_write_query"]], "py_experimenter.database_connector": [[2, "module-py_experimenter.database_connector"]], "reset_experiments() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector.reset_experiments"]], "update_database() (py_experimenter.database_connector.databaseconnector method)": [[2, "py_experimenter.database_connector.DatabaseConnector.update_database"]], "databaseconnectorlite (class in py_experimenter.database_connector_lite)": [[3, "py_experimenter.database_connector_lite.DatabaseConnectorLITE"]], "_extract_credentials() (py_experimenter.database_connector_lite.databaseconnectorlite method)": [[3, "py_experimenter.database_connector_lite.DatabaseConnectorLITE._extract_credentials"]], "_get_existing_rows() (py_experimenter.database_connector_lite.databaseconnectorlite method)": [[3, "py_experimenter.database_connector_lite.DatabaseConnectorLITE._get_existing_rows"]], "_prepared_statement_placeholder (py_experimenter.database_connector_lite.databaseconnectorlite attribute)": [[3, "py_experimenter.database_connector_lite.DatabaseConnectorLITE._prepared_statement_placeholder"]], "_pull_open_experiment() (py_experimenter.database_connector_lite.databaseconnectorlite method)": [[3, "py_experimenter.database_connector_lite.DatabaseConnectorLITE._pull_open_experiment"]], "_table_exists() (py_experimenter.database_connector_lite.databaseconnectorlite method)": [[3, "py_experimenter.database_connector_lite.DatabaseConnectorLITE._table_exists"]], "_table_has_correct_structure() (py_experimenter.database_connector_lite.databaseconnectorlite method)": [[3, "py_experimenter.database_connector_lite.DatabaseConnectorLITE._table_has_correct_structure"]], "_test_connection() (py_experimenter.database_connector_lite.databaseconnectorlite method)": [[3, "py_experimenter.database_connector_lite.DatabaseConnectorLITE._test_connection"]], "_write_to_database_separator (py_experimenter.database_connector_lite.databaseconnectorlite attribute)": [[3, "py_experimenter.database_connector_lite.DatabaseConnectorLITE._write_to_database_separator"]], "connect() (py_experimenter.database_connector_lite.databaseconnectorlite method)": [[3, "py_experimenter.database_connector_lite.DatabaseConnectorLITE.connect"]], "escape_sql_chars() (py_experimenter.database_connector_lite.databaseconnectorlite static method)": [[3, "py_experimenter.database_connector_lite.DatabaseConnectorLITE.escape_sql_chars"]], "get_autoincrement() (py_experimenter.database_connector_lite.databaseconnectorlite static method)": [[3, "py_experimenter.database_connector_lite.DatabaseConnectorLITE.get_autoincrement"]], "get_structure_from_table() (py_experimenter.database_connector_lite.databaseconnectorlite method)": [[3, "py_experimenter.database_connector_lite.DatabaseConnectorLITE.get_structure_from_table"]], "py_experimenter.database_connector_lite": [[3, "module-py_experimenter.database_connector_lite"]], "databaseconnectormysql (class in py_experimenter.database_connector_mysql)": [[4, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL"]], "_create_database_if_not_existing() (py_experimenter.database_connector_mysql.databaseconnectormysql method)": [[4, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL._create_database_if_not_existing"]], "_extract_credentials() (py_experimenter.database_connector_mysql.databaseconnectormysql method)": [[4, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL._extract_credentials"]], "_get_existing_rows() (py_experimenter.database_connector_mysql.databaseconnectormysql method)": [[4, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL._get_existing_rows"]], "_prepared_statement_placeholder (py_experimenter.database_connector_mysql.databaseconnectormysql attribute)": [[4, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL._prepared_statement_placeholder"]], "_pull_open_experiment() (py_experimenter.database_connector_mysql.databaseconnectormysql method)": [[4, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL._pull_open_experiment"]], "_start_transaction() (py_experimenter.database_connector_mysql.databaseconnectormysql method)": [[4, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL._start_transaction"]], "_table_exists() (py_experimenter.database_connector_mysql.databaseconnectormysql method)": [[4, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL._table_exists"]], "_table_has_correct_structure() (py_experimenter.database_connector_mysql.databaseconnectormysql method)": [[4, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL._table_has_correct_structure"]], "_test_connection() (py_experimenter.database_connector_mysql.databaseconnectormysql method)": [[4, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL._test_connection"]], "connect() (py_experimenter.database_connector_mysql.databaseconnectormysql method)": [[4, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL.connect"]], "get_autoincrement() (py_experimenter.database_connector_mysql.databaseconnectormysql static method)": [[4, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL.get_autoincrement"]], "get_structure_from_table() (py_experimenter.database_connector_mysql.databaseconnectormysql method)": [[4, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL.get_structure_from_table"]], "py_experimenter.database_connector_mysql": [[4, "module-py_experimenter.database_connector_mysql"]], "configerror": [[5, "py_experimenter.exceptions.ConfigError"]], "creatingtableerror": [[5, "py_experimenter.exceptions.CreatingTableError"]], "databaseconnectionerror": [[5, "py_experimenter.exceptions.DatabaseConnectionError"]], "databasecreationerror": [[5, "py_experimenter.exceptions.DatabaseCreationError"]], "databaseerror": [[5, "py_experimenter.exceptions.DatabaseError"]], "databasequeryerror": [[5, "py_experimenter.exceptions.DatabaseQueryError"]], "emptyfilldatabasecallerror": [[5, "py_experimenter.exceptions.EmptyFillDatabaseCallError"]], "invalidconfigerror": [[5, "py_experimenter.exceptions.InvalidConfigError"]], "invalidresultfielderror": [[5, "py_experimenter.exceptions.InvalidResultFieldError"]], "invalidvaluesinconfiguration": [[5, "py_experimenter.exceptions.InvalidValuesInConfiguration"]], "missinglogtableerror": [[5, "py_experimenter.exceptions.MissingLogTableError"]], "noconfigfileerror": [[5, "py_experimenter.exceptions.NoConfigFileError"]], "noexperimentsleftexception": [[5, "py_experimenter.exceptions.NoExperimentsLeftException"]], "parametercombinationerror": [[5, "py_experimenter.exceptions.ParameterCombinationError"]], "pyexperimentererror": [[5, "py_experimenter.exceptions.PyExperimenterError"]], "tablehaswrongstructureerror": [[5, "py_experimenter.exceptions.TableHasWrongStructureError"]], "py_experimenter.exceptions": [[5, "module-py_experimenter.exceptions"]], "all (py_experimenter.experiment_status.experimentstatus attribute)": [[6, "py_experimenter.experiment_status.ExperimentStatus.ALL"]], "created (py_experimenter.experiment_status.experimentstatus attribute)": [[6, "py_experimenter.experiment_status.ExperimentStatus.CREATED"]], "done (py_experimenter.experiment_status.experimentstatus attribute)": [[6, "py_experimenter.experiment_status.ExperimentStatus.DONE"]], "error (py_experimenter.experiment_status.experimentstatus attribute)": [[6, "py_experimenter.experiment_status.ExperimentStatus.ERROR"]], "experimentstatus (class in py_experimenter.experiment_status)": [[6, "py_experimenter.experiment_status.ExperimentStatus"]], "running (py_experimenter.experiment_status.experimentstatus attribute)": [[6, "py_experimenter.experiment_status.ExperimentStatus.RUNNING"]], "py_experimenter.experiment_status": [[6, "module-py_experimenter.experiment_status"]], "pyexperimenter (class in py_experimenter.experimenter)": [[7, "py_experimenter.experimenter.PyExperimenter"]], "_execution_worker() (py_experimenter.experimenter.pyexperimenter method)": [[7, "py_experimenter.experimenter.PyExperimenter._execution_worker"]], "_execution_wrapper() (py_experimenter.experimenter.pyexperimenter method)": [[7, "py_experimenter.experimenter.PyExperimenter._execution_wrapper"]], "_is_valid_configuration() (py_experimenter.experimenter.pyexperimenter static method)": [[7, "py_experimenter.experimenter.PyExperimenter._is_valid_configuration"]], "_worker() (py_experimenter.experimenter.pyexperimenter method)": [[7, "py_experimenter.experimenter.PyExperimenter._worker"]], "delete_table() (py_experimenter.experimenter.pyexperimenter method)": [[7, "py_experimenter.experimenter.PyExperimenter.delete_table"]], "execute() (py_experimenter.experimenter.pyexperimenter method)": [[7, "py_experimenter.experimenter.PyExperimenter.execute"]], "fill_table_from_combination() (py_experimenter.experimenter.pyexperimenter method)": [[7, "py_experimenter.experimenter.PyExperimenter.fill_table_from_combination"]], "fill_table_from_config() (py_experimenter.experimenter.pyexperimenter method)": [[7, "py_experimenter.experimenter.PyExperimenter.fill_table_from_config"]], "fill_table_with_rows() (py_experimenter.experimenter.pyexperimenter method)": [[7, "py_experimenter.experimenter.PyExperimenter.fill_table_with_rows"]], "get_config_value() (py_experimenter.experimenter.pyexperimenter method)": [[7, "py_experimenter.experimenter.PyExperimenter.get_config_value"]], "get_logtable() (py_experimenter.experimenter.pyexperimenter method)": [[7, "py_experimenter.experimenter.PyExperimenter.get_logtable"]], "get_table() (py_experimenter.experimenter.pyexperimenter method)": [[7, "py_experimenter.experimenter.PyExperimenter.get_table"]], "has_option() (py_experimenter.experimenter.pyexperimenter method)": [[7, "py_experimenter.experimenter.PyExperimenter.has_option"]], "has_section() (py_experimenter.experimenter.pyexperimenter method)": [[7, "py_experimenter.experimenter.PyExperimenter.has_section"]], "py_experimenter.experimenter": [[7, "module-py_experimenter.experimenter"]], "reset_experiments() (py_experimenter.experimenter.pyexperimenter method)": [[7, "py_experimenter.experimenter.PyExperimenter.reset_experiments"]], "set_config_value() (py_experimenter.experimenter.pyexperimenter method)": [[7, "py_experimenter.experimenter.PyExperimenter.set_config_value"]], "py_experimenter": [[8, "module-py_experimenter"]], "resultprocessor (class in py_experimenter.result_processor)": [[9, "py_experimenter.result_processor.ResultProcessor"]], "_add_timestamps_to_results() (py_experimenter.result_processor.resultprocessor static method)": [[9, "py_experimenter.result_processor.ResultProcessor._add_timestamps_to_results"]], "_change_status() (py_experimenter.result_processor.resultprocessor method)": [[9, "py_experimenter.result_processor.ResultProcessor._change_status"]], "_set_machine() (py_experimenter.result_processor.resultprocessor method)": [[9, "py_experimenter.result_processor.ResultProcessor._set_machine"]], "_set_name() (py_experimenter.result_processor.resultprocessor method)": [[9, "py_experimenter.result_processor.ResultProcessor._set_name"]], "_valid_result_fields() (py_experimenter.result_processor.resultprocessor method)": [[9, "py_experimenter.result_processor.ResultProcessor._valid_result_fields"]], "_write_error() (py_experimenter.result_processor.resultprocessor method)": [[9, "py_experimenter.result_processor.ResultProcessor._write_error"]], "file_handler (in module py_experimenter.result_processor)": [[9, "py_experimenter.result_processor.file_handler"]], "formatter (in module py_experimenter.result_processor)": [[9, "py_experimenter.result_processor.formatter"]], "process_logs() (py_experimenter.result_processor.resultprocessor method)": [[9, "py_experimenter.result_processor.ResultProcessor.process_logs"]], "process_results() (py_experimenter.result_processor.resultprocessor method)": [[9, "py_experimenter.result_processor.ResultProcessor.process_results"]], "py_experimenter.result_processor": [[9, "module-py_experimenter.result_processor"]], "result_logger (in module py_experimenter.result_processor)": [[9, "py_experimenter.result_processor.result_logger"]], "_generate_int_data() (in module py_experimenter.utils)": [[10, "py_experimenter.utils._generate_int_data"]], "add_timestep_result_columns() (in module py_experimenter.utils)": [[10, "py_experimenter.utils.add_timestep_result_columns"]], "combine_fill_table_parameters() (in module py_experimenter.utils)": [[10, "py_experimenter.utils.combine_fill_table_parameters"]], "extract_columns() (in module py_experimenter.utils)": [[10, "py_experimenter.utils.extract_columns"]], "extract_db_credentials_and_table_name_from_config() (in module py_experimenter.utils)": [[10, "py_experimenter.utils.extract_db_credentials_and_table_name_from_config"]], "extract_logtables() (in module py_experimenter.utils)": [[10, "py_experimenter.utils.extract_logtables"]], "get_keyfield_data() (in module py_experimenter.utils)": [[10, "py_experimenter.utils.get_keyfield_data"]], "get_keyfield_names() (in module py_experimenter.utils)": [[10, "py_experimenter.utils.get_keyfield_names"]], "get_keyfields() (in module py_experimenter.utils)": [[10, "py_experimenter.utils.get_keyfields"]], "get_result_field_names() (in module py_experimenter.utils)": [[10, "py_experimenter.utils.get_result_field_names"]], "get_resultfields() (in module py_experimenter.utils)": [[10, "py_experimenter.utils.get_resultfields"]], "get_timestamp_representation() (in module py_experimenter.utils)": [[10, "py_experimenter.utils.get_timestamp_representation"]], "load_config() (in module py_experimenter.utils)": [[10, "py_experimenter.utils.load_config"]], "py_experimenter.utils": [[10, "module-py_experimenter.utils"]], "timestamps_for_result_fields() (in module py_experimenter.utils)": [[10, "py_experimenter.utils.timestamps_for_result_fields"]]}})