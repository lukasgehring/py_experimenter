:py:mod:`py_experimenter.database_connector_lite`
=================================================

.. py:module:: py_experimenter.database_connector_lite


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   py_experimenter.database_connector_lite.DatabaseConnectorLITE




.. py:class:: DatabaseConnectorLITE(config: configparser.ConfigParser)

   Bases: :py:obj:`py_experimenter.database_connector.DatabaseConnector`

   Helper class that provides a standard way to create an ABC using
   inheritance.

   .. py:attribute:: _write_to_database_separator
      :value: "','"

      

   .. py:attribute:: _prepared_statement_placeholder
      :value: '?'

      

   .. py:method:: _extract_credentials()


   .. py:method:: _test_connection()


   .. py:method:: connect()


   .. py:method:: _pull_open_experiment() -> Tuple[int, List, List]


   .. py:method:: _table_exists(cursor) -> bool


   .. py:method:: escape_sql_chars(*args)
      :staticmethod:


   .. py:method:: get_autoincrement()
      :staticmethod:


   .. py:method:: _table_has_correct_structure(cursor, typed_fields) -> List[str]


   .. py:method:: _get_existing_rows(column_names)


   .. py:method:: get_structure_from_table(cursor)



