Search.setIndex({"docnames": ["3rd-party", "authors", "autoapi/index", "autoapi/py_experimenter/database_connector/index", "autoapi/py_experimenter/database_connector_lite/index", "autoapi/py_experimenter/database_connector_mysql/index", "autoapi/py_experimenter/exceptions/index", "autoapi/py_experimenter/experiment_status/index", "autoapi/py_experimenter/experimenter/index", "autoapi/py_experimenter/index", "autoapi/py_experimenter/result_processor/index", "autoapi/py_experimenter/utils/index", "changelog", "cite", "examples/example_conditional_grid", "examples/example_general_usage", "examples/example_logtables", "examples/example_pause_and_contiue", "examples/index", "help", "how-to-contribute", "index", "installation", "issues", "license", "release-version", "usage/database_credential_file", "usage/execution", "usage/experiment_configuration_file", "usage/experiment_function", "usage/index"], "filenames": ["3rd-party.rst", "authors.rst", "autoapi/index.rst", "autoapi/py_experimenter/database_connector/index.rst", "autoapi/py_experimenter/database_connector_lite/index.rst", "autoapi/py_experimenter/database_connector_mysql/index.rst", "autoapi/py_experimenter/exceptions/index.rst", "autoapi/py_experimenter/experiment_status/index.rst", "autoapi/py_experimenter/experimenter/index.rst", "autoapi/py_experimenter/index.rst", "autoapi/py_experimenter/result_processor/index.rst", "autoapi/py_experimenter/utils/index.rst", "changelog.rst", "cite.rst", "examples/example_conditional_grid.ipynb", "examples/example_general_usage.ipynb", "examples/example_logtables.ipynb", "examples/example_pause_and_contiue.ipynb", "examples/index.rst", "help.rst", "how-to-contribute.rst", "index.rst", "installation.rst", "issues.rst", "license.rst", "release-version.rst", "usage/database_credential_file.rst", "usage/execution.rst", "usage/experiment_configuration_file.rst", "usage/experiment_function.rst", "usage/index.rst"], "titles": ["Usage of 3rd Party Dependencies", "Authors", "API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">py_experimenter.database_connector</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">py_experimenter.database_connector_lite</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">py_experimenter.database_connector_mysql</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">py_experimenter.exceptions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">py_experimenter.experiment_status</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">py_experimenter.experimenter</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">py_experimenter</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">py_experimenter.result_processor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">py_experimenter.utils</span></code>", "Changelog", "Cite PyExperimenter", "Example: Conditional Parameter Grids", "Example: General Usage", "Example: Usage of Logtables", "Example: Pause and Continue", "Examples", "Need Help?", "How to Contribute", "Welcome to PyExperimenter\u2019s documentation!", "Installation", "Creating an Issue", "License", "Release Version", "Database Credential File", "Executing PyExperimenter", "Experiment Configuration File", "Experiment Function", "Usage"], "terms": {"thi": [0, 2, 7, 8, 10, 12, 14, 15, 16, 17, 20, 21, 24, 26, 27, 28, 30], "part": [0, 8, 12, 28, 29], "document": [0, 2, 12, 14, 15, 16, 22, 24, 28], "refer": [0, 10, 12, 20], "need": [0, 12, 14, 15, 16, 17, 20, 23, 26, 27], "us": [0, 3, 8, 10, 12, 13, 14, 15, 16, 20, 21, 23, 24, 25, 27, 28, 30], "activ": [0, 14, 16, 20, 25], "dure": [0, 8, 12, 27, 28, 29, 30], "develop": [0, 12, 22, 25], "It": [0, 12, 14, 15, 20, 21, 28], "contain": [0, 2, 8, 12, 14, 15, 20, 23, 26, 27, 28], "short": 0, "descript": [0, 20, 22, 23, 28], "an": [0, 3, 8, 10, 12, 14, 15, 16, 17, 20, 21, 24, 26, 27, 28, 29, 30], "explan": [0, 14, 15, 16, 28], "how": [0, 12, 16, 17, 19, 23, 27, 28], "i": [0, 8, 12, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "meant": [0, 14, 15, 28, 29], "pyexperiment": [0, 8, 12, 17, 19, 20, 22, 25, 26, 28, 30], "manag": [0, 21, 27], "packag": [0, 12, 17, 22], "tool": [0, 21, 22], "python": [0, 12, 20, 22, 25], "allow": [0, 12, 21, 28], "declar": 0, "your": [0, 20, 23, 25, 29], "project": [0, 12, 20, 21, 25], "instal": [0, 12, 14, 15, 16, 17, 20, 21, 25], "updat": [0, 8, 12, 25], "them": [0, 8, 10, 12, 14], "you": [0, 10, 13, 14, 15, 16, 17, 19, 20, 23, 27, 28, 29], "also": [0, 15, 16, 20, 23, 27, 28, 29], "build": [0, 8, 12, 20, 22, 25], "which": [0, 8, 12, 14, 15, 20, 27, 28, 30], "can": [0, 8, 10, 12, 14, 15, 16, 17, 19, 20, 21, 22, 27, 28, 29, 30], "upload": 0, "repositori": [0, 20, 22, 25], "via": [0, 8, 12, 14, 15, 21, 22, 27, 28], "pip": [0, 14, 15, 16, 17, 20, 22, 25], "For": [0, 8, 14, 16, 27, 28], "instruct": 0, "further": [0, 14, 15, 16, 19, 20, 27, 28, 30], "command": [0, 20], "than": [0, 20, 28], "ones": 0, "list": [0, 3, 4, 5, 8, 10, 11, 12, 15, 27, 28, 30], "below": [0, 17, 28, 30], "pleas": [0, 19, 20, 23, 27, 28], "make": [0, 8, 15, 20, 27], "sure": [0, 20, 27], "follow": [0, 8, 10, 13, 20, 22, 24, 27, 28, 29, 30], "describ": [0, 12, 15, 20, 23, 27, 28], "step": [0, 14, 15, 17, 20, 23, 25, 28, 30], "do": [0, 8, 14, 19, 20, 24, 27, 29], "NOT": [0, 24], "conda": [0, 20, 25], "itself": [0, 12], "add": [0, 8, 12, 16, 20, 23, 25], "path": [0, 8, 11, 14, 15, 16, 17, 26, 27, 28, 29], "If": [0, 8, 11, 13, 14, 16, 19, 20, 25, 26, 27, 28], "check": [0, 8, 12, 19, 20, 25, 27, 28], "out": [0, 24, 27], "To": [0, 8, 14, 15, 16, 17, 20, 23, 27], "end": [0, 8, 15, 20, 28], "navig": [0, 20], "git": [0, 20], "folder": [0, 20, 28], "execut": [0, 3, 8, 12, 20, 21, 22, 25, 26, 29, 30], "instll": 0, "excact": 0, "version": [0, 12, 16, 17, 22], "new": [0, 7, 11, 12, 20, 23, 25, 27], "core": [0, 14, 15, 17, 22], "first": [0, 8, 12, 14, 15, 16, 17, 20, 25, 29], "latest": [0, 12, 25], "pyproject": [0, 12], "toml": [0, 12], "file": [0, 8, 11, 12, 20, 21, 24, 25, 30], "want": [0, 10, 15, 17, 20, 23, 27, 28], "specif": 0, "second": [0, 17, 28], "package_nam": 0, "A": [0, 8, 23, 24, 27, 28, 30], "ad": [0, 8, 12, 14, 15, 17, 27, 28], "given": [0, 8, 10, 12, 14, 15, 16, 26, 27, 28, 29], "dev": [0, 22], "group": [0, 22], "The": [0, 8, 10, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 27, 28, 29, 30], "lock": [0, 12], "automat": [0, 11, 12, 22, 25, 28, 30], "when": [0, 8, 12, 17, 26, 28], "so": [0, 8, 14, 23, 24, 27], "therefor": [0, 8, 12, 15, 20, 27], "tri": [0, 8], "resolv": 0, "manual": [0, 20, 21, 28, 30], "most": [0, 15], "current": [0, 12, 27, 28], "libari": 0, "easili": [0, 12, 13, 14, 15, 16, 22, 27, 30], "major": [0, 25], "minor": [0, 25], "patch": [0, 25], "prereleas": [0, 25], "final": [0, 12, 20, 29, 30], "creat": [0, 2, 3, 7, 8, 11, 12, 14, 15, 16, 17, 19, 21, 25, 28, 30], "dist": 0, "built": [0, 8, 20], "tanja": [1, 13, 14, 16, 22, 24], "torned": [1, 13, 20, 22, 24], "alexand": [1, 13, 22, 24], "luka": [1, 13, 15, 17, 22, 24], "fehr": [1, 13, 22, 24], "helena": [1, 13, 22, 24], "graf": [1, 13, 22, 24], "jona": [1, 13, 22, 24], "hansel": [1, 13, 22, 24], "felix": [1, 13, 22, 24], "mohr": [1, 13, 22, 24], "marcel": [1, 13, 22, 24], "wever": [1, 13, 22, 24], "karlson": 1, "pfannschmidt": 1, "gehr": [1, 13, 22, 24], "page": [2, 12, 13], "auto": [2, 15, 16, 17], "gener": [2, 7, 12, 14, 16, 18, 20, 27, 30], "1": [2, 8, 14, 15, 16, 17, 22, 27, 28], "py_experiment": [2, 14, 15, 16, 17, 20, 22, 27, 28, 29], "database_connector": [2, 4, 5, 9], "database_connector_lit": [2, 9], "database_connector_mysql": [2, 9], "except": [2, 8, 9, 12, 20], "experiment_statu": [2, 8, 9], "experiment": [2, 9, 12, 14, 15, 16, 17, 20, 22, 25, 27], "result_processor": [2, 8, 9, 14, 15, 16, 17, 27, 29], "util": [2, 9, 12], "sphinx": [2, 12, 20, 22], "autoapi": [2, 22], "databaseconnector": [3, 4, 5], "config": [3, 8, 10, 11, 14, 15, 16, 17, 25, 26, 27, 28], "configpars": [3, 5, 8, 10, 11], "use_codecarbon": [3, 5, 8, 10, 27], "bool": [3, 4, 5, 8, 10, 11], "codecarbon_config": [3, 5, 10, 11], "logger": [3, 5, 10, 12, 27], "base": [3, 4, 5, 6, 7, 8, 11, 12, 14, 15, 16, 17, 20, 21, 25, 27, 28, 30], "abc": 3, "helper": 3, "provid": [3, 8, 12, 14, 15, 16, 17, 20, 23, 24, 26, 27, 28, 30], "standard": [3, 28], "wai": [3, 13, 21, 27], "inherit": 3, "abstract": 3, "_extract_credenti": [3, 4, 5], "_test_connect": [3, 4, 5], "connect": [3, 4, 5, 8, 11, 14, 15, 16, 17, 24, 28], "close_connect": 3, "commit": [3, 20, 25], "none": [3, 5, 8, 10, 11, 14, 15, 16, 17], "cursor": [3, 4, 5], "sql_statement": 3, "valu": [3, 8, 10, 12, 14, 16, 17, 27, 28, 29, 30], "fetchal": 3, "create_table_if_not_exist": 3, "_table_exist": [3, 4, 5], "table_nam": [3, 5, 8, 10, 27, 28], "str": [3, 4, 5, 8, 10, 11, 15, 17], "static": [3, 4, 5, 10], "_compute_column": 3, "keyfield": [3, 8, 12, 14, 15, 16, 17, 27, 29], "resultfield": [3, 12, 14, 15, 16, 17], "_exclude_fixed_column": 3, "column": [3, 8, 12, 14, 15, 17, 27, 28], "_create_t": 3, "tupl": [3, 4, 5, 8, 10, 11, 15], "table_typ": 3, "_get_create_table_queri": 3, "get_autoincr": [3, 4, 5], "self": 3, "_table_has_correct_structur": [3, 4, 5], "typed_field": [3, 4, 5], "fill_tabl": 3, "paramet": [3, 8, 10, 11, 12, 15, 16, 17, 18, 21, 27, 28, 29, 30], "fixed_parameter_combin": [3, 8, 11, 14], "_check_combination_in_existing_row": 3, "combin": [3, 8, 14], "existing_row": 3, "keyfield_nam": [3, 11, 28], "_get_existing_row": [3, 4, 5], "column_nam": [3, 4, 5], "get_experiment_configur": 3, "random_ord": [3, 4, 5, 8, 12, 15, 27], "int": [3, 4, 5, 8, 10, 14, 15, 16, 17, 28], "dict": [3, 8, 10, 11, 14, 15, 16, 17, 27, 29], "ani": [3, 8, 14, 20, 23, 24, 27, 28, 29, 30], "_pull_open_experi": [3, 4, 5], "_select_open_experiments_from_db": 3, "random_order_str": [3, 4, 5], "_get_pull_experiment_queri": [3, 4, 5], "order_bi": [3, 4, 5], "_write_to_databas": 3, "pull_paused_experi": 3, "experiment_id": [3, 8, 10, 15, 16, 17, 27, 28], "prepare_write_queri": 3, "kei": [3, 8, 10, 12, 20, 28], "update_databas": 3, "object": [3, 10, 16], "condit": [3, 12, 18, 24, 27], "_prepare_update_queri": 3, "reset_experi": [3, 8, 12, 15, 27], "state": [3, 8, 12, 20, 27, 28], "_pop_experiments_with_statu": 3, "statu": [3, 8, 10, 12, 14, 15, 16, 17, 22, 27, 30], "_get_experiments_with_condit": 3, "_delete_experiments_with_condit": 3, "get_structure_from_t": [3, 4, 5], "execute_queri": 3, "queri": 3, "delete_t": [3, 8, 12], "get_logt": [3, 8, 16], "logtable_nam": [3, 8, 10, 28, 29], "panda": [3, 8, 12, 14, 15, 22, 27, 30], "datafram": [3, 8, 12, 14, 15, 17, 27, 30], "get_codecarbon_t": [3, 8, 15, 17, 27], "get_tabl": [3, 8, 14, 15, 16, 17, 27], "databaseconnectorlit": 4, "_write_to_database_separ": 4, "_prepared_statement_placehold": [4, 5], "escape_sql_char": 4, "arg": 4, "databaseconnectormysql": 5, "experiment_configur": [5, 8, 27], "database_credential_file_path": [5, 8, 27], "": [5, 15], "_create_database_if_not_exist": 5, "credenti": [5, 8, 20, 27, 28, 30], "_start_transact": 5, "readonli": 5, "fals": [5, 8, 14, 15, 16, 17, 27, 28], "pyexperimentererror": 6, "common": [6, 28], "class": [6, 12], "all": [6, 7, 8, 12, 14, 15, 16, 17, 20, 23, 24, 25, 27, 28, 29, 30], "non": [6, 21], "exit": 6, "parametercombinationerror": [6, 8], "databaseerror": 6, "databasecreationerror": 6, "databaseconnectionerror": [6, 8], "databasequeryerror": 6, "emptyfilldatabasecallerror": 6, "creatingtableerror": 6, "invalidresultfielderror": 6, "invalidlogfielderror": [6, 10], "tablehaswrongstructureerror": 6, "noexperimentsleftexcept": 6, "nopausedexperimentsexcept": [6, 8], "configerror": 6, "noconfigfileerror": 6, "filenotfounderror": 6, "invalidconfigerror": [6, 8], "invalidvaluesinconfigur": [6, 8], "missinglogtableerror": 6, "experimentstatu": [7, 8, 12, 17, 27], "enum": [7, 12], "enumer": 7, "deriv": 7, "from": [7, 8, 10, 11, 12, 14, 15, 16, 17, 21, 24, 25, 29, 30], "defin": [7, 8, 12, 21, 27, 28, 29, 30], "run": [7, 8, 12, 14, 17, 27, 30], "done": [7, 8, 14, 15, 16, 17, 23, 27, 28], "error": [7, 8, 12, 14, 15, 16, 17, 27, 28, 30], "paus": [7, 8, 12, 18], "experiment_configuration_file_path": [8, 14, 15, 16, 17, 27], "o": [8, 12, 14, 15, 16, 17, 29], "join": [8, 14, 15, 16, 17, 29], "cfg": [8, 14, 15, 16, 17, 26, 27], "database_credenti": [8, 26, 27], "database_nam": [8, 27, 28], "true": [8, 11, 14, 15, 16, 17, 27, 28, 29], "name": [8, 10, 11, 12, 14, 15, 16, 17, 20, 22, 27, 28], "logger_nam": [8, 27], "py": [8, 12, 14, 15, 16, 17, 20, 22, 25, 27], "log_level": [8, 15, 17, 27, 28], "log": [8, 10, 12, 16, 20, 27, 28, 29, 30], "info": [8, 14, 15, 16, 17, 27], "log_fil": [8, 27], "handl": [8, 12], "initi": [8, 11, 16, 17], "collect": [8, 14, 16, 21], "experi": [8, 10, 11, 12, 13, 21, 22, 30], "respect": [8, 25], "result": [8, 10, 12, 13, 14, 17, 21, 22, 28, 29, 30], "set_config_valu": 8, "section_nam": 8, "modifi": [8, 12, 16, 24], "configur": [8, 11, 12, 21, 30], "within": [8, 12, 21, 28, 29], "properti": [8, 21], "identifi": [8, 28], "overwritten": [8, 29], "wa": [8, 12, 21, 27, 28], "exist": [8, 11, 14, 15, 16, 17, 20, 27], "beforehand": [8, 27], "section": [8, 27, 28, 29], "should": [8, 14, 15, 16, 20, 23, 28], "set": [8, 12, 14, 15, 16, 17, 21, 27, 30], "whose": [8, 28], "rais": [8, 10, 14, 15, 17], "either": [8, 20, 28], "miss": [8, 12], "ha": [8, 12, 14, 15, 16, 17, 19, 20, 26, 27, 28, 29, 30], "invalid": [8, 10], "inform": [8, 11, 12, 14, 15, 16, 20, 23, 25, 27, 29, 30], "get_config_valu": 8, "return": [8, 11, 17, 27], "type": [8, 28], "nooptionerror": 8, "call": [8, 10, 12, 14, 15, 27, 28, 29], "has_sect": 8, "whether": [8, 24, 25], "otherwis": [8, 20, 24, 30], "has_opt": 8, "_is_valid_configur": 8, "valid": [8, 12], "e": [8, 12, 14, 15, 16, 20, 22, 27, 28, 29, 30], "necessari": [8, 23, 30], "field": [8, 10, 11, 12, 14, 16, 21], "databas": [8, 10, 11, 12, 14, 15, 16, 17, 20, 21, 22, 29, 30], "mysql": [8, 12, 20, 26, 28, 30], "sqlite": [8, 14, 15, 16, 17, 28], "case": [8, 15, 17, 20, 23, 26, 27, 28, 30], "ar": [8, 10, 12, 14, 15, 16, 20, 21, 22, 23, 27, 28, 29, 30], "avail": [8, 12, 20, 27], "option": [8, 12, 28], "host": [8, 26], "user": [8, 20, 26, 30], "password": [8, 26], "default": [8, 14, 15, 16, 25, 26, 27, 28], "fill_table_from_combin": [8, 14], "row": [8, 12, 14, 15, 16, 17], "tabl": [8, 11, 12, 16, 17, 28, 30], "doe": [8, 11, 14, 15, 16, 17, 25], "been": [8, 12, 17, 19, 20, 28, 30], "afterward": [8, 14, 20, 27], "fill": [8, 12, 16, 17, 28, 29], "cartesian": [8, 14, 15, 27], "product": [8, 14, 15, 22, 27], "where": [8, 12, 20, 23, 27, 28], "each": [8, 10, 12, 14, 15, 16, 17, 27, 28, 30], "up": [8, 15, 21], "note": [8, 14, 15, 16, 17, 27, 28, 29], "onli": [8, 12, 14, 17, 27, 28, 29], "alreadi": [8, 16, 25, 27], "match": 8, "In": [8, 12, 15, 17, 20, 21, 23, 28, 30], "exampl": [8, 19, 21, 23, 25, 27, 28, 29], "method": [8, 10, 12, 14, 15, 16, 23], "a2": 8, "2": [8, 14, 15, 16, 17, 22, 28], "4": [8, 14, 15, 16, 17, 22, 27, 28], "b": [8, 20], "c": [8, 12, 24], "cat": 8, "dog": 8, "accord": [8, 12, 14, 16, 20, 25, 27, 28], "four": [8, 28], "predefin": 8, "dictionari": [8, 10], "possibl": [8, 28], "fill_table_from_config": [8, 15, 16, 17, 27], "fill_table_with_row": [8, 15, 27], "entri": [8, 14, 15, 28, 29], "made": [8, 20], "pair": [8, 10], "valueerror": [8, 14, 15, 17, 20], "experiment_funct": [8, 15, 27], "callabl": 8, "resultprocessor": [8, 10, 12, 14, 15, 16, 17, 27, 29], "max_experi": [8, 12, 14, 15, 16, 17, 27], "pull": [8, 12, 25, 30], "open": [8, 12, 13, 14, 15, 16, 17, 27, 30], "mani": [8, 12, 27], "process": [8, 10, 12, 14, 15, 17, 29, 30], "start": [8, 12, 20, 21, 27, 28], "specifi": [8, 16, 21, 27, 28], "n_job": [8, 12, 16, 28], "singl": [8, 12, 14, 15, 16, 21, 27, 28, 29], "sequenti": [8, 16, 27], "until": [8, 27], "By": [8, 26, 27], "order": [8, 12, 27], "determin": [8, 17, 27], "id": [8, 12, 14, 15, 16, 17, 27, 28], "randomli": 8, "after": [8, 14, 15, 17, 20, 21, 27, 30], "continu": [8, 12, 18, 19, 27], "written": [8, 14, 15, 27, 28, 29], "success": 8, "correspond": [8, 16, 22, 26, 27, 28, 30], "occur": [8, 12, 23, 27], "chang": [8, 20], "altern": [8, 27, 28], "unpaus": [8, 17], "again": [8, 15, 20], "unpause_experi": [8, 17, 27], "befor": [8, 17, 20, 25], "local": [8, 14, 16, 20], "appear": 8, "function": [8, 12, 20, 21, 27, 28, 30], "differ": [8, 12, 16, 17, 21, 27, 29, 30], "parametr": [8, 27], "number": [8, 13, 14, 16, 25, 28], "wrong": [8, 12], "data": [8, 14, 15, 16, 17, 28], "context": 8, "mean": [8, 14, 15, 16, 17, 21, 27, 29], "its": [8, 12, 27, 28], "param": [8, 10, 11], "_description_": 8, "_worker": 8, "worker": [8, 12], "repeatedli": 8, "_execution_wrapp": [8, 12, 15], "one": [8, 11, 12, 13, 14, 15, 16, 17, 20, 21, 27, 28], "Then": [8, 20], "therebi": [8, 21, 22, 28], "have": [8, 12, 14, 15, 16, 19, 20, 23, 27, 28, 29], "directli": [8, 20, 28], "finish": [8, 14, 15, 16, 17, 30], "successfulli": [8, 14, 15, 17], "noexperimentslefterror": 8, "left": 8, "_execute_experi": 8, "keyfield_valu": [8, 11, 15], "delet": [8, 27], "reset": [8, 12, 15, 30], "variabl": [8, 16], "length": 8, "argument": 8, "multipl": [8, 12, 14, 15, 27, 29], "drop": 8, "addition": [8, 14, 15, 16, 20, 23, 27, 28, 30], "associ": [8, 24], "pd": [8, 15, 17], "codecarbon": [8, 10, 12, 21, 22, 30], "credential_path": 10, "whenev": 10, "write": [10, 12, 14, 15, 16, 17, 28, 29, 30], "process_result": [10, 14, 15, 16, 17, 29], "_write_emiss": 10, "emission_data": 10, "output": [10, 15, 17, 20, 25, 28], "emissionsdata": 10, "offline_mod": [10, 15, 17, 28], "_add_timestamps_to_result": 10, "process_log": [10, 16, 29], "append": 10, "logtabl": [10, 12, 18], "structur": [10, 20, 30], "without": [10, 20, 24, 27], "prefix": [10, 28], "table_name__": 10, "inner": 10, "columnsnam": 10, "_valid_logtable_log": 10, "_change_statu": 10, "_write_error": 10, "error_msg": 10, "_set_machin": 10, "machine_id": 10, "_set_nam": 10, "_valid_result_field": 10, "result_field": 10, "load_config": 11, "load": [11, 15, 17], "extract_codecarbon_config": 11, "write_codecarbon_config": 11, "extract_codecarbon_column": 11, "with_typ": 11, "get_keyfield_data": 11, "extract_db_credentials_and_table_name_from_config": 11, "mysql_connector": 11, "get_keyfield_nam": 11, "get_keyfield": 11, "get_result_field_nam": 11, "get_resultfield": 11, "extract_logt": 11, "experiment_table_nam": 11, "extract_column": 11, "clean": 11, "timestamps_for_result_field": 11, "add_timestep_result_column": 11, "result_field_configur": 11, "combine_fill_table_paramet": 11, "_generate_int_data": 11, "get_timestamp_represent": 11, "random": [12, 14, 15, 16, 17, 27, 30], "later": [12, 17, 27], "hotfix": 12, "cluster": 12, "runner": 12, "could": [12, 19, 20], "same": [12, 14, 16, 20, 27, 28], "reflect": 12, "improv": [12, 20, 23], "remov": 12, "thei": [12, 15, 28], "now": [12, 15, 16, 17], "might": [12, 28], "help": [12, 23, 28], "interest": 12, "messag": 12, "better": 12, "feedback": [12, 20], "about": [12, 14, 15, 16, 23, 27, 28], "why": 12, "did": [12, 20], "work": [12, 20, 21, 23, 25, 26, 28], "implement": 12, "level": [12, 27], "custom": [12, 14, 15, 16, 17], "furthermor": [12, 15, 28, 29], "formatt": 12, "well": [12, 14, 16, 21, 28], "handler": 12, "ensur": [12, 20], "both": 12, "consol": 12, "notebook": [12, 14, 15, 16, 17, 25], "longer": [12, 17], "overwrit": [12, 27], "basicconfig": 12, "framework": 12, "measur": [12, 21, 28], "carbon": [12, 14, 15, 16, 21, 27, 28, 30], "emiss": [12, 14, 15, 16, 21, 27, 28, 30], "issu": [12, 19, 20], "templat": 12, "request": [12, 25], "extend": [12, 28], "contribut": 12, "replac": [12, 14, 15, 16, 20], "connector": 12, "depend": [12, 14, 20, 22, 23, 27], "pymysql": [12, 22], "instead": [12, 14, 16, 27, 28], "bugfix": 12, "escap": 12, "sql": 12, "statement": 12, "perform": [12, 16, 21, 28, 29], "includ": [12, 20, 22, 24, 28, 30], "joss": [12, 13], "public": [12, 13, 25], "increment": 12, "detail": [12, 23], "usag": [12, 14, 18, 28, 29], "rework": 12, "larg": 12, "addit": [12, 20, 21, 25, 26, 28, 30], "caus": 12, "fail": [12, 30], "due": [12, 14, 15, 16, 20], "directori": [12, 14, 15, 16, 17, 28], "cover": [12, 28], "date": 12, "support": [12, 14, 21, 27, 28], "9": [12, 15, 16, 17, 20, 22, 25], "identif": 12, "stack": 12, "trace": 12, "correctli": [12, 20], "multiprocess": 12, "joblib": [12, 22], "anymor": 12, "workflow": 12, "push": [12, 20], "websit": [12, 20], "separ": [12, 20, 27, 28, 30], "branch": [12, 20], "gh": 12, "api": [12, 22], "access": [12, 25, 26, 27, 28], "readm": [12, 22], "convert": 12, "poetri": [12, 20, 22, 25], "cpu": 12, "max": 12, "renam": 12, "spawn": 12, "onc": [12, 29, 30], "advanc": 12, "complet": [12, 27, 28], "select": [12, 20], "limit": [12, 14, 15, 21, 24], "transact": 12, "reach": 12, "hold": 12, "abl": 12, "get": [12, 16, 17, 25], "paper": 12, "draft": 12, "referenc": 12, "db": 12, "unfavor": 12, "see": [12, 20, 27], "abov": [12, 15, 16, 24, 25, 27, 28, 29], "simpl": [12, 25], "github": [12, 19, 20, 22, 23], "action": [12, 21, 24], "cach": 12, "virtual": 12, "environ": [12, 20, 25], "prevent": 12, "everi": [12, 16, 27, 28], "time": [12, 14, 15, 17, 20, 21, 27, 29], "cut": 12, "down": 12, "ci": 12, "roundtrip": 12, "matrix": 12, "variou": 12, "7": [12, 15, 16, 17, 22], "8": [12, 13, 15, 16, 17, 22, 28], "ubuntu": 12, "maco": 12, "window": 12, "exclud": [12, 17], "sinc": [12, 21], "some": [12, 15, 16, 20, 23, 28, 29], "take": 12, "veri": [12, 20], "long": [12, 28], "restructur": 12, "shortcut": 12, "integ": [12, 28], "timestep": 12, "give": [12, 20, 23], "instanc": [12, 27, 30], "parallel": [12, 14, 15, 21, 27, 28], "hpc": [12, 14, 15, 21, 27], "obtain": [12, 14, 15, 16, 24], "export": [12, 27, 30], "g": [12, 15, 20, 22, 27, 29], "latex": [12, 27, 30], "robust": 12, "creation": 12, "jupyt": 12, "explain": [12, 28], "grid": [12, 16, 18, 27, 30], "duplic": 12, "string": [12, 28], "quotat": [12, 28], "mark": [12, 28], "compon": [12, 27], "No": [12, 16], "summari": 12, "releas": 12, "scientif": [13, 22], "we": [13, 14, 16, 17, 20, 21, 27], "would": [13, 20, 28], "appreci": [13, 20], "et": 13, "al": 13, "2023": [13, 14, 15, 16], "distribut": [13, 21, 24, 30], "track": [13, 21, 27, 28, 30], "journal": 13, "sourc": [13, 20], "softwar": [13, 24], "84": 13, "5149": 13, "http": [13, 20, 22, 25], "doi": 13, "org": [13, 25], "10": [13, 14, 15, 16, 17, 28], "21105": 13, "05149": 13, "articl": [13, 20], "tornede2023": 13, "titl": [13, 23, 25], "author": [13, 22, 24], "publish": [13, 24, 25], "year": 13, "volum": 13, "url": [13, 25], "show": [14, 15, 16, 17], "programmat": 14, "vector": 14, "machin": [14, 15, 16, 17, 20, 22, 28, 30], "entir": 14, "scikit": [14, 15, 16, 17], "learn": [14, 15, 16, 17, 22], "found": [14, 15, 16, 20, 27, 28, 29, 30], "here": [14, 15, 29], "import": [14, 15, 16, 17, 20, 27, 29], "content": [14, 15, 16, 17, 25, 27], "example_conditional_grid": 14, "dataset": [14, 15, 16, 17, 27, 28, 29], "cross_validation_split": [14, 15, 16, 17, 27, 28], "seed": [14, 15, 16, 17, 27, 28, 29, 30], "kernel": [14, 15, 16, 17, 27, 28], "gamma": [14, 15, 16, 17], "decim": [14, 15, 17, 28], "degre": 14, "coef0": 14, "train_f1": [14, 15, 17, 28, 29], "train_accuraci": [14, 15, 16, 17, 28, 29], "test_f1": [14, 15, 16, 17, 28, 29], "test_accuraci": [14, 15, 16, 17, 28, 29], "timestamp": [14, 15, 16, 17, 28], "sample_data": [14, 15, 16, 17, 28], "mkdir": [14, 15, 16, 17], "w": [14, 15, 16, 17], "f": [14, 15, 16, 17], "next": [14, 15, 16, 17], "dummi": [14, 15, 16], "reason": [14, 15, 16], "code": [14, 15, 20, 23, 27, 28, 29, 30], "numpi": [14, 15, 16, 17, 20, 22], "np": [14, 15, 16, 17, 29], "sklearn": [14, 15, 16, 17], "load_iri": [14, 15, 16, 17], "model_select": [14, 15, 16, 17], "cross_valid": [14, 15, 16, 17], "pipelin": [14, 15, 16, 17, 28, 29], "make_pipelin": [14, 15, 16, 17], "preprocess": [14, 15, 16, 17], "standardscal": [14, 15, 16, 17], "svm": [14, 15, 16, 17], "svc": [14, 15, 16, 17], "sleep": [14, 17], "randint": 14, "def": [14, 15, 16, 17, 27, 29], "run_svm": 14, "custom_config": [14, 15, 16, 17], "0": [14, 15, 16, 17, 22], "5": [14, 15, 16, 17, 22, 28], "x": [14, 15, 16, 17], "y": [14, 15, 16, 17], "target": [14, 15, 16, 17], "linear": [14, 15, 16, 17, 28], "elif": 14, "poli": [14, 15, 16, 17, 27, 28], "rbf": [14, 15, 16, 17, 28], "model": [14, 15, 16, 17], "iri": [14, 15, 16, 17, 28], "score": [14, 15, 16, 17, 29], "cv": [14, 15, 16, 17], "accuraci": [14, 15, 16, 17], "f1_micro": [14, 15, 16, 17], "return_train_scor": [14, 15, 16, 17], "train_f1_micro": [14, 15, 16, 17, 29], "test_f1_micro": [14, 15, 16, 17, 29], "actual": [14, 15, 16, 20, 27, 28], "previous": [14, 15, 27], "job": [14, 15, 16, 27], "especi": [14, 15, 28], "3": [14, 15, 16, 17, 20, 21, 22, 25], "svm_experimenter_01": 14, "07": [14, 15, 16, 17], "24": [14, 16, 27], "12": [14, 15, 16, 17], "52": [14, 16, 17], "48": 14, "895": 14, "fix": [14, 25, 28], "three": 14, "line": [14, 15, 27, 28], "present": 14, "nan": [14, 15, 17], "thu": 14, "uncondition": 14, "905": 14, "20": [14, 15, 16], "35": [14, 17], "were": [14, 15, 17], "skip": [14, 15, 17], "creation_d": [14, 15, 16, 17], "start_dat": [14, 15, 16, 17], "end_dat": [14, 15, 16, 17], "18": [14, 16], "58": [14, 16], "06": [14, 15], "macbook": [14, 16], "pro": [14, 16], "von": [14, 16], "975": 14, "966667": [14, 15, 16], "13": [14, 15, 16], "16": [14, 16], "21": 14, "70": 14, "71": 14, "72": 14, "73": 14, "74": 14, "75": 14, "19": [14, 15, 16, 17], "other": [14, 20, 24, 28], "just": [14, 16], "predifin": [14, 16], "amount": [14, 16], "relat": [14, 15, 16, 19], "53": [14, 15], "57": [14, 15], "440": 14, "31": [14, 15], "37": 14, "40": [14, 15], "46": [14, 17], "51": [14, 15, 16], "look": [14, 16], "our": [14, 16, 21, 28], "more": [14, 16, 27, 28, 29], "over": [15, 16, 29, 30], "extract": [15, 29, 30], "example_general_usag": [15, 17], "6": [15, 16, 17, 28], "sigmoid": [15, 16, 17, 28], "longtext": [15, 17, 28], "measure_power_sec": [15, 17, 28], "25": [15, 17], "tracking_mod": [15, 17, 28], "save_to_fil": [15, 17, 28], "output_dir": [15, 17, 28], "run_ml": [15, 16, 29], "read_csv": [15, 17], "example_notebook": [15, 16, 17], "09": [15, 17], "15": [15, 16, 17, 22, 28], "55": 15, "47": [15, 16], "244": 15, "error_dataset": 15, "42": [15, 16, 17, 27], "330": 15, "349": 15, "11": [15, 16, 17, 22], "two": [15, 17, 27, 28], "randmli": 15, "chosen": 15, "exeecut": 15, "56": [15, 17], "00": 15, "579": 15, "54": 15, "worklaptop": [15, 17], "standardsca": [15, 17], "936667": [15, 16], "933333": [15, 16], "975000": [15, 16], "remain": 15, "orer": 15, "increas": 15, "487": 15, "traceback": 15, "recent": 15, "last": 15, "34": [15, 17], "home": [15, 17], "421": 15, "custom_field": [15, 27, 29], "tmp": 15, "ipykernel_86732": 15, "1244630566": 15, "549": 15, "971667": [15, 16], "14": [15, 16, 17], "27": 15, "896667": [15, 16], "893333": [15, 16], "59": 15, "n": [15, 17, 20, 25], "h": [15, 22], "As": [15, 28], "those": [15, 21, 30], "anoth": [15, 20, 27], "try": [15, 20], "simpli": 15, "pass": [15, 27, 28], "610": 15, "611": 15, "032": 15, "090": 15, "result_table_agg": 15, "groupbi": [15, 27], "numeric_onli": 15, "945": 15, "94": 15, "style": 15, "to_latex": [15, 27], "begin": [15, 20], "tabular": 15, "lr": 15, "amp": 15, "940000": 15, "integr": 15, "suffix": 15, "_codecarbon": [15, 27, 28], "codecarbon_timestamp": [15, 17], "project_nam": [15, 17], "run_id": [15, 17], "duration_second": [15, 17], "emissions_kg": [15, 17], "emissions_rate_kg_sec": [15, 17], "cpu_power_watt": [15, 17], "gpu_power_watt": [15, 17], "cpu_model": [15, 17], "gpu_count": [15, 17], "gpu_model": [15, 17], "longitud": [15, 17], "latitud": [15, 17], "ram_total_s": [15, 17], "on_cloud": [15, 17], "power_usage_effici": [15, 17], "25t15": 15, "2eb72cb4": 15, "03c5": 15, "444a": 15, "ba10": 15, "c3aba7b4422": 15, "118582": 15, "588442e": 15, "000004": [15, 17], "12th": [15, 17], "gen": [15, 17], "intel": [15, 17], "r": [15, 17, 25], "tm": [15, 17], "i7": [15, 17], "1260p": [15, 17], "7493": 15, "7152": 15, "474876": 15, "610da3cf": 15, "ff52": 15, "466d": 15, "9f1b": 15, "c76ba62e7c7f": 15, "107631": 15, "227363e": 15, "bcb43fdf": 15, "79c4": 15, "409a": 15, "8456": 15, "52d4864b47e4": 15, "107927": 15, "223962e": 15, "190f5da8": 15, "1737": 15, "4b74": 15, "8419": 15, "a609cabd10ca": 15, "129361": 15, "016931e": 15, "0b3f5619": 15, "69f8": 15, "45f2": 15, "8993": 15, "940114ce2cc1": 15, "096373": 15, "794846e": 15, "468ca30b": 15, "61c8": 15, "4e47": 15, "b817": 15, "7e58ac7ff6dd": 15, "114169": 15, "420088e": 15, "74dce081": 15, "d28b": 15, "4804": 15, "9838": 15, "fd8ff27c9950": 15, "119088": 15, "564350e": 15, "b796baab": 15, "75ac": 15, "4e3e": 15, "9cf8": 15, "03b8491c9b58": 15, "113802": 15, "480401e": 15, "ac9beecf": 15, "af51": 15, "4f87": 15, "9402": 15, "46a183f0fd71": 15, "115952": 15, "526646e": 15, "7cd43606": 15, "0411": 15, "4588": 15, "8cea": 15, "6b03e40ae789": 15, "095948": 15, "697171e": 15, "774ed8f3": 15, "18ac": 15, "4df7": 15, "aa10": 15, "9614764db66d": 15, "107169": 15, "216420e": 15, "15a0057b": 15, "119e": 15, "4f44": 15, "97b5": 15, "6560d45f6734": 15, "114159": 15, "586527e": 15, "d9caf5ff": 15, "af86": 15, "4a7b": 15, "867c": 15, "930544439b23": 15, "074148": 15, "788527e": 15, "07b7b4dd": 15, "5655": 15, "4345": 15, "8d69": 15, "332e7e95cbf4": 15, "074656": 15, "817833e": 15, "carbon_emiss": 15, "sum": 15, "ram_power_watt": 15, "cpu_energy_kw": 15, "gpu_energy_kw": 15, "ram_energy_kw": 15, "energy_consumed_kw": 15, "cpu_count": 15, "105": 15, "488965": 15, "000006": 15, "000054": 15, "595": 15, "934715": 15, "000016": 15, "479820e": 15, "08": 15, "224": 15, "216": 15, "64827": 15, "lrr": 15, "understand": [16, 20, 23], "basic": [16, 17], "pyexeriment": 16, "purpos": [16, 24], "demonstr": [16, 29], "howev": [16, 21, 27, 28], "slightli": 16, "adapt": [16, 20], "goal": 16, "small": 16, "find": [16, 19], "best": 16, "search": 16, "example_logt": 16, "best_kernel_f1": 16, "varchar": [16, 28], "50": 16, "best_kernel_accuraci": 16, "train_scor": 16, "log_train_scor": 16, "doubl": [16, 17], "f1": 16, "iter": 16, "init": 16, "performance_f1": 16, "performance_accuraci": 16, "reproduc": [16, 23], "44": 16, "399": 16, "402": 16, "45": 16, "49": 16, "read": [16, 21], "17": 16, "implicit": 16, "424": 16, "heavili": 17, "ipynb": 17, "configuraiton": 17, "comparison": 17, "paused_at_second": 17, "resumed_at_second": 17, "example_pause_and_continu": 17, "five": 17, "datetim": [17, 28], "pause_after_5_second": 17, "2024": 17, "02": 17, "660": 17, "769": 17, "anaconda3": 17, "env": [17, 20], "lib": 17, "python3": 17, "site": 17, "168": 17, "futurewarn": 17, "behavior": 17, "concaten": 17, "empti": 17, "na": 17, "deprec": 17, "futur": 17, "dtype": 17, "retain": 17, "old": [17, 29], "relev": 17, "concat": 17, "oper": [17, 27], "df": 17, "from_record": 17, "550": 17, "708350e": 17, "nat": 17, "lastli": 17, "shown": [17, 28], "resume_after_5_second": 17, "01": 17, "90e1b965": 17, "1fa2": 17, "4a34": 17, "818e": 17, "acd21c35a774": 17, "058335": 17, "182486e": 17, "05": 17, "5312": 17, "4771": 17, "474918": 17, "94335fd1": 17, "ea83": 17, "4bb9": 17, "8a37": 17, "b91ed39f39b6": 17, "246198": 17, "941419e": 17, "question": 19, "problem": [19, 23], "don": 19, "t": [19, 22], "know": 19, "mayb": 19, "suitabl": [19, 23], "solut": 19, "someon": [19, 20], "els": [19, 20], "similar": [19, 20], "situat": 19, "anyth": [19, 25], "idea": 20, "bug": [20, 23], "had": 20, "plan": 20, "yourself": 20, "like": [20, 28, 29], "great": 20, "comment": 20, "what": [20, 23], "exactli": 20, "At": [20, 27], "mention": 20, "review": 20, "fork": 20, "blog": 20, "post": 20, "go": [20, 23], "click": 20, "button": [20, 25], "top": 20, "right": [20, 24], "corner": 20, "clone": 20, "On": [20, 21], "usernam": 20, "com": [20, 22], "remot": 20, "origin": 20, "upstream": 20, "switch": 20, "feature_branch_nam": 20, "meaning": 20, "fetch": 20, "v": 20, "checkout": 20, "anaconda": 20, "pandoc": 20, "suggest": 20, "pytest": [20, 22], "succeed": 20, "upgrad": 20, "good": 20, "usabl": [20, 23], "mandatori": 20, "locat": [20, 26, 27, 28], "affect": 20, "succe": 20, "But": 20, "test_run_experi": 20, "test_run_mysql_experi": 20, "doc": 20, "html": 20, "correct": 20, "destin": 20, "full": 20, "facilit": 21, "setup": [21, 30], "subsequ": 21, "evalu": [21, 29], "empir": 21, "studi": 21, "algorithm": 21, "particular": [21, 24], "design": [21, 30], "reduc": 21, "involv": 21, "effort": 21, "significantli": 21, "intend": [21, 22], "research": [21, 22], "artifici": [21, 22], "intellig": [21, 22], "addtion": 21, "analysi": 21, "often": 21, "accompani": 21, "input": [21, 28, 30], "variant": 21, "individu": 21, "usual": [21, 28], "independ": 21, "manner": [21, 22], "system": [21, 22, 27, 30], "requir": [21, 22, 28], "extens": 21, "aggreg": 21, "report": [21, 23], "monitor": 21, "restart": [21, 30], "tediou": [21, 28], "consum": 21, "These": 21, "challeng": 21, "address": 21, "central": 21, "massiv": 21, "allevi": 21, "aforement": 21, "overhead": 21, "eas": 21, "easiest": 21, "dive": 21, "partial": 21, "german": 21, "feder": 21, "ministri": 21, "econom": 21, "affair": 21, "climat": 21, "fleme": 21, "03e16012f": 21, "foundat": 21, "dfg": 21, "collabor": 21, "center": 21, "fly": 21, "comput": [21, 28, 30], "sfb": 21, "901": 21, "160364472": 21, "pypi": 22, "ml": 22, "captur": 22, "unifi": 22, "ai": 22, "uni": 22, "hannov": 22, "de": 22, "stud": 22, "upb": 22, "ifi": 22, "lmu": 22, "unisabana": 22, "edu": 22, "co": 22, "licens": 22, "mit": [22, 24], "md": 22, "io": 22, "keyword": 22, "executor": 22, "classifi": 22, "stabl": 22, "audienc": 22, "scienc": 22, "topic": 22, "engin": 22, "program": 22, "languag": 22, "jupyterlab": 22, "mock": 22, "nbsphinx": 22, "galleri": 22, "rtd": 22, "theme": 22, "recommonmark": 22, "freezegun": 22, "backend": [22, 28], "masonri": 22, "third": 23, "person": [23, 24], "vision": 23, "featur": [23, 27, 28, 30], "summar": [23, 27], "produc": 23, "assumpt": [23, 30], "think": 23, "And": 23, "label": 23, "enhanc": 23, "face": 23, "copyright": 24, "2021": 24, "2022": 24, "permiss": 24, "herebi": 24, "grant": 24, "free": 24, "charg": 24, "copi": [24, 28], "deal": 24, "restrict": 24, "merg": [24, 25], "sublicens": 24, "sell": 24, "permit": 24, "whom": 24, "furnish": 24, "subject": 24, "notic": 24, "shall": 24, "substanti": 24, "portion": 24, "THE": 24, "AS": 24, "warranti": 24, "OF": 24, "kind": 24, "express": 24, "OR": 24, "impli": 24, "BUT": 24, "TO": 24, "merchant": 24, "fit": 24, "FOR": 24, "AND": 24, "noninfring": 24, "IN": 24, "NO": 24, "event": 24, "holder": 24, "BE": 24, "liabl": 24, "claim": 24, "damag": 24, "liabil": 24, "contract": 24, "tort": 24, "aris": [24, 30], "WITH": 24, "legaci": 25, "known": 25, "token": 25, "store": [25, 28], "xxxxx": 25, "readi": [25, 27], "extra": 25, "index": 25, "repeat": 25, "changelog": 25, "main": [25, 28], "squash": 25, "tag": 25, "With": 25, "press": 25, "attach": 25, "explicitli": [26, 28], "few": 27, "run_experi": [27, 29], "someth": 27, "assum": 27, "ignor": [27, 28], "complex": 27, "new_data": 27, "new_data_2": 27, "fashion": 27, "comma": [27, 28], "termin": 27, "interrupt": 27, "result_t": 27, "print": 27, "index_nam": 27, "footprint": [27, 28], "enabl": [27, 28], "conveni": 27, "certain": [27, 30], "resum": 27, "asdf": 27, "run_experiment_until_paus": 27, "some_reason_to_paus": 27, "thing": 27, "point": 27, "togeth": [27, 28], "run_experiment_after_paus": 27, "primarili": 28, "paragraph": 28, "subsect": 28, "new_best_perform": [28, 29], "epoch": [28, 29], "logepoch": 28, "runtim": [28, 29], "float": 28, "henc": 28, "thought": 28, "exponenti": 28, "sever": 28, "annot": 28, "keyfield_datatyp": 28, "datatyp": 28, "255": 28, "domain": [28, 30], "neither": 28, "nor": 28, "whitespac": 28, "definit": 28, "task": 28, "size": 28, "form": 28, "stepsiz": 28, "explicit": 28, "resultfield_nam": [28, 29], "resultfield_datatyp": 28, "arbitrarili": 28, "obtatin": 28, "interet": 28, "intermedi": 28, "regularili": 28, "databs": 28, "logtable_datatyp": 28, "__": 28, "format": 28, "belong": 28, "depth": [28, 29], "showcas": [28, 29], "maximum": 28, "under": 28, "deactiv": 28, "per": 28, "whole": 28, "power": 28, "consumpt": 28, "estim": 28, "region": 28, "devic": 28, "save": 28, "own": 28, "start_tim": 29, "loop": 29, "while": 29, "stuff": 29, "min": 29, "break": 29, "test": 29, "re": 29, "subset": [29, 30], "resultfield_valu": 29, "logtable_field_nam": 29, "logtable_field_valu": 29, "schema": 30, "figur": 30, "uniqu": 30, "through": 30, "back": 30, "desir": 30, "overal": 30, "jointli": 30, "averag": 30, "view": 30}, "objects": {"": [[9, 0, 0, "-", "py_experimenter"]], "py_experimenter": [[3, 0, 0, "-", "database_connector"], [4, 0, 0, "-", "database_connector_lite"], [5, 0, 0, "-", "database_connector_mysql"], [6, 0, 0, "-", "exceptions"], [7, 0, 0, "-", "experiment_status"], [8, 0, 0, "-", "experimenter"], [10, 0, 0, "-", "result_processor"], [11, 0, 0, "-", "utils"]], "py_experimenter.database_connector": [[3, 1, 1, "", "DatabaseConnector"]], "py_experimenter.database_connector.DatabaseConnector": [[3, 2, 1, "", "_check_combination_in_existing_rows"], [3, 2, 1, "", "_compute_columns"], [3, 2, 1, "", "_create_table"], [3, 2, 1, "", "_delete_experiments_with_condition"], [3, 2, 1, "", "_exclude_fixed_columns"], [3, 2, 1, "", "_extract_credentials"], [3, 2, 1, "", "_get_create_table_query"], [3, 2, 1, "", "_get_existing_rows"], [3, 2, 1, "", "_get_experiments_with_condition"], [3, 2, 1, "", "_get_pull_experiment_query"], [3, 2, 1, "", "_pop_experiments_with_status"], [3, 2, 1, "", "_prepare_update_query"], [3, 2, 1, "", "_pull_open_experiment"], [3, 2, 1, "", "_select_open_experiments_from_db"], [3, 2, 1, "", "_table_exists"], [3, 2, 1, "", "_table_has_correct_structure"], [3, 2, 1, "", "_test_connection"], [3, 2, 1, "", "_write_to_database"], [3, 2, 1, "", "close_connection"], [3, 2, 1, "", "commit"], [3, 2, 1, "", "connect"], [3, 2, 1, "", "create_table_if_not_existing"], [3, 2, 1, "", "cursor"], [3, 2, 1, "", "delete_table"], [3, 2, 1, "", "execute"], [3, 2, 1, "", "execute_queries"], [3, 2, 1, "", "fetchall"], [3, 2, 1, "", "fill_table"], [3, 2, 1, "", "get_autoincrement"], [3, 2, 1, "", "get_codecarbon_table"], [3, 2, 1, "", "get_experiment_configuration"], [3, 2, 1, "", "get_logtable"], [3, 2, 1, "", "get_structure_from_table"], [3, 2, 1, "", "get_table"], [3, 2, 1, "", "prepare_write_query"], [3, 2, 1, "", "pull_paused_experiment"], [3, 2, 1, "", "random_order_string"], [3, 2, 1, "", "reset_experiments"], [3, 2, 1, "", "update_database"]], "py_experimenter.database_connector_lite": [[4, 1, 1, "", "DatabaseConnectorLITE"]], "py_experimenter.database_connector_lite.DatabaseConnectorLITE": [[4, 2, 1, "", "_extract_credentials"], [4, 2, 1, "", "_get_existing_rows"], [4, 2, 1, "", "_get_pull_experiment_query"], [4, 3, 1, "", "_prepared_statement_placeholder"], [4, 2, 1, "", "_pull_open_experiment"], [4, 2, 1, "", "_table_exists"], [4, 2, 1, "", "_table_has_correct_structure"], [4, 2, 1, "", "_test_connection"], [4, 3, 1, "", "_write_to_database_separator"], [4, 2, 1, "", "connect"], [4, 2, 1, "", "escape_sql_chars"], [4, 2, 1, "", "get_autoincrement"], [4, 2, 1, "", "get_structure_from_table"], [4, 2, 1, "", "random_order_string"]], "py_experimenter.database_connector_mysql": [[5, 1, 1, "", "DatabaseConnectorMYSQL"]], "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL": [[5, 2, 1, "", "_create_database_if_not_existing"], [5, 2, 1, "", "_extract_credentials"], [5, 2, 1, "", "_get_existing_rows"], [5, 2, 1, "", "_get_pull_experiment_query"], [5, 3, 1, "", "_prepared_statement_placeholder"], [5, 2, 1, "", "_pull_open_experiment"], [5, 2, 1, "", "_start_transaction"], [5, 2, 1, "", "_table_exists"], [5, 2, 1, "", "_table_has_correct_structure"], [5, 2, 1, "", "_test_connection"], [5, 2, 1, "", "connect"], [5, 2, 1, "", "get_autoincrement"], [5, 2, 1, "", "get_structure_from_table"], [5, 2, 1, "", "random_order_string"]], "py_experimenter.exceptions": [[6, 4, 1, "", "ConfigError"], [6, 4, 1, "", "CreatingTableError"], [6, 4, 1, "", "DatabaseConnectionError"], [6, 4, 1, "", "DatabaseCreationError"], [6, 4, 1, "", "DatabaseError"], [6, 4, 1, "", "DatabaseQueryError"], [6, 4, 1, "", "EmptyFillDatabaseCallError"], [6, 4, 1, "", "InvalidConfigError"], [6, 4, 1, "", "InvalidLogFieldError"], [6, 4, 1, "", "InvalidResultFieldError"], [6, 4, 1, "", "InvalidValuesInConfiguration"], [6, 4, 1, "", "MissingLogTableError"], [6, 4, 1, "", "NoConfigFileError"], [6, 4, 1, "", "NoExperimentsLeftException"], [6, 4, 1, "", "NoPausedExperimentsException"], [6, 4, 1, "", "ParameterCombinationError"], [6, 4, 1, "", "PyExperimenterError"], [6, 4, 1, "", "TableHasWrongStructureError"]], "py_experimenter.experiment_status": [[7, 1, 1, "", "ExperimentStatus"]], "py_experimenter.experiment_status.ExperimentStatus": [[7, 3, 1, "", "ALL"], [7, 3, 1, "", "CREATED"], [7, 3, 1, "", "DONE"], [7, 3, 1, "", "ERROR"], [7, 3, 1, "", "PAUSED"], [7, 3, 1, "", "RUNNING"]], "py_experimenter.experimenter": [[8, 1, 1, "", "PyExperimenter"]], "py_experimenter.experimenter.PyExperimenter": [[8, 2, 1, "", "_execute_experiment"], [8, 2, 1, "", "_execution_wrapper"], [8, 2, 1, "", "_is_valid_configuration"], [8, 2, 1, "", "_worker"], [8, 2, 1, "", "delete_table"], [8, 2, 1, "", "execute"], [8, 2, 1, "", "fill_table_from_combination"], [8, 2, 1, "", "fill_table_from_config"], [8, 2, 1, "", "fill_table_with_rows"], [8, 2, 1, "", "get_codecarbon_table"], [8, 2, 1, "", "get_config_value"], [8, 2, 1, "", "get_logtable"], [8, 2, 1, "", "get_table"], [8, 2, 1, "", "has_option"], [8, 2, 1, "", "has_section"], [8, 2, 1, "", "reset_experiments"], [8, 2, 1, "", "set_config_value"], [8, 2, 1, "", "unpause_experiment"]], "py_experimenter.result_processor": [[10, 1, 1, "", "ResultProcessor"]], "py_experimenter.result_processor.ResultProcessor": [[10, 2, 1, "", "_add_timestamps_to_results"], [10, 2, 1, "", "_change_status"], [10, 2, 1, "", "_set_machine"], [10, 2, 1, "", "_set_name"], [10, 2, 1, "", "_valid_logtable_logs"], [10, 2, 1, "", "_valid_result_fields"], [10, 2, 1, "", "_write_emissions"], [10, 2, 1, "", "_write_error"], [10, 2, 1, "", "process_logs"], [10, 2, 1, "", "process_results"]], "py_experimenter.utils": [[11, 5, 1, "", "_generate_int_data"], [11, 5, 1, "", "add_timestep_result_columns"], [11, 5, 1, "", "combine_fill_table_parameters"], [11, 5, 1, "", "extract_codecarbon_columns"], [11, 5, 1, "", "extract_codecarbon_config"], [11, 5, 1, "", "extract_columns"], [11, 5, 1, "", "extract_db_credentials_and_table_name_from_config"], [11, 5, 1, "", "extract_logtables"], [11, 5, 1, "", "get_keyfield_data"], [11, 5, 1, "", "get_keyfield_names"], [11, 5, 1, "", "get_keyfields"], [11, 5, 1, "", "get_result_field_names"], [11, 5, 1, "", "get_resultfields"], [11, 5, 1, "", "get_timestamp_representation"], [11, 5, 1, "", "load_config"], [11, 5, 1, "", "timestamps_for_result_fields"], [11, 5, 1, "", "write_codecarbon_config"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:exception", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "exception", "Python exception"], "5": ["py", "function", "Python function"]}, "titleterms": {"usag": [0, 15, 16, 30], "3rd": 0, "parti": 0, "depend": 0, "poetri": 0, "author": 1, "core": 1, "develop": [1, 20], "team": 1, "contribut": [1, 20], "api": 2, "refer": 2, "py_experiment": [3, 4, 5, 6, 7, 8, 9, 10, 11], "database_connector": 3, "modul": [3, 4, 5, 6, 7, 8, 10, 11], "content": [3, 4, 5, 6, 7, 8, 10, 11], "class": [3, 4, 5, 7, 8, 10], "database_connector_lit": 4, "database_connector_mysql": 5, "except": 6, "experiment_statu": 7, "experiment": 8, "submodul": 9, "result_processor": 10, "util": 11, "function": [11, 14, 15, 16, 17, 29], "changelog": 12, "v1": 12, "3": 12, "2": 12, "23": 12, "01": 12, "2024": 12, "featur": 12, "fix": 12, "1": 12, "24": 12, "07": 12, "2023": 12, "exampl": [12, 14, 15, 16, 17, 18], "0": 12, "06": 12, "chang": 12, "21": 12, "04": 12, "test": [12, 20, 25], "11": 12, "2022": 12, "09": 12, "v0": 12, "6": 12, "03": 12, "5": 12, "17": 12, "4": 12, "02": 12, "2021": 12, "20": 12, "10": 12, "14": 12, "cite": 13, "pyexperiment": [13, 14, 15, 16, 21, 27], "citat": 13, "string": 13, "bibtex": 13, "condit": 14, "paramet": 14, "grid": 14, "experi": [14, 15, 16, 17, 27, 28, 29], "configur": [14, 15, 16, 17, 27, 28], "file": [14, 15, 16, 17, 26, 27, 28], "defin": [14, 15, 16, 17], "execut": [14, 15, 16, 17, 27, 28], "initi": [14, 15], "fill": [14, 15, 27], "tabl": [14, 15, 27], "codecarbon": [14, 15, 16, 17, 27, 28], "gener": 15, "restart": 15, "fail": 15, "result": [15, 16, 27], "print": 15, "latex": 15, "aggreg": 15, "logtabl": [16, 28, 29], "run": 16, "check": 16, "paus": [17, 27], "continu": 17, "showcas": 17, "resum": 17, "entri": 17, "need": 19, "help": 19, "how": 20, "setup": 20, "workflow": 20, "extend": 20, "unit": 20, "updat": 20, "document": [20, 21], "creat": [20, 23, 27], "pull": 20, "request": 20, "welcom": 21, "": 21, "acknowledg": 21, "instal": 22, "an": 23, "issu": 23, "licens": 24, "releas": 25, "version": 25, "prepar": 25, "pypi": 25, "databas": [26, 27, 28], "credenti": 26, "from": 27, "With": 27, "specif": 27, "row": 27, "reset": 27, "obtain": 27, "unpaus": 27, "inform": 28, "keyfield": 28, "resultfield": [28, 29], "custom": 28, "field": 28, "push": 29, "data": 29, "To": 29}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx": 58}, "alltitles": {"Usage of 3rd Party Dependencies": [[0, "usage-of-3rd-party-dependencies"]], "Poetry": [[0, "poetry"]], "Authors": [[1, "authors"]], "Core Development Team": [[1, "core-development-team"]], "Contributions": [[1, "contributions"]], "API Reference": [[2, "api-reference"]], "py_experimenter.database_connector": [[3, "module-py_experimenter.database_connector"]], "Module Contents": [[3, "module-contents"], [4, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [8, "module-contents"], [10, "module-contents"], [11, "module-contents"]], "Classes": [[3, "classes"], [4, "classes"], [5, "classes"], [7, "classes"], [8, "classes"], [10, "classes"]], "py_experimenter.database_connector_lite": [[4, "module-py_experimenter.database_connector_lite"]], "py_experimenter.database_connector_mysql": [[5, "module-py_experimenter.database_connector_mysql"]], "py_experimenter.exceptions": [[6, "module-py_experimenter.exceptions"]], "py_experimenter.experiment_status": [[7, "module-py_experimenter.experiment_status"]], "py_experimenter.experimenter": [[8, "module-py_experimenter.experimenter"]], "py_experimenter": [[9, "module-py_experimenter"]], "Submodules": [[9, "submodules"]], "py_experimenter.result_processor": [[10, "module-py_experimenter.result_processor"]], "py_experimenter.utils": [[11, "module-py_experimenter.utils"]], "Functions": [[11, "functions"]], "Changelog": [[12, "changelog"]], "v1.3.2 (23.01.2024)": [[12, "v1-3-2-23-01-2024"]], "Feature": [[12, "feature"], [12, "id1"], [12, "id3"], [12, "id6"], [12, "id7"], [12, "id10"], [12, "id14"]], "Fix": [[12, "fix"], [12, "id2"], [12, "id5"], [12, "id9"], [12, "id12"], [12, "id16"]], "v1.3.1 (24.07.2023)": [[12, "v1-3-1-24-07-2023"]], "Examples": [[12, "examples"], [12, "id4"], [12, "id8"], [12, "id11"], [12, "id15"], [18, "examples"]], "v1.3.0 (23.06.2023)": [[12, "v1-3-0-23-06-2023"]], "Changed": [[12, "changed"]], "v1.2.1 (21/04/2023)": [[12, "v1-2-1-21-04-2023"]], "v1.2.0 (04/04/2023)": [[12, "v1-2-0-04-04-2023"]], "Tests": [[12, "tests"], [12, "id13"], [12, "id17"]], "v1.1.0 (21/11/2022)": [[12, "v1-1-0-21-11-2022"]], "v1.0.0 (04/09/2022)": [[12, "v1-0-0-04-09-2022"]], "v0.0.6 (01/03/2022)": [[12, "v0-0-6-01-03-2022"]], "v0.0.5 (17/01/2022)": [[12, "v0-0-5-17-01-2022"]], "v0.0.4 (02/11/2021)": [[12, "v0-0-4-02-11-2021"]], "v0.0.3 (20/10/2021)": [[12, "v0-0-3-20-10-2021"]], "v0.0.2 (20/10/2021)": [[12, "v0-0-2-20-10-2021"]], "v0.0.1 (14/10/2021)": [[12, "v0-0-1-14-10-2021"]], "Cite PyExperimenter": [[13, "cite-pyexperimenter"]], "Citation String": [[13, "citation-string"]], "BibTex": [[13, "bibtex"]], "Example: Conditional Parameter Grids": [[14, "Example:-Conditional-Parameter-Grids"]], "Experiment Configuration File": [[14, "Experiment-Configuration-File"], [15, "Experiment-Configuration-File"], [16, "Experiment-Configuration-File"], [17, "Experiment-Configuration-File"], [28, "experiment-configuration-file"]], "Defining the execution function": [[14, "Defining-the-execution-function"], [15, "Defining-the-execution-function"], [16, "Defining-the-execution-function"]], "Executing PyExperimenter": [[14, "Executing-PyExperimenter"], [15, "Executing-PyExperimenter"], [16, "Executing-PyExperimenter"], [27, "executing-pyexperimenter"]], "Initialize PyExperimenter": [[14, "Initialize-PyExperimenter"], [15, "Initialize-PyExperimenter"]], "Fill Table": [[14, "Fill-Table"], [15, "Fill-Table"]], "Execute PyExperimenter": [[14, "Execute-PyExperimenter"], [15, "Execute-PyExperimenter"]], "CodeCarbon": [[14, "CodeCarbon"], [15, "CodeCarbon"], [16, "CodeCarbon"], [27, "codecarbon"], [28, "codecarbon"]], "Example: General Usage": [[15, "Example:-General-Usage"]], "Restart Failed Experiments": [[15, "Restart-Failed-Experiments"]], "Generating Result Table": [[15, "Generating-Result-Table"]], "Printing LaTex Table": [[15, "Printing-LaTex-Table"]], "Aggregating CodeCarbon Results": [[15, "Aggregating-CodeCarbon-Results"]], "Printing CodeCarbon Results as LaTex Table": [[15, "Printing-CodeCarbon-Results-as-LaTex-Table"]], "Example: Usage of Logtables": [[16, "Example:-Usage-of-Logtables"]], "Run Experiments": [[16, "Run-Experiments"]], "Check Results": [[16, "Check-Results"]], "Example: Pause and Continue": [[17, "Example:-Pause-and-Continue"]], "Defining Pausing Execution Function": [[17, "Defining-Pausing-Execution-Function"]], "Showcase Paused Execution": [[17, "Showcase-Paused-Execution"]], "Define resuming execution function": [[17, "Define-resuming-execution-function"]], "CodeCarbon Entries": [[17, "CodeCarbon-Entries"]], "Need Help?": [[19, "need-help"]], "How to Contribute": [[20, "how-to-contribute"]], "Setup Development Workflow": [[20, "setup-development-workflow"]], "Extend Unit Tests": [[20, "extend-unit-tests"]], "Update Documentation": [[20, "update-documentation"]], "Create Pull Request": [[20, "create-pull-request"]], "Welcome to PyExperimenter\u2019s documentation!": [[21, "welcome-to-pyexperimenter-s-documentation"]], "Acknowledgements": [[21, "acknowledgements"]], "Installation": [[22, "installation"]], "Creating an Issue": [[23, "creating-an-issue"]], "License": [[24, "license"]], "Release Version": [[25, "release-version"]], "Prepare Test PyPi / PyPi": [[25, "prepare-test-pypi-pypi"]], "Release Version to Test PyPi": [[25, "release-version-to-test-pypi"]], "Release Version to PyPi": [[25, "release-version-to-pypi"]], "Database Credential File": [[26, "database-credential-file"]], "Creating a PyExperimenter": [[27, "creating-a-pyexperimenter"]], "Fill Database Table": [[27, "fill-database-table"]], "Fill Table From Experiment Configuration File": [[27, "fill-table-from-experiment-configuration-file"]], "Fill Table With Specific Rows": [[27, "fill-table-with-specific-rows"]], "Execute Experiments": [[27, "execute-experiments"]], "Reset Experiments": [[27, "reset-experiments"]], "Obtain Results": [[27, "obtain-results"]], "Pausing and Unpausing Experiments": [[27, "pausing-and-unpausing-experiments"]], "Database Information": [[28, "database-information"]], "Keyfields": [[28, "keyfields"]], "Resultfields": [[28, "resultfields"]], "Logtables": [[28, "logtables"]], "Execution Information": [[28, "execution-information"]], "Custom Fields": [[28, "custom-fields"]], "Experiment Function": [[29, "experiment-function"]], "Push Data To Resultfields": [[29, "push-data-to-resultfields"]], "Push Data To Logtables": [[29, "push-data-to-logtables"]], "Usage": [[30, "usage"]]}, "indexentries": {"databaseconnector (class in py_experimenter.database_connector)": [[3, "py_experimenter.database_connector.DatabaseConnector"]], "_check_combination_in_existing_rows() (py_experimenter.database_connector.databaseconnector method)": [[3, "py_experimenter.database_connector.DatabaseConnector._check_combination_in_existing_rows"]], "_compute_columns() (py_experimenter.database_connector.databaseconnector static method)": [[3, "py_experimenter.database_connector.DatabaseConnector._compute_columns"]], "_create_table() (py_experimenter.database_connector.databaseconnector method)": [[3, "py_experimenter.database_connector.DatabaseConnector._create_table"]], "_delete_experiments_with_condition() (py_experimenter.database_connector.databaseconnector method)": [[3, "py_experimenter.database_connector.DatabaseConnector._delete_experiments_with_condition"]], "_exclude_fixed_columns() (py_experimenter.database_connector.databaseconnector method)": [[3, "py_experimenter.database_connector.DatabaseConnector._exclude_fixed_columns"]], "_extract_credentials() (py_experimenter.database_connector.databaseconnector method)": [[3, "py_experimenter.database_connector.DatabaseConnector._extract_credentials"]], "_get_create_table_query() (py_experimenter.database_connector.databaseconnector method)": [[3, "py_experimenter.database_connector.DatabaseConnector._get_create_table_query"]], "_get_existing_rows() (py_experimenter.database_connector.databaseconnector method)": [[3, "py_experimenter.database_connector.DatabaseConnector._get_existing_rows"]], "_get_experiments_with_condition() (py_experimenter.database_connector.databaseconnector method)": [[3, "py_experimenter.database_connector.DatabaseConnector._get_experiments_with_condition"]], "_get_pull_experiment_query() (py_experimenter.database_connector.databaseconnector method)": [[3, "py_experimenter.database_connector.DatabaseConnector._get_pull_experiment_query"]], "_pop_experiments_with_status() (py_experimenter.database_connector.databaseconnector method)": [[3, "py_experimenter.database_connector.DatabaseConnector._pop_experiments_with_status"]], "_prepare_update_query() (py_experimenter.database_connector.databaseconnector method)": [[3, "py_experimenter.database_connector.DatabaseConnector._prepare_update_query"]], "_pull_open_experiment() (py_experimenter.database_connector.databaseconnector method)": [[3, "py_experimenter.database_connector.DatabaseConnector._pull_open_experiment"]], "_select_open_experiments_from_db() (py_experimenter.database_connector.databaseconnector method)": [[3, "py_experimenter.database_connector.DatabaseConnector._select_open_experiments_from_db"]], "_table_exists() (py_experimenter.database_connector.databaseconnector method)": [[3, "py_experimenter.database_connector.DatabaseConnector._table_exists"]], "_table_has_correct_structure() (py_experimenter.database_connector.databaseconnector method)": [[3, "py_experimenter.database_connector.DatabaseConnector._table_has_correct_structure"]], "_test_connection() (py_experimenter.database_connector.databaseconnector method)": [[3, "py_experimenter.database_connector.DatabaseConnector._test_connection"]], "_write_to_database() (py_experimenter.database_connector.databaseconnector method)": [[3, "py_experimenter.database_connector.DatabaseConnector._write_to_database"]], "close_connection() (py_experimenter.database_connector.databaseconnector method)": [[3, "py_experimenter.database_connector.DatabaseConnector.close_connection"]], "commit() (py_experimenter.database_connector.databaseconnector method)": [[3, "py_experimenter.database_connector.DatabaseConnector.commit"]], "connect() (py_experimenter.database_connector.databaseconnector method)": [[3, "py_experimenter.database_connector.DatabaseConnector.connect"]], "create_table_if_not_existing() (py_experimenter.database_connector.databaseconnector method)": [[3, "py_experimenter.database_connector.DatabaseConnector.create_table_if_not_existing"]], "cursor() (py_experimenter.database_connector.databaseconnector method)": [[3, "py_experimenter.database_connector.DatabaseConnector.cursor"]], "delete_table() (py_experimenter.database_connector.databaseconnector method)": [[3, "py_experimenter.database_connector.DatabaseConnector.delete_table"]], "execute() (py_experimenter.database_connector.databaseconnector method)": [[3, "py_experimenter.database_connector.DatabaseConnector.execute"]], "execute_queries() (py_experimenter.database_connector.databaseconnector method)": [[3, "py_experimenter.database_connector.DatabaseConnector.execute_queries"]], "fetchall() (py_experimenter.database_connector.databaseconnector method)": [[3, "py_experimenter.database_connector.DatabaseConnector.fetchall"]], "fill_table() (py_experimenter.database_connector.databaseconnector method)": [[3, "py_experimenter.database_connector.DatabaseConnector.fill_table"]], "get_autoincrement() (py_experimenter.database_connector.databaseconnector static method)": [[3, "py_experimenter.database_connector.DatabaseConnector.get_autoincrement"]], "get_codecarbon_table() (py_experimenter.database_connector.databaseconnector method)": [[3, "py_experimenter.database_connector.DatabaseConnector.get_codecarbon_table"]], "get_experiment_configuration() (py_experimenter.database_connector.databaseconnector method)": [[3, "py_experimenter.database_connector.DatabaseConnector.get_experiment_configuration"]], "get_logtable() (py_experimenter.database_connector.databaseconnector method)": [[3, "py_experimenter.database_connector.DatabaseConnector.get_logtable"]], "get_structure_from_table() (py_experimenter.database_connector.databaseconnector method)": [[3, "py_experimenter.database_connector.DatabaseConnector.get_structure_from_table"]], "get_table() (py_experimenter.database_connector.databaseconnector method)": [[3, "py_experimenter.database_connector.DatabaseConnector.get_table"]], "module": [[3, "module-py_experimenter.database_connector"], [4, "module-py_experimenter.database_connector_lite"], [5, "module-py_experimenter.database_connector_mysql"], [6, "module-py_experimenter.exceptions"], [7, "module-py_experimenter.experiment_status"], [8, "module-py_experimenter.experimenter"], [9, "module-py_experimenter"], [10, "module-py_experimenter.result_processor"], [11, "module-py_experimenter.utils"]], "prepare_write_query() (py_experimenter.database_connector.databaseconnector method)": [[3, "py_experimenter.database_connector.DatabaseConnector.prepare_write_query"]], "pull_paused_experiment() (py_experimenter.database_connector.databaseconnector method)": [[3, "py_experimenter.database_connector.DatabaseConnector.pull_paused_experiment"]], "py_experimenter.database_connector": [[3, "module-py_experimenter.database_connector"]], "random_order_string() (py_experimenter.database_connector.databaseconnector static method)": [[3, "py_experimenter.database_connector.DatabaseConnector.random_order_string"]], "reset_experiments() (py_experimenter.database_connector.databaseconnector method)": [[3, "py_experimenter.database_connector.DatabaseConnector.reset_experiments"]], "update_database() (py_experimenter.database_connector.databaseconnector method)": [[3, "py_experimenter.database_connector.DatabaseConnector.update_database"]], "databaseconnectorlite (class in py_experimenter.database_connector_lite)": [[4, "py_experimenter.database_connector_lite.DatabaseConnectorLITE"]], "_extract_credentials() (py_experimenter.database_connector_lite.databaseconnectorlite method)": [[4, "py_experimenter.database_connector_lite.DatabaseConnectorLITE._extract_credentials"]], "_get_existing_rows() (py_experimenter.database_connector_lite.databaseconnectorlite method)": [[4, "py_experimenter.database_connector_lite.DatabaseConnectorLITE._get_existing_rows"]], "_get_pull_experiment_query() (py_experimenter.database_connector_lite.databaseconnectorlite method)": [[4, "py_experimenter.database_connector_lite.DatabaseConnectorLITE._get_pull_experiment_query"]], "_prepared_statement_placeholder (py_experimenter.database_connector_lite.databaseconnectorlite attribute)": [[4, "py_experimenter.database_connector_lite.DatabaseConnectorLITE._prepared_statement_placeholder"]], "_pull_open_experiment() (py_experimenter.database_connector_lite.databaseconnectorlite method)": [[4, "py_experimenter.database_connector_lite.DatabaseConnectorLITE._pull_open_experiment"]], "_table_exists() (py_experimenter.database_connector_lite.databaseconnectorlite method)": [[4, "py_experimenter.database_connector_lite.DatabaseConnectorLITE._table_exists"]], "_table_has_correct_structure() (py_experimenter.database_connector_lite.databaseconnectorlite method)": [[4, "py_experimenter.database_connector_lite.DatabaseConnectorLITE._table_has_correct_structure"]], "_test_connection() (py_experimenter.database_connector_lite.databaseconnectorlite method)": [[4, "py_experimenter.database_connector_lite.DatabaseConnectorLITE._test_connection"]], "_write_to_database_separator (py_experimenter.database_connector_lite.databaseconnectorlite attribute)": [[4, "py_experimenter.database_connector_lite.DatabaseConnectorLITE._write_to_database_separator"]], "connect() (py_experimenter.database_connector_lite.databaseconnectorlite method)": [[4, "py_experimenter.database_connector_lite.DatabaseConnectorLITE.connect"]], "escape_sql_chars() (py_experimenter.database_connector_lite.databaseconnectorlite static method)": [[4, "py_experimenter.database_connector_lite.DatabaseConnectorLITE.escape_sql_chars"]], "get_autoincrement() (py_experimenter.database_connector_lite.databaseconnectorlite static method)": [[4, "py_experimenter.database_connector_lite.DatabaseConnectorLITE.get_autoincrement"]], "get_structure_from_table() (py_experimenter.database_connector_lite.databaseconnectorlite method)": [[4, "py_experimenter.database_connector_lite.DatabaseConnectorLITE.get_structure_from_table"]], "py_experimenter.database_connector_lite": [[4, "module-py_experimenter.database_connector_lite"]], "random_order_string() (py_experimenter.database_connector_lite.databaseconnectorlite static method)": [[4, "py_experimenter.database_connector_lite.DatabaseConnectorLITE.random_order_string"]], "databaseconnectormysql (class in py_experimenter.database_connector_mysql)": [[5, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL"]], "_create_database_if_not_existing() (py_experimenter.database_connector_mysql.databaseconnectormysql method)": [[5, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL._create_database_if_not_existing"]], "_extract_credentials() (py_experimenter.database_connector_mysql.databaseconnectormysql method)": [[5, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL._extract_credentials"]], "_get_existing_rows() (py_experimenter.database_connector_mysql.databaseconnectormysql method)": [[5, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL._get_existing_rows"]], "_get_pull_experiment_query() (py_experimenter.database_connector_mysql.databaseconnectormysql method)": [[5, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL._get_pull_experiment_query"]], "_prepared_statement_placeholder (py_experimenter.database_connector_mysql.databaseconnectormysql attribute)": [[5, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL._prepared_statement_placeholder"]], "_pull_open_experiment() (py_experimenter.database_connector_mysql.databaseconnectormysql method)": [[5, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL._pull_open_experiment"]], "_start_transaction() (py_experimenter.database_connector_mysql.databaseconnectormysql method)": [[5, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL._start_transaction"]], "_table_exists() (py_experimenter.database_connector_mysql.databaseconnectormysql method)": [[5, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL._table_exists"]], "_table_has_correct_structure() (py_experimenter.database_connector_mysql.databaseconnectormysql method)": [[5, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL._table_has_correct_structure"]], "_test_connection() (py_experimenter.database_connector_mysql.databaseconnectormysql method)": [[5, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL._test_connection"]], "connect() (py_experimenter.database_connector_mysql.databaseconnectormysql method)": [[5, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL.connect"]], "get_autoincrement() (py_experimenter.database_connector_mysql.databaseconnectormysql static method)": [[5, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL.get_autoincrement"]], "get_structure_from_table() (py_experimenter.database_connector_mysql.databaseconnectormysql method)": [[5, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL.get_structure_from_table"]], "py_experimenter.database_connector_mysql": [[5, "module-py_experimenter.database_connector_mysql"]], "random_order_string() (py_experimenter.database_connector_mysql.databaseconnectormysql static method)": [[5, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL.random_order_string"]], "configerror": [[6, "py_experimenter.exceptions.ConfigError"]], "creatingtableerror": [[6, "py_experimenter.exceptions.CreatingTableError"]], "databaseconnectionerror": [[6, "py_experimenter.exceptions.DatabaseConnectionError"]], "databasecreationerror": [[6, "py_experimenter.exceptions.DatabaseCreationError"]], "databaseerror": [[6, "py_experimenter.exceptions.DatabaseError"]], "databasequeryerror": [[6, "py_experimenter.exceptions.DatabaseQueryError"]], "emptyfilldatabasecallerror": [[6, "py_experimenter.exceptions.EmptyFillDatabaseCallError"]], "invalidconfigerror": [[6, "py_experimenter.exceptions.InvalidConfigError"]], "invalidlogfielderror": [[6, "py_experimenter.exceptions.InvalidLogFieldError"]], "invalidresultfielderror": [[6, "py_experimenter.exceptions.InvalidResultFieldError"]], "invalidvaluesinconfiguration": [[6, "py_experimenter.exceptions.InvalidValuesInConfiguration"]], "missinglogtableerror": [[6, "py_experimenter.exceptions.MissingLogTableError"]], "noconfigfileerror": [[6, "py_experimenter.exceptions.NoConfigFileError"]], "noexperimentsleftexception": [[6, "py_experimenter.exceptions.NoExperimentsLeftException"]], "nopausedexperimentsexception": [[6, "py_experimenter.exceptions.NoPausedExperimentsException"]], "parametercombinationerror": [[6, "py_experimenter.exceptions.ParameterCombinationError"]], "pyexperimentererror": [[6, "py_experimenter.exceptions.PyExperimenterError"]], "tablehaswrongstructureerror": [[6, "py_experimenter.exceptions.TableHasWrongStructureError"]], "py_experimenter.exceptions": [[6, "module-py_experimenter.exceptions"]], "all (py_experimenter.experiment_status.experimentstatus attribute)": [[7, "py_experimenter.experiment_status.ExperimentStatus.ALL"]], "created (py_experimenter.experiment_status.experimentstatus attribute)": [[7, "py_experimenter.experiment_status.ExperimentStatus.CREATED"]], "done (py_experimenter.experiment_status.experimentstatus attribute)": [[7, "py_experimenter.experiment_status.ExperimentStatus.DONE"]], "error (py_experimenter.experiment_status.experimentstatus attribute)": [[7, "py_experimenter.experiment_status.ExperimentStatus.ERROR"]], "experimentstatus (class in py_experimenter.experiment_status)": [[7, "py_experimenter.experiment_status.ExperimentStatus"]], "paused (py_experimenter.experiment_status.experimentstatus attribute)": [[7, "py_experimenter.experiment_status.ExperimentStatus.PAUSED"]], "running (py_experimenter.experiment_status.experimentstatus attribute)": [[7, "py_experimenter.experiment_status.ExperimentStatus.RUNNING"]], "py_experimenter.experiment_status": [[7, "module-py_experimenter.experiment_status"]], "pyexperimenter (class in py_experimenter.experimenter)": [[8, "py_experimenter.experimenter.PyExperimenter"]], "_execute_experiment() (py_experimenter.experimenter.pyexperimenter method)": [[8, "py_experimenter.experimenter.PyExperimenter._execute_experiment"]], "_execution_wrapper() (py_experimenter.experimenter.pyexperimenter method)": [[8, "py_experimenter.experimenter.PyExperimenter._execution_wrapper"]], "_is_valid_configuration() (py_experimenter.experimenter.pyexperimenter method)": [[8, "py_experimenter.experimenter.PyExperimenter._is_valid_configuration"]], "_worker() (py_experimenter.experimenter.pyexperimenter method)": [[8, "py_experimenter.experimenter.PyExperimenter._worker"]], "delete_table() (py_experimenter.experimenter.pyexperimenter method)": [[8, "py_experimenter.experimenter.PyExperimenter.delete_table"]], "execute() (py_experimenter.experimenter.pyexperimenter method)": [[8, "py_experimenter.experimenter.PyExperimenter.execute"]], "fill_table_from_combination() (py_experimenter.experimenter.pyexperimenter method)": [[8, "py_experimenter.experimenter.PyExperimenter.fill_table_from_combination"]], "fill_table_from_config() (py_experimenter.experimenter.pyexperimenter method)": [[8, "py_experimenter.experimenter.PyExperimenter.fill_table_from_config"]], "fill_table_with_rows() (py_experimenter.experimenter.pyexperimenter method)": [[8, "py_experimenter.experimenter.PyExperimenter.fill_table_with_rows"]], "get_codecarbon_table() (py_experimenter.experimenter.pyexperimenter method)": [[8, "py_experimenter.experimenter.PyExperimenter.get_codecarbon_table"]], "get_config_value() (py_experimenter.experimenter.pyexperimenter method)": [[8, "py_experimenter.experimenter.PyExperimenter.get_config_value"]], "get_logtable() (py_experimenter.experimenter.pyexperimenter method)": [[8, "py_experimenter.experimenter.PyExperimenter.get_logtable"]], "get_table() (py_experimenter.experimenter.pyexperimenter method)": [[8, "py_experimenter.experimenter.PyExperimenter.get_table"]], "has_option() (py_experimenter.experimenter.pyexperimenter method)": [[8, "py_experimenter.experimenter.PyExperimenter.has_option"]], "has_section() (py_experimenter.experimenter.pyexperimenter method)": [[8, "py_experimenter.experimenter.PyExperimenter.has_section"]], "py_experimenter.experimenter": [[8, "module-py_experimenter.experimenter"]], "reset_experiments() (py_experimenter.experimenter.pyexperimenter method)": [[8, "py_experimenter.experimenter.PyExperimenter.reset_experiments"]], "set_config_value() (py_experimenter.experimenter.pyexperimenter method)": [[8, "py_experimenter.experimenter.PyExperimenter.set_config_value"]], "unpause_experiment() (py_experimenter.experimenter.pyexperimenter method)": [[8, "py_experimenter.experimenter.PyExperimenter.unpause_experiment"]], "py_experimenter": [[9, "module-py_experimenter"]], "resultprocessor (class in py_experimenter.result_processor)": [[10, "py_experimenter.result_processor.ResultProcessor"]], "_add_timestamps_to_results() (py_experimenter.result_processor.resultprocessor static method)": [[10, "py_experimenter.result_processor.ResultProcessor._add_timestamps_to_results"]], "_change_status() (py_experimenter.result_processor.resultprocessor method)": [[10, "py_experimenter.result_processor.ResultProcessor._change_status"]], "_set_machine() (py_experimenter.result_processor.resultprocessor method)": [[10, "py_experimenter.result_processor.ResultProcessor._set_machine"]], "_set_name() (py_experimenter.result_processor.resultprocessor method)": [[10, "py_experimenter.result_processor.ResultProcessor._set_name"]], "_valid_logtable_logs() (py_experimenter.result_processor.resultprocessor method)": [[10, "py_experimenter.result_processor.ResultProcessor._valid_logtable_logs"]], "_valid_result_fields() (py_experimenter.result_processor.resultprocessor method)": [[10, "py_experimenter.result_processor.ResultProcessor._valid_result_fields"]], "_write_emissions() (py_experimenter.result_processor.resultprocessor method)": [[10, "py_experimenter.result_processor.ResultProcessor._write_emissions"]], "_write_error() (py_experimenter.result_processor.resultprocessor method)": [[10, "py_experimenter.result_processor.ResultProcessor._write_error"]], "process_logs() (py_experimenter.result_processor.resultprocessor method)": [[10, "py_experimenter.result_processor.ResultProcessor.process_logs"]], "process_results() (py_experimenter.result_processor.resultprocessor method)": [[10, "py_experimenter.result_processor.ResultProcessor.process_results"]], "py_experimenter.result_processor": [[10, "module-py_experimenter.result_processor"]], "_generate_int_data() (in module py_experimenter.utils)": [[11, "py_experimenter.utils._generate_int_data"]], "add_timestep_result_columns() (in module py_experimenter.utils)": [[11, "py_experimenter.utils.add_timestep_result_columns"]], "combine_fill_table_parameters() (in module py_experimenter.utils)": [[11, "py_experimenter.utils.combine_fill_table_parameters"]], "extract_codecarbon_columns() (in module py_experimenter.utils)": [[11, "py_experimenter.utils.extract_codecarbon_columns"]], "extract_codecarbon_config() (in module py_experimenter.utils)": [[11, "py_experimenter.utils.extract_codecarbon_config"]], "extract_columns() (in module py_experimenter.utils)": [[11, "py_experimenter.utils.extract_columns"]], "extract_db_credentials_and_table_name_from_config() (in module py_experimenter.utils)": [[11, "py_experimenter.utils.extract_db_credentials_and_table_name_from_config"]], "extract_logtables() (in module py_experimenter.utils)": [[11, "py_experimenter.utils.extract_logtables"]], "get_keyfield_data() (in module py_experimenter.utils)": [[11, "py_experimenter.utils.get_keyfield_data"]], "get_keyfield_names() (in module py_experimenter.utils)": [[11, "py_experimenter.utils.get_keyfield_names"]], "get_keyfields() (in module py_experimenter.utils)": [[11, "py_experimenter.utils.get_keyfields"]], "get_result_field_names() (in module py_experimenter.utils)": [[11, "py_experimenter.utils.get_result_field_names"]], "get_resultfields() (in module py_experimenter.utils)": [[11, "py_experimenter.utils.get_resultfields"]], "get_timestamp_representation() (in module py_experimenter.utils)": [[11, "py_experimenter.utils.get_timestamp_representation"]], "load_config() (in module py_experimenter.utils)": [[11, "py_experimenter.utils.load_config"]], "py_experimenter.utils": [[11, "module-py_experimenter.utils"]], "timestamps_for_result_fields() (in module py_experimenter.utils)": [[11, "py_experimenter.utils.timestamps_for_result_fields"]], "write_codecarbon_config() (in module py_experimenter.utils)": [[11, "py_experimenter.utils.write_codecarbon_config"]]}})