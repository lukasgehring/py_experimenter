:py:mod:`py_experimenter.database_connector_mysql`
==================================================

.. py:module:: py_experimenter.database_connector_mysql


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL




.. py:class:: DatabaseConnectorMYSQL(experiment_configuration_file_path: configparser.ConfigParser, database_credential_file_path)


   Bases: :py:obj:`py_experimenter.database_connector.DatabaseConnector`

   Helper class that provides a standard way to create an ABC using
   inheritance.

   .. py:attribute:: _prepared_statement_placeholder
      :value: '%s'

      

   .. py:method:: _test_connection()


   .. py:method:: _create_database_if_not_existing()


   .. py:method:: _extract_credentials()


   .. py:method:: connect(credentials=None)


   .. py:method:: _start_transaction(connection, readonly=False)


   .. py:method:: _table_exists(cursor)


   .. py:method:: get_autoincrement()
      :staticmethod:


   .. py:method:: _table_has_correct_structure(cursor, typed_fields)


   .. py:method:: _pull_open_experiment() -> Tuple[int, List, List]


   .. py:method:: _get_existing_rows(column_names)


   .. py:method:: get_structure_from_table(cursor)



