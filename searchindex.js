Search.setIndex({"docnames": ["3rd-party", "authors", "autoapi/index", "autoapi/py_experimenter/config/index", "autoapi/py_experimenter/database_connector/index", "autoapi/py_experimenter/database_connector_lite/index", "autoapi/py_experimenter/database_connector_mysql/index", "autoapi/py_experimenter/exceptions/index", "autoapi/py_experimenter/experiment_status/index", "autoapi/py_experimenter/experimenter/index", "autoapi/py_experimenter/index", "autoapi/py_experimenter/result_processor/index", "autoapi/py_experimenter/utils/index", "changelog", "cite", "examples/example_conditional_grid", "examples/example_general_usage", "examples/example_logtables", "examples/example_pause_and_contiue", "examples/index", "help", "how-to-contribute", "index", "installation", "issues", "license", "release-version", "usage/database_credential_file", "usage/execution", "usage/experiment_configuration_file", "usage/experiment_function", "usage/index"], "filenames": ["3rd-party.rst", "authors.rst", "autoapi/index.rst", "autoapi/py_experimenter/config/index.rst", "autoapi/py_experimenter/database_connector/index.rst", "autoapi/py_experimenter/database_connector_lite/index.rst", "autoapi/py_experimenter/database_connector_mysql/index.rst", "autoapi/py_experimenter/exceptions/index.rst", "autoapi/py_experimenter/experiment_status/index.rst", "autoapi/py_experimenter/experimenter/index.rst", "autoapi/py_experimenter/index.rst", "autoapi/py_experimenter/result_processor/index.rst", "autoapi/py_experimenter/utils/index.rst", "changelog.rst", "cite.rst", "examples/example_conditional_grid.ipynb", "examples/example_general_usage.ipynb", "examples/example_logtables.ipynb", "examples/example_pause_and_contiue.ipynb", "examples/index.rst", "help.rst", "how-to-contribute.rst", "index.rst", "installation.rst", "issues.rst", "license.rst", "release-version.rst", "usage/database_credential_file.rst", "usage/execution.rst", "usage/experiment_configuration_file.rst", "usage/experiment_function.rst", "usage/index.rst"], "titles": ["Usage of 3rd Party Dependencies", "Authors", "API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">py_experimenter.config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">py_experimenter.database_connector</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">py_experimenter.database_connector_lite</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">py_experimenter.database_connector_mysql</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">py_experimenter.exceptions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">py_experimenter.experiment_status</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">py_experimenter.experimenter</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">py_experimenter</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">py_experimenter.result_processor</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">py_experimenter.utils</span></code>", "Changelog", "Cite PyExperimenter", "Example: Conditional Parameter Grids", "Example: General Usage", "Example: Usage of Logtables", "Example: Pause and Continue", "Examples", "Need Help?", "How to Contribute", "Welcome to PyExperimenter\u2019s documentation!", "Installation", "Creating an Issue", "License", "Release Version", "Database Credential File", "Executing PyExperimenter", "Experiment Configuration File", "Experiment Function", "Usage"], "terms": {"thi": [0, 2, 8, 9, 11, 12, 13, 15, 16, 17, 18, 21, 22, 25, 27, 28, 29, 31], "part": [0, 13, 29, 30], "document": [0, 2, 13, 15, 16, 17, 23, 25, 29], "refer": [0, 11, 13, 21], "need": [0, 13, 15, 16, 17, 18, 21, 24, 27, 28], "us": [0, 3, 4, 5, 6, 9, 11, 13, 14, 15, 16, 17, 18, 21, 22, 24, 25, 26, 27, 28, 29, 31], "activ": [0, 15, 17, 21, 26], "dure": [0, 9, 13, 28, 29, 30, 31], "develop": [0, 13, 23, 26], "It": [0, 13, 15, 16, 21, 22, 29], "contain": [0, 2, 3, 9, 13, 15, 16, 21, 24, 27, 28, 29], "short": 0, "descript": [0, 21, 23, 24, 29], "an": [0, 3, 4, 5, 6, 9, 11, 13, 15, 16, 17, 18, 21, 22, 25, 27, 28, 29, 30, 31], "explan": [0, 15, 16, 17, 29], "how": [0, 13, 17, 18, 20, 24, 27, 28, 29], "i": [0, 9, 12, 13, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "meant": [0, 15, 16, 30], "pyexperiment": [0, 3, 9, 13, 18, 20, 21, 23, 26, 27, 29, 31], "manag": [0, 22, 28], "packag": [0, 13, 16, 23], "tool": [0, 22, 23], "python": [0, 13, 15, 17, 18, 21, 23, 26], "allow": [0, 13, 22], "declar": 0, "your": [0, 21, 24, 26, 27, 30], "project": [0, 13, 21, 22, 26], "instal": [0, 13, 15, 16, 17, 18, 21, 22, 26], "updat": [0, 9, 13, 26], "them": [0, 9, 11, 13, 15], "you": [0, 11, 14, 15, 16, 17, 18, 20, 21, 24, 27, 28, 29, 30], "also": [0, 3, 16, 17, 21, 24, 28, 29, 30], "build": [0, 9, 13, 21, 23, 26], "which": [0, 9, 13, 15, 16, 21, 28, 29, 31], "can": [0, 9, 11, 13, 15, 16, 17, 18, 20, 21, 22, 23, 27, 28, 29, 30, 31], "upload": 0, "repositori": [0, 21, 23, 26], "via": [0, 9, 13, 15, 16, 22, 23, 28, 29], "pip": [0, 15, 16, 17, 18, 21, 23, 26], "For": [0, 9, 15, 17, 28], "instruct": 0, "further": [0, 15, 16, 17, 20, 21, 27, 28, 31], "command": [0, 21], "than": [0, 21], "ones": 0, "list": [0, 3, 4, 5, 6, 9, 11, 12, 13, 16, 28, 29, 31], "below": [0, 18, 27, 29, 31], "pleas": [0, 15, 17, 18, 20, 21, 24, 28, 29], "make": [0, 9, 16, 21, 28], "sure": [0, 21, 28], "follow": [0, 9, 11, 14, 21, 23, 25, 27, 28, 29, 30, 31], "describ": [0, 13, 16, 21, 24, 28, 29], "step": [0, 15, 16, 18, 21, 24, 26, 29, 31], "do": [0, 9, 15, 20, 21, 25, 27, 28, 30], "NOT": [0, 25], "conda": [0, 21, 26], "itself": [0, 13], "add": [0, 9, 13, 21, 24, 26], "path": [0, 9, 12, 15, 16, 17, 18, 27, 28, 29, 30], "If": [0, 9, 14, 15, 17, 20, 21, 26, 27, 28], "check": [0, 3, 9, 13, 20, 21, 26, 28, 29], "out": [0, 25, 28], "To": [0, 9, 15, 16, 17, 18, 21, 24, 27, 28], "end": [0, 9, 16, 21, 29], "navig": [0, 21], "git": [0, 21], "folder": [0, 21, 29], "execut": [0, 4, 9, 13, 21, 22, 23, 26, 27, 30, 31], "instll": 0, "excact": 0, "version": [0, 13, 15, 16, 17, 18, 23], "new": [0, 8, 13, 21, 24, 26, 28], "core": [0, 15, 16, 17, 18, 23], "first": [0, 9, 13, 15, 16, 17, 18, 21, 26, 27, 30], "latest": [0, 13, 26], "pyproject": [0, 13], "toml": [0, 13], "file": [0, 9, 12, 13, 21, 22, 25, 26, 31], "want": [0, 11, 16, 18, 21, 24, 28, 29], "specif": [0, 27], "second": [0, 18, 29], "package_nam": 0, "A": [0, 9, 24, 25, 28, 29, 31], "ad": [0, 9, 13, 15, 16, 17, 18, 27, 28], "given": [0, 3, 9, 11, 13, 15, 16, 17, 18, 27, 28, 29, 30], "dev": [0, 23], "group": [0, 23], "The": [0, 9, 11, 13, 14, 15, 16, 17, 21, 22, 23, 25, 27, 28, 29, 30, 31], "lock": [0, 13], "automat": [0, 13, 23, 26, 29, 31], "when": [0, 9, 13, 16, 27, 29], "so": [0, 9, 15, 24, 25, 28], "therefor": [0, 9, 13, 16, 21, 28], "tri": [0, 9], "resolv": 0, "manual": [0, 21, 22, 28, 31], "most": [0, 16], "current": [0, 13, 28, 29], "libari": 0, "easili": [0, 13, 14, 15, 16, 17, 23, 28, 31], "major": [0, 26], "minor": [0, 26], "patch": [0, 26], "prereleas": [0, 26], "final": [0, 13, 21, 30, 31], "creat": [0, 2, 3, 4, 5, 6, 8, 9, 13, 15, 16, 17, 18, 20, 22, 26, 29, 31], "dist": 0, "built": [0, 9, 21], "tanja": [1, 14, 23, 25], "torned": [1, 14, 21, 23, 25], "alexand": [1, 14, 23, 25], "luka": [1, 14, 16, 23, 25], "fehr": [1, 14, 23, 25], "helena": [1, 14, 23, 25], "graf": [1, 14, 23, 25], "jona": [1, 14, 23, 25], "hansel": [1, 14, 23, 25], "felix": [1, 14, 23, 25], "mohr": [1, 14, 23, 25], "marcel": [1, 14, 23, 25], "wever": [1, 14, 23, 25], "karlson": 1, "pfannschmidt": 1, "gehr": [1, 14, 23, 25], "page": [2, 13, 14], "auto": [2, 16, 17, 18], "gener": [2, 8, 13, 15, 17, 19, 21, 28, 29, 31], "1": [2, 9, 15, 16, 17, 18, 23, 27, 28, 29], "py_experiment": [2, 15, 16, 17, 18, 21, 23, 28, 29, 30], "config": [2, 4, 5, 9, 10, 11, 12, 15, 16, 17, 18, 26, 27, 28, 29], "database_connector": [2, 5, 6, 10, 11], "database_connector_lit": [2, 10], "database_connector_mysql": [2, 10], "except": [2, 9, 10, 13, 21], "experiment_statu": [2, 9, 10], "experiment": [2, 10, 13, 15, 16, 17, 18, 21, 23, 26, 28], "result_processor": [2, 9, 10, 15, 16, 17, 18, 28, 30], "util": [2, 10, 13], "sphinx": [2, 13, 21, 23], "autoapi": [2, 23], "cfg": [3, 28], "base": [3, 4, 5, 6, 7, 8, 9, 13, 15, 16, 17, 18, 21, 22, 26, 28, 29, 31], "abc": [3, 4, 5, 6], "helper": [3, 4, 5, 6], "provid": [3, 4, 5, 6, 13, 15, 16, 17, 18, 21, 24, 25, 27, 28, 29, 31], "standard": [3, 4, 5, 6, 15, 17, 18, 27], "wai": [3, 4, 5, 6, 14, 22, 28], "inherit": [3, 4, 5, 6], "classmethod": 3, "extract_config": 3, "kwarg": 3, "abstract": [3, 4], "method": [3, 9, 11, 13, 15, 16, 17, 24, 28], "extract": [3, 16, 30, 31], "configur": [3, 9, 12, 13, 22, 31], "from": [3, 8, 9, 11, 13, 15, 16, 17, 18, 22, 25, 26, 27, 30, 31], "omegaconf": [3, 6, 12, 23], "object": [3, 4, 11, 17], "valid": [3, 13], "bool": [3, 4, 5, 6, 9, 11, 12], "keyfield": [3, 4, 9, 12, 13, 15, 16, 17, 18, 28, 30], "name": [3, 9, 11, 12, 13, 15, 16, 17, 18, 21, 23, 27, 28, 29], "str": [3, 4, 5, 6, 9, 11, 12, 16, 18], "dtype": [3, 16], "valu": [3, 4, 9, 11, 12, 13, 15, 16, 17, 18, 28, 29, 30, 31], "int": [3, 4, 5, 6, 9, 11, 12, 15, 16, 17, 18, 29], "ani": [3, 4, 9, 15, 21, 24, 25, 28, 29, 30, 31], "databasecfg": [3, 4, 5, 11], "database_nam": [3, 9, 28], "table_nam": [3, 4, 6, 9, 28, 29], "result_timestamp": [3, 15, 16, 17, 29], "resultfield": [3, 4, 13, 15, 16, 17, 18], "dict": [3, 4, 5, 6, 9, 11, 12, 15, 16, 17, 18, 28, 30], "logtabl": [3, 11, 13, 15, 16, 18, 19], "logger": [3, 4, 5, 6, 11, 13, 28], "log": [3, 4, 5, 6, 9, 11, 13, 17, 21, 28, 29, 30, 31], "databas": [3, 9, 11, 13, 15, 16, 17, 18, 21, 22, 23, 30, 31], "connect": [3, 4, 5, 6, 9, 13, 15, 16, 17, 18, 25, 27, 28, 29], "In": [3, 9, 13, 16, 18, 21, 22, 24, 27, 29, 31], "addit": [3, 13, 21, 22, 26, 27, 29, 31], "defin": [3, 8, 9, 13, 22, 28, 29, 30, 31], "structur": [3, 11, 21, 29, 31], "tabl": [3, 9, 13, 17, 18, 29, 31], "attribut": 3, "static": [3, 4, 5, 6, 11], "tupl": [3, 4, 5, 6, 9, 11, 16], "_extract_keyfield": 3, "dictconfig": [3, 12], "_extract_value_rang": 3, "keyfield_nam": [3, 12], "keyfield_cont": 3, "_extract_resultfield": 3, "table_config": 3, "_extract_logt": 3, "get_experiment_configur": [3, 4], "customcfg": 3, "custom_valu": [3, 16], "custom": [3, 13, 15, 16, 17, 18], "everi": [3, 12, 13, 17, 28, 29], "experi": [3, 9, 11, 13, 14, 22, 23, 31], "codecarboncfg": 3, "codecarbon": [3, 9, 11, 13, 22, 23, 31], "api": [3, 13, 23], "pyexperimentercfg": 3, "n_job": [3, 9, 13, 15, 16, 17, 18, 29], "database_configur": [3, 4, 5, 6], "custom_configur": [3, 16], "codecarbon_configur": 3, "config_path": 3, "databaseconnector": [4, 5, 6, 11], "use_codecarbon": [4, 5, 6, 9, 28], "_test_connect": [4, 5, 6], "close_connect": [4, 6], "commit": [4, 21, 26], "none": [4, 6, 9, 11, 12, 15, 16, 17, 18], "cursor": [4, 5, 6], "sql_statement": 4, "fetchal": 4, "create_table_if_not_exist": 4, "_table_exist": [4, 5, 6], "_compute_column": 4, "_exclude_fixed_column": 4, "column": [4, 9, 13, 16, 18, 28], "_create_t": 4, "table_typ": 4, "_get_create_table_queri": 4, "get_autoincr": [4, 5, 6], "self": [4, 16], "_table_has_correct_structur": [4, 5, 6], "typed_field": [4, 6], "fill_tabl": [4, 13], "combin": [4, 9, 12, 15], "_check_combination_in_existing_row": 4, "existing_row": 4, "_get_existing_row": [4, 5, 6], "column_nam": [4, 5, 6], "random_ord": [4, 5, 6, 9, 13, 16, 28], "_pull_open_experi": [4, 5, 6], "_select_open_experiments_from_db": 4, "random_order_str": [4, 5, 6], "_get_pull_experiment_queri": [4, 5, 6], "order_bi": [4, 5, 6], "_write_to_databas": 4, "pull_paused_experi": 4, "experiment_id": [4, 9, 11, 16, 17, 18, 28, 29], "prepare_write_queri": 4, "kei": [4, 9, 11, 13, 21, 27], "update_databas": 4, "condit": [4, 13, 19, 25, 28], "_prepare_update_queri": 4, "reset_experi": [4, 9, 13, 16, 28], "state": [4, 9, 13, 21, 28, 29], "_pop_experiments_with_statu": 4, "statu": [4, 9, 11, 13, 15, 16, 17, 18, 23, 28, 31], "_get_experiments_with_condit": 4, "_delete_experiments_with_condit": 4, "get_structure_from_t": [4, 5, 6], "execute_queri": 4, "queri": 4, "delete_t": [4, 9, 13], "get_logt": [4, 9, 17], "logtable_nam": [4, 9, 11, 29, 30], "panda": [4, 9, 13, 15, 16, 23, 28, 31], "datafram": [4, 9, 13, 15, 16, 28, 31], "get_codecarbon_t": [4, 9, 16, 18, 28], "get_tabl": [4, 9, 15, 16, 17, 18, 28], "databaseconnectorlit": 5, "_write_to_database_separ": 5, "_prepared_statement_placehold": [5, 6], "config_column": 5, "databaseconnectormysql": 6, "credential_path": 6, "use_ssh_tunnel": [6, 9, 28], "": [6, 15, 16, 17, 18], "get_ssh_tunnel": 6, "start_ssh_tunnel": 6, "close_ssh_tunnel": [6, 28], "_create_database_if_not_exist": 6, "_get_database_credenti": 6, "_start_transact": 6, "readonli": 6, "fals": [6, 9, 15, 16, 17, 18, 28, 29], "pyexperimentererror": 7, "common": [7, 29], "class": [7, 13], "all": [7, 8, 9, 13, 15, 16, 17, 18, 21, 24, 25, 26, 28, 29, 30, 31], "non": [7, 22], "exit": 7, "parametercombinationerror": [7, 9], "databaseerror": 7, "databasecreationerror": 7, "databaseconnectionerror": [7, 9], "sshtunnelerror": 7, "databasequeryerror": 7, "emptyfilldatabasecallerror": 7, "creatingtableerror": 7, "invalidresultfielderror": 7, "invalidlogfielderror": [7, 11], "tablehaswrongstructureerror": 7, "noexperimentsleftexcept": 7, "nopausedexperimentsexcept": [7, 9], "configerror": 7, "noconfigfileerror": 7, "filenotfounderror": 7, "invalidconfigerror": 7, "invalidvaluesinconfigur": [7, 9], "missinglogtableerror": 7, "invalidcolumnerror": 7, "invalidlogtableerror": 7, "experimentstatu": [8, 9, 13, 18, 28], "enum": [8, 13], "enumer": 8, "deriv": 8, "run": [8, 9, 13, 15, 18, 28, 31], "done": [8, 9, 15, 16, 17, 18, 24, 27, 28], "error": [8, 9, 13, 15, 16, 17, 18, 28, 29, 31], "paus": [8, 9, 13, 19], "experiment_configuration_file_path": [9, 15, 16, 17, 18, 28], "o": [9, 13, 15, 16, 17, 18, 30], "join": [9, 15, 16, 17, 18, 30], "experiment_configur": [9, 28], "yml": [9, 15, 16, 17, 18, 27], "database_credential_file_path": [9, 28], "database_credenti": [9, 27, 28], "true": [9, 15, 16, 17, 18, 28, 29, 30], "logger_nam": [9, 28], "py": [9, 13, 15, 16, 17, 18, 21, 23, 26, 28], "log_level": [9, 16, 18, 28, 29], "info": [9, 15, 16, 17, 18, 28], "log_fil": [9, 28], "handl": [9, 13], "initi": [9, 13, 17, 18], "collect": [9, 15, 17, 22], "respect": [9, 26], "result": [9, 11, 13, 14, 15, 18, 22, 23, 29, 30, 31], "close_ssh": 9, "close": 9, "ssh": [9, 13, 27], "tunnel": 9, "fill_table_from_combin": [9, 15], "fixed_parameter_combin": [9, 12, 15], "paramet": [9, 11, 12, 13, 16, 17, 18, 19, 22, 27, 28, 29, 30, 31], "row": [9, 13, 15, 16, 17, 18], "inform": [9, 13, 15, 16, 17, 21, 24, 26, 28, 30, 31], "exist": [9, 15, 16, 17, 18, 21, 28], "doe": [9, 15, 16, 17, 18, 26], "ha": [9, 13, 15, 16, 17, 18, 20, 21, 27, 28, 29, 30, 31], "been": [9, 13, 18, 20, 21, 29, 31], "afterward": [9, 15, 21, 28], "fill": [9, 13, 17, 18, 29, 30], "cartesian": [9, 12, 15, 16, 28], "product": [9, 12, 15, 16, 23, 28], "where": [9, 13, 21, 24, 28, 29], "each": [9, 11, 12, 13, 15, 16, 17, 18, 28, 29, 31], "up": [9, 16, 22], "note": [9, 15, 16, 17, 18, 27, 28, 30], "onli": [9, 13, 15, 18, 27, 28, 29, 30], "ar": [9, 11, 12, 13, 15, 16, 17, 21, 22, 23, 24, 28, 29, 30, 31], "whose": [9, 29], "alreadi": [9, 17, 26, 28], "set": [9, 13, 15, 16, 17, 18, 22, 27, 28, 31], "match": 9, "rais": [9, 11, 15, 16, 18], "exampl": [9, 20, 22, 24, 26, 27, 28, 29, 30], "call": [9, 11, 13, 15, 16, 28, 29, 30], "a2": 9, "2": [9, 15, 16, 17, 18, 23, 29], "4": [9, 15, 16, 17, 18, 23, 28, 29], "b": [9, 21], "c": [9, 13, 25], "cat": 9, "dog": 9, "accord": [9, 13, 15, 17, 21, 26, 28], "four": 9, "option": [9, 13, 29], "predefin": [9, 29], "type": [9, 12, 13, 15, 16, 17, 18, 29], "default": [9, 15, 16, 17, 26, 27, 28, 29], "dictionari": [9, 11], "possibl": [9, 29], "fill_table_from_config": [9, 16, 17, 18, 28], "fill_table_with_row": [9, 16, 28], "entri": [9, 13, 15, 16, 29, 30], "made": [9, 21], "pair": [9, 11], "valueerror": [9, 15, 16, 18, 21], "experiment_funct": [9, 16, 28], "callabl": 9, "resultprocessor": [9, 11, 13, 15, 16, 17, 18, 28, 30], "max_experi": [9, 13, 15, 16, 17, 18, 28], "pull": [9, 13, 26, 31], "open": [9, 13, 14, 15, 16, 17, 18, 28, 31], "mani": [9, 13, 28], "process": [9, 11, 13, 15, 16, 18, 29, 30, 31], "start": [9, 13, 16, 18, 21, 22, 28, 29], "specifi": [9, 17, 22, 28, 29], "singl": [9, 13, 15, 16, 17, 22, 28, 30], "sequenti": [9, 17, 28], "until": [9, 28], "By": [9, 27, 28], "order": [9, 13, 28], "determin": [9, 16, 28], "id": [9, 13, 15, 16, 17, 18, 28], "randomli": 9, "after": [9, 15, 16, 18, 21, 22, 28, 31], "continu": [9, 13, 19, 20, 28], "written": [9, 15, 16, 28, 29, 30], "wa": [9, 13, 22, 28], "success": 9, "return": [9, 12, 18, 28], "correspond": [9, 17, 23, 27, 28, 31], "otherwis": [9, 21, 25, 31], "occur": [9, 13, 24, 28], "chang": [9, 21], "case": [9, 16, 18, 21, 24, 27, 28, 29, 31], "altern": [9, 28], "unpaus": [9, 18], "again": [9, 16, 21], "unpause_experi": [9, 18, 28], "within": [9, 13, 22, 29, 30], "befor": [9, 13, 16, 21, 26], "local": [9, 21, 27], "appear": 9, "function": [9, 13, 21, 22, 28, 29, 31], "should": [9, 15, 16, 17, 21, 24, 28], "differ": [9, 12, 13, 17, 18, 22, 28, 30, 31], "parametr": [9, 28], "number": [9, 14, 15, 17, 26, 29], "parallel": [9, 13, 15, 16, 22, 28, 29], "taken": 9, "wrong": [9, 13], "data": [9, 15, 16, 17, 18, 29], "context": 9, "mean": [9, 15, 16, 17, 18, 22, 27, 28, 30], "its": [9, 13, 28, 29], "param": [9, 11, 12], "_description_": 9, "_worker": 9, "worker": [9, 13], "repeatedli": 9, "_execution_wrapp": [9, 13], "one": [9, 13, 14, 15, 16, 17, 18, 21, 22, 27, 28, 29], "Then": [9, 21], "therebi": [9, 22, 23, 29], "have": [9, 13, 15, 16, 17, 18, 20, 21, 24, 27, 28, 29, 30], "directli": [9, 21], "finish": [9, 15, 16, 17, 18, 31], "successfulli": [9, 15, 16, 17, 18], "addition": [9, 13, 15, 16, 17, 21, 24, 28, 29, 31], "due": [9, 13, 15, 16, 17, 21], "noexperimentslefterror": 9, "left": 9, "_execute_experi": [9, 16], "keyfield_valu": [9, 16], "_write_codecarbon_config": 9, "write": [9, 11, 13, 15, 16, 17, 18, 29, 30, 31], "_delete_codecarbon_config": 9, "delet": [9, 28], "reset": [9, 13, 16, 31], "either": [9, 21, 27], "variabl": [9, 17], "length": 9, "argument": 9, "multipl": [9, 13, 15, 16, 28, 30], "drop": 9, "associ": [9, 25], "pd": [9, 16, 18], "database_config": 11, "db_connector": 11, "whenev": [11, 13], "process_result": [11, 15, 16, 17, 18, 30], "field": [11, 13, 15, 17, 22], "_write_emiss": 11, "emission_data": 11, "output": [11, 16, 18, 21, 26, 29], "emissionsdata": 11, "offline_mod": [11, 16, 18, 29], "_add_timestamps_to_result": 11, "process_log": [11, 17, 30], "append": 11, "invalid": 11, "without": [11, 21, 25, 28], "prefix": [11, 29], "table_name__": 11, "inner": 11, "columnsnam": 11, "_valid_logtable_log": 11, "_change_statu": 11, "_write_error": 11, "error_msg": 11, "_set_machin": 11, "machine_id": 11, "_set_nam": 11, "_valid_result_field": 11, "result_field": 11, "load_credential_config": 12, "load": [12, 16, 18], "write_codecarbon_config": 12, "codecarbon_config": 12, "extract_codecarbon_column": 12, "combine_fill_table_paramet": 12, "float": 12, "combien": 12, "These": [12, 22], "combiend": 12, "other": [12, 15, 21, 25, 29], "fix": [12, 15, 26, 29], "similar": [12, 20, 21], "union": 12, "like": [12, 21, 30], "howev": [12, 17, 22, 27, 28], "insid": 12, "two": [12, 16, 18, 28, 29], "item": 12, "get_timestamp_represent": 12, "sql": 13, "statement": 13, "ci": 13, "9": [13, 15, 16, 17, 18, 21, 23, 26], "remov": 13, "paper": 13, "draft": 13, "action": [13, 22, 25], "logfield": 13, "boolean": [13, 29], "string": 13, "sqlite": [13, 15, 16, 17, 18, 29], "convert": 13, "accordingli": 13, "bugfix": 13, "same": [13, 15, 17, 21, 28], "time": [13, 15, 16, 18, 21, 22, 28, 30], "passphras": [13, 27], "correctli": [13, 21], "address": [13, 22, 27], "code": [13, 15, 16, 21, 24, 28, 30, 31], "were": [13, 15, 16, 17, 18], "indent": 13, "incorrectli": 13, "later": [13, 18, 28], "support": [13, 15, 22, 27, 28, 29], "yaml": 13, "credenti": [13, 21, 28, 29, 31], "jump": 13, "host": 13, "problem": [13, 20, 24], "caus": 13, "some": [13, 16, 17, 21, 24, 29, 30], "twice": 13, "temporari": 13, "termin": [13, 28], "random": [13, 15, 16, 17, 18, 28, 31], "hotfix": 13, "cluster": 13, "runner": 13, "could": [13, 20, 21], "reflect": 13, "improv": [13, 21, 24], "thei": [13, 16, 29], "now": [13, 16, 17, 18], "might": [13, 27], "help": [13, 24, 29], "interest": [13, 29], "messag": 13, "better": 13, "feedback": [13, 21], "about": [13, 15, 16, 17, 24, 28, 29], "why": 13, "did": [13, 21], "work": [13, 21, 22, 24, 26, 27, 29], "implement": 13, "level": [13, 28], "furthermor": [13, 16, 29, 30], "formatt": 13, "well": [13, 15, 17, 22, 29], "handler": 13, "ensur": [13, 21], "both": 13, "consol": 13, "notebook": [13, 15, 16, 17, 18, 26], "longer": [13, 16], "overwrit": [13, 28], "basicconfig": 13, "framework": 13, "measur": [13, 22, 29], "carbon": [13, 15, 16, 17, 22, 28, 29, 31], "emiss": [13, 15, 16, 17, 22, 28, 29, 31], "issu": [13, 20, 21], "templat": 13, "request": [13, 26], "extend": [13, 29], "contribut": 13, "replac": [13, 15, 16, 17, 21], "mysql": [13, 21, 27, 29, 31], "connector": 13, "depend": [13, 15, 21, 23, 24, 28, 29], "pymysql": [13, 23], "instead": [13, 15, 17, 28], "escap": 13, "perform": [13, 17, 22, 29, 30], "includ": [13, 21, 23, 25, 29, 31], "joss": [13, 14], "public": [13, 14, 26], "increment": 13, "detail": [13, 24, 28, 29], "usag": [13, 15, 19, 29, 30], "rework": 13, "larg": 13, "fail": [13, 31], "miss": 13, "directori": [13, 15, 16, 17, 18, 29], "cover": [13, 29], "date": 13, "identif": 13, "stack": 13, "trace": 13, "multiprocess": 13, "joblib": [13, 23], "anymor": 13, "workflow": 13, "push": [13, 21], "websit": [13, 21], "separ": [13, 21, 28, 29, 31], "branch": [13, 21], "gh": 13, "access": [13, 26, 27, 28, 29], "readm": [13, 23], "poetri": [13, 21, 23, 26], "cpu": [13, 15, 17, 18], "max": 13, "renam": 13, "spawn": 13, "onc": [13, 30, 31], "advanc": 13, "complet": [13, 28, 29], "select": [13, 21], "limit": [13, 15, 16, 22, 25, 29], "transact": 13, "reach": 13, "hold": 13, "modifi": [13, 17, 25, 29], "abl": 13, "get": [13, 17, 18, 26], "referenc": 13, "db": 13, "unfavor": 13, "see": [13, 21, 28], "abov": [13, 16, 17, 25, 26, 28, 29, 30], "simpl": [13, 26], "github": [13, 20, 21, 23, 24], "cach": 13, "virtual": 13, "environ": [13, 21, 26], "prevent": 13, "cut": 13, "down": 13, "roundtrip": 13, "matrix": 13, "variou": 13, "7": [13, 15, 16, 17, 18, 23], "8": [13, 14, 15, 16, 17, 18, 23], "ubuntu": 13, "maco": 13, "window": 13, "exclud": [13, 16, 29], "sinc": [13, 15, 17, 18, 22], "take": [13, 29], "veri": [13, 21], "long": 13, "restructur": 13, "shortcut": 13, "integ": 13, "timestep": 13, "give": [13, 21, 24], "instanc": [13, 28, 31], "hpc": [13, 15, 16, 22, 28], "obtain": [13, 15, 16, 17, 25, 29], "export": [13, 28, 31], "e": [13, 15, 16, 17, 21, 23, 28, 29, 30, 31], "g": [13, 16, 21, 23, 28, 30], "latex": [13, 28, 31], "robust": 13, "creation": [13, 28], "jupyt": 13, "explain": 13, "grid": [13, 17, 19, 28, 31], "duplic": 13, "quotat": 13, "mark": 13, "compon": [13, 28], "No": [13, 15, 16, 17, 18], "summari": 13, "avail": [13, 15, 17, 18, 21, 28], "releas": 13, "scientif": [14, 23], "we": [14, 15, 17, 18, 21, 22, 27, 28], "would": [14, 21], "appreci": [14, 21], "et": 14, "al": 14, "2023": 14, "distribut": [14, 22, 25, 31], "track": [14, 15, 17, 18, 22, 28, 29, 31], "journal": 14, "sourc": [14, 21], "softwar": [14, 25], "84": 14, "5149": 14, "http": [14, 21, 23, 26], "doi": 14, "org": [14, 26], "10": [14, 15, 16, 17, 18], "21105": 14, "05149": 14, "articl": [14, 21], "tornede2023": 14, "titl": [14, 24, 26], "author": [14, 23, 25], "publish": [14, 25, 26], "year": 14, "volum": 14, "url": [14, 26], "show": [15, 16, 17, 18, 27], "programmat": 15, "vector": 15, "machin": [15, 16, 17, 18, 21, 23, 29, 31], "entir": 15, "scikit": [15, 16, 17, 18], "learn": [15, 16, 17, 18, 23], "found": [15, 16, 17, 18, 21, 28, 29, 30, 31], "here": [15, 16, 30], "import": [15, 16, 17, 18, 21, 28, 30], "content": [15, 16, 17, 18, 26, 28], "example_conditional_grid": 15, "dataset": [15, 16, 17, 18, 28, 29, 30], "varchar": [15, 16, 17, 18, 29], "50": [15, 16, 17, 18, 29], "cross_validation_split": [15, 16, 17, 18, 28, 29], "seed": [15, 16, 17, 18, 28, 29, 30, 31], "kernel": [15, 16, 17, 18, 28, 29], "gamma": [15, 16, 17, 18], "degre": 15, "coef0": 15, "train_f1": [15, 16, 18, 29, 30], "decim": [15, 16, 18], "train_accuraci": [15, 16, 17, 18, 29, 30], "test_f1": [15, 16, 17, 18, 29, 30], "test_accuraci": [15, 16, 17, 18, 29, 30], "sample_data": [15, 16, 17, 18], "mkdir": [15, 16, 17, 18], "w": [15, 16, 17, 18], "f": [15, 16, 17, 18], "next": [15, 16, 17, 18], "dummi": [15, 16, 17], "reason": [15, 16, 17, 27], "numpi": [15, 16, 17, 18, 21, 23], "np": [15, 16, 17, 18, 30], "sklearn": [15, 16, 17, 18], "load_iri": [15, 16, 17, 18], "model_select": [15, 16, 17, 18], "cross_valid": [15, 16, 17, 18], "pipelin": [15, 16, 17, 18, 29, 30], "make_pipelin": [15, 16, 17, 18], "preprocess": [15, 16, 17, 18], "standardscal": [15, 16, 17, 18], "svm": [15, 16, 17, 18], "svc": [15, 16, 17, 18], "sleep": [15, 18], "randint": 15, "def": [15, 16, 17, 18, 28, 30], "run_svm": 15, "custom_config": [15, 16, 17, 18], "0": [15, 16, 17, 18, 23, 27, 29], "5": [15, 16, 17, 18, 23, 29], "x": [15, 16, 17, 18], "y": [15, 16, 17, 18], "target": [15, 16, 17, 18], "linear": [15, 16, 17, 18, 29], "elif": 15, "poli": [15, 16, 17, 18, 28, 29], "rbf": [15, 16, 17, 18, 29], "model": [15, 16, 17, 18], "iri": [15, 16, 17, 18], "score": [15, 16, 17, 18, 30], "cv": [15, 16, 17, 18], "accuraci": [15, 16, 17, 18, 29], "f1_micro": [15, 16, 17, 18], "return_train_scor": [15, 16, 17, 18], "train_f1_micro": [15, 16, 17, 18, 30], "test_f1_micro": [15, 16, 17, 18, 30], "actual": [15, 16, 17, 21, 28, 29], "previous": [15, 16, 28], "job": [15, 16, 17, 28], "especi": [15, 16], "3": [15, 16, 17, 18, 21, 22, 23, 26, 29], "svm_experimenter_01": 15, "2024": [15, 16, 17, 18], "03": [15, 16, 17, 18], "11": [15, 16, 17, 18, 23], "08": [15, 16, 17, 18], "04": 15, "22": [15, 17, 27], "464": 15, "warn": [15, 16, 17, 18], "465": 15, "466": 15, "467": 15, "468": 15, "469": 15, "470": 15, "471": 15, "section": [15, 17, 18, 27, 28, 29, 30], "473": 15, "three": 15, "line": [15, 16, 28], "present": 15, "nan": [15, 16, 18], "thu": 15, "uncondition": 15, "555": 15, "55": 15, "skip": [15, 16, 17, 18], "creation_d": [15, 16, 17, 18], "start_dat": [15, 16, 17, 18], "end_dat": [15, 16, 17, 18], "6": [15, 16, 17, 18], "12": [15, 16, 17, 18], "13": [15, 16, 17], "14": [15, 16, 17], "15": [15, 16, 17, 18, 23, 29], "16": [15, 17, 18], "17": [15, 17], "18": [15, 17, 18], "19": [15, 16, 17], "20": [15, 17], "21": 15, "23": [15, 16, 17], "24": [15, 16, 28], "25": [15, 16, 18, 29], "26": [15, 17], "27": [15, 17], "28": [15, 16, 17], "29": 15, "30": 15, "31": [15, 16, 17], "32": [15, 16, 17], "33": 15, "34": [15, 16, 18], "35": [15, 17, 18], "36": [15, 17], "37": [15, 16], "38": 15, "39": [15, 17, 18], "40": 15, "41": [15, 16], "42": [15, 16, 17, 18, 28], "43": [15, 18], "44": [15, 18], "45": [15, 16], "46": 15, "47": 15, "48": 15, "49": 15, "51": 15, "52": [15, 16, 18], "53": [15, 16], "54": [15, 16, 18], "just": [15, 17], "predifin": [15, 17], "amount": [15, 17], "relat": [15, 16, 17, 20], "setup": [15, 17, 18, 22, 31], "ram": [15, 17, 18], "gpu": [15, 17, 18], "mode": [15, 17, 18], "fall": [15, 17, 18], "back": [15, 17, 18, 31], "constant": [15, 17, 18], "saw": [15, 17, 18], "12th": [15, 16, 17, 18], "gen": [15, 16, 17, 18], "intel": [15, 16, 17, 18], "r": [15, 16, 17, 18, 26], "tm": [15, 16, 17, 18], "i7": [15, 16, 17, 18], "1260p": [15, 16, 17, 18], "don": [15, 17, 18, 20], "t": [15, 17, 18, 20, 23], "know": [15, 17, 18, 20], "contact": [15, 17, 18], "u": [15, 17, 18], "consumpt": [15, 17, 18, 29], "gt": [15, 17, 18], "tracker": [15, 17, 18], "metadata": [15, 17, 18], "platform": [15, 17, 18], "system": [15, 17, 18, 22, 23, 28, 31], "linux": [15, 17, 18], "146": [15, 17, 18], "microsoft": [15, 17, 18], "wsl2": [15, 17, 18], "x86_64": [15, 17, 18], "glibc2": [15, 17, 18], "475": [15, 17, 18], "gb": [15, 17, 18], "count": [15, 17, 18], "energi": [15, 17, 18], "consum": [15, 17, 18, 22], "000000": [15, 17, 18], "kwh": [15, 17, 18], "power": [15, 17, 18, 29], "803128719329834": [15, 17, 18], "000001": [15, 18], "total": [15, 17, 18], "electr": [15, 17, 18], "begin": [15, 16, 17, 18, 21], "000002": [15, 17], "000013": [15, 16], "000014": 15, "000012": [15, 16], "000015": 15, "59": 15, "05": [15, 18], "00": 15, "06": [15, 16], "57": [15, 16, 18], "58": [15, 16], "01": 15, "07": [15, 16, 18], "02": [15, 16], "09": [15, 16, 18], "000007": 15, "000048": 15, "000055": 15, "56": 15, "575": 15, "worklaptop": [15, 16, 17, 18], "975": 15, "966667": [15, 16, 17, 18], "look": [15, 17], "our": [15, 17, 22], "more": [15, 17, 28, 29, 30], "over": [16, 17, 30, 31], "example_general_usag": [16, 18, 29], "255": [16, 29], "stop": [16, 18, 29], "sigmoid": [16, 17, 18, 29], "longtext": [16, 18, 29], "datapath": [16, 29], "measure_power_sec": [16, 18, 29], "tracking_mod": [16, 18, 29], "save_to_fil": [16, 18, 29], "output_dir": [16, 18, 29], "run_ml": [16, 17, 30], "read_csv": [16, 18], "example_notebook": [16, 17, 18], "452": 16, "454": 16, "455": 16, "456": 16, "458": 16, "459": 16, "error_dataset": 16, "533": 16, "559": 16, "randmli": 16, "chosen": 16, "exeecut": 16, "home": 16, "anaconda3": 16, "env": [16, 21], "lib": 16, "python3": 16, "site": 16, "168": 16, "futurewarn": 16, "behavior": 16, "concaten": 16, "empti": 16, "na": 16, "deprec": 16, "futur": 16, "retain": 16, "old": [16, 30], "relev": 16, "concat": 16, "oper": [16, 28], "df": 16, "from_record": 16, "090": 16, "traceback": 16, "recent": 16, "last": 16, "372": 16, "final_statu": 16, "tmp": 16, "ipykernel_19831": 16, "1244630566": 16, "137": 16, "standardsca": [16, 18], "971667": [16, 17, 18], "936667": [16, 17], "933333": [16, 17], "975000": [16, 17], "896667": [16, 17], "893333": [16, 17], "n": [16, 18, 21, 26], "h": [16, 23], "As": 16, "those": [16, 22, 31], "anoth": [16, 21, 28], "try": [16, 21], "simpli": 16, "pass": [16, 28, 29], "remain": 16, "orer": 16, "increas": 16, "191": 16, "192": 16, "491": 16, "result_table_agg": 16, "groupbi": [16, 28], "numeric_onli": 16, "945": 16, "94": 16, "style": 16, "to_latex": [16, 28], "tabular": 16, "lr": 16, "amp": 16, "940000": 16, "integr": 16, "suffix": 16, "_codecarbon": [16, 28, 29], "codecarbon_timestamp": [16, 18], "project_nam": [16, 18], "run_id": [16, 18], "duration_second": [16, 18], "emissions_kg": [16, 18], "emissions_rate_kg_sec": [16, 18], "cpu_power_watt": [16, 18], "gpu_power_watt": [16, 18], "cpu_model": [16, 18], "gpu_count": [16, 18], "gpu_model": [16, 18], "longitud": [16, 18], "latitud": [16, 18], "ram_total_s": [16, 18], "on_cloud": [16, 18], "power_usage_effici": [16, 18], "11t08": [16, 18], "1620091b": 16, "8b86": 16, "4b23": 16, "b54e": 16, "c4cf3020c04d": 16, "088837": 16, "598312e": 16, "000004": 16, "5312": [16, 18], "4771": [16, 18], "47501": [16, 18], "c60a2cf3": 16, "7e01": 16, "49b2": 16, "b40e": 16, "5fb2d6023f23": 16, "086848": 16, "585882e": 16, "65607dcf": 16, "143f": 16, "4721": 16, "9003": 16, "321205ce15eb": 16, "090465": 16, "729579e": 16, "c3c63ce1": 16, "6a16": 16, "4060": 16, "a9e9": 16, "acb5fb73e3d6": 16, "080714": 16, "314905e": 16, "4c166d72": 16, "1a0d": 16, "477b": 16, "b70b": 16, "620914c09edb": 16, "089772": 16, "712606e": 16, "2d2efdca": 16, "c9ae": 16, "4eab": 16, "955a": 16, "2ec5f047bb5d": 16, "070777": 16, "878039e": 16, "42fc7f5d": 16, "2157": 16, "42dd": 16, "9c4d": 16, "ff47c9d60d71": 16, "076391": 16, "133284e": 16, "4158e707": 16, "e153": 16, "4faf": 16, "b171": 16, "7713067c018e": 16, "101170": 16, "188866e": 16, "ec656b86": 16, "801c": 16, "4c3a": 16, "ae96": 16, "190249454c59": 16, "088437": 16, "639145e": 16, "4efdd1ef": 16, "946e": 16, "49f5": 16, "9d3b": 16, "8ddf46839d76": 16, "090036": 16, "723546e": 16, "97294712": 16, "72a2": 16, "49dd": 16, "8173": 16, "6ecf9c580b37": 16, "083235": 16, "419110e": 16, "7bbe7b09": 16, "301f": 16, "4064": 16, "8dc0": 16, "fd578221b525": 16, "079192": 16, "260114e": 16, "e986f632": 16, "5ee3": 16, "437a": 16, "ac43": 16, "52c31578600a": 16, "048913": 16, "921918e": 16, "65d3eead": 16, "d8f5": 16, "4cd7": 16, "9ebd": 16, "2bda51acab85": 16, "040884": 16, "582226e": 16, "carbon_emiss": 16, "sum": 16, "ram_power_watt": 16, "cpu_energy_kw": 16, "gpu_energy_kw": 16, "ram_energy_kw": 16, "energy_consumed_kw": 16, "cpu_count": 16, "105": [16, 18], "11567": 16, "000005": [16, 18], "000057": 16, "595": [16, 17], "070479": 16, "193276e": 16, "224": 16, "216": 16, "650139": 16, "lrr": 16, "understand": [17, 21, 24], "basic": [17, 18], "pyexeriment": 17, "purpos": [17, 25], "demonstr": [17, 30], "slightli": 17, "adapt": [17, 21, 27], "goal": 17, "small": 17, "find": [17, 20], "best": 17, "search": 17, "example_logt": 17, "best_kernel_accuraci": 17, "best_kernel_f1": 17, "train_scor": 17, "f1": [17, 29], "doubl": [17, 18, 29], "iter": 17, "init": 17, "performance_f1": 17, "performance_accuraci": 17, "reproduc": [17, 24], "492": 17, "493": 17, "494": 17, "495": 17, "example_logtables__train_scor": 17, "496": 17, "example_logtables__test_f1": 17, "example_logtables__test_accuraci": 17, "497": 17, "498": 17, "499": 17, "read": [17, 22], "timestamp": [17, 18, 29], "implicit": 17, "000003": [17, 18], "076": 17, "heavili": 18, "ipynb": 18, "configuraiton": 18, "comparison": 18, "paused_at_second": 18, "resumed_at_second": 18, "example_pause_and_continu": 18, "five": 18, "datetim": [18, 29], "pause_after_5_second": 18, "065": 18, "066": 18, "067": 18, "068": 18, "069": 18, "000008": 18, "000059": 18, "000068": 18, "537": 18, "710142e": 18, "lastli": 18, "shown": [18, 29], "resume_after_5_second": 18, "a87e6dcb": 18, "aac": 18, "44b1": 18, "9d83": 18, "c9744312ce62": 18, "096071": 18, "471057e": 18, "5132d06c": 18, "9a59": 18, "4d0e": 18, "8dc5": 18, "0afa4984a5f8": 18, "133938": 18, "813803e": 18, "question": 20, "mayb": 20, "suitabl": [20, 24], "solut": 20, "someon": [20, 21], "els": [20, 21], "situat": 20, "anyth": [20, 26], "idea": 21, "bug": [21, 24], "had": 21, "plan": 21, "yourself": 21, "great": 21, "comment": 21, "what": [21, 24], "exactli": 21, "At": [21, 28], "mention": 21, "review": 21, "fork": 21, "blog": 21, "post": 21, "go": [21, 24], "click": 21, "button": [21, 26], "top": 21, "right": [21, 25], "corner": 21, "clone": 21, "On": [21, 22], "usernam": 21, "com": [21, 23, 27], "remot": 21, "origin": 21, "upstream": 21, "switch": 21, "feature_branch_nam": 21, "meaning": 21, "fetch": 21, "v": 21, "checkout": 21, "anaconda": 21, "pandoc": 21, "suggest": 21, "pytest": [21, 23], "succeed": 21, "upgrad": 21, "good": 21, "usabl": [21, 24], "mandatori": 21, "locat": [21, 27, 28, 29], "affect": 21, "succe": 21, "But": 21, "test_run_experi": 21, "test_run_mysql_experi": 21, "user": [21, 27, 31], "doc": 21, "html": 21, "correct": 21, "destin": 21, "full": 21, "facilit": 22, "subsequ": 22, "evalu": [22, 30], "empir": 22, "studi": 22, "algorithm": 22, "particular": [22, 25], "design": [22, 31], "reduc": 22, "involv": 22, "effort": 22, "significantli": 22, "intend": [22, 23], "research": [22, 23], "artifici": [22, 23], "intellig": [22, 23], "addtion": 22, "analysi": 22, "often": 22, "accompani": 22, "input": [22, 31], "variant": 22, "properti": 22, "individu": 22, "usual": 22, "independ": 22, "manner": [22, 23], "requir": [22, 23, 29], "extens": 22, "aggreg": 22, "report": [22, 24], "monitor": 22, "restart": [22, 31], "tediou": 22, "challeng": 22, "central": 22, "massiv": 22, "allevi": 22, "aforement": 22, "overhead": 22, "eas": 22, "easiest": 22, "dive": 22, "partial": 22, "german": 22, "feder": 22, "ministri": 22, "econom": 22, "affair": 22, "climat": 22, "fleme": 22, "03e16012f": 22, "foundat": 22, "dfg": 22, "collabor": 22, "center": 22, "fly": 22, "comput": [22, 31], "sfb": 22, "901": 22, "160364472": 22, "pypi": 23, "ml": 23, "captur": 23, "unifi": 23, "ai": 23, "uni": 23, "hannov": 23, "de": 23, "stud": 23, "upb": 23, "ifi": 23, "lmu": 23, "unisabana": 23, "edu": 23, "co": 23, "licens": 23, "mit": [23, 25], "md": 23, "io": 23, "keyword": 23, "executor": 23, "classifi": 23, "stabl": 23, "audienc": 23, "scienc": 23, "topic": 23, "engin": 23, "program": 23, "languag": 23, "jupyterlab": 23, "sshtunnel": 23, "mock": 23, "nbsphinx": 23, "galleri": 23, "rtd": 23, "theme": 23, "recommonmark": 23, "freezegun": 23, "backend": [23, 29], "masonri": 23, "third": 24, "person": [24, 25], "vision": 24, "featur": [24, 28, 31], "summar": [24, 28], "necessari": [24, 31], "produc": 24, "assumpt": [24, 31], "think": 24, "And": 24, "label": 24, "enhanc": 24, "face": 24, "copyright": 25, "2021": 25, "2022": 25, "permiss": 25, "herebi": 25, "grant": 25, "free": 25, "charg": 25, "copi": [25, 29], "deal": 25, "restrict": 25, "merg": [25, 26], "sublicens": 25, "sell": 25, "permit": 25, "whom": 25, "furnish": 25, "subject": 25, "notic": 25, "shall": 25, "substanti": 25, "portion": 25, "THE": 25, "AS": 25, "warranti": 25, "OF": 25, "kind": 25, "express": 25, "OR": 25, "impli": 25, "BUT": 25, "TO": 25, "merchant": 25, "fit": 25, "FOR": 25, "AND": 25, "noninfring": 25, "IN": 25, "NO": 25, "event": 25, "holder": 25, "BE": 25, "liabl": 25, "claim": 25, "damag": 25, "liabil": 25, "whether": [25, 26], "contract": 25, "tort": 25, "aris": [25, 31], "WITH": 25, "legaci": 26, "known": 26, "token": 26, "store": [26, 29], "xxxxx": 26, "readi": [26, 28], "extra": 26, "index": 26, "repeat": 26, "changelog": 26, "main": [26, 29], "squash": 26, "tag": 26, "With": 26, "press": 26, "attach": 26, "explicitli": 27, "server": 27, "mysqlserv": 27, "example_us": 27, "password": 27, "example_password": 27, "secur": 27, "ip": 27, "jumphost": 27, "ssh_hostnam": 27, "port": 27, "optional_ssh_port": 27, "sshmysqlserv": 27, "ssh_private_key_password": 27, "remote_address": 27, "optional_mysql_server_address": 27, "127": 27, "remote_port": 27, "optional_mysql_server_port": 27, "3306": 27, "local_address": 27, "optional_local_address": 27, "local_port": 27, "optional_local_port": 27, "privat": 27, "few": 28, "beforehand": 28, "run_experi": [28, 30], "someth": 28, "assum": 28, "ignor": [28, 29], "complex": 28, "new_data": 28, "new_data_2": 28, "fashion": 28, "comma": [28, 29], "interrupt": 28, "result_t": 28, "print": 28, "index_nam": 28, "footprint": [28, 29], "enabl": [28, 29], "conveni": 28, "certain": [28, 31], "resum": 28, "run_experiment_until_paus": 28, "custom_field": [28, 30], "some_reason_to_paus": 28, "thing": 28, "point": 28, "togeth": [28, 29], "run_experiment_after_paus": 28, "primarili": 29, "subsect": 29, "dataset1": 29, "dataset2": 29, "dataset3": 29, "pipeline_evalu": 29, "incumb": 29, "identifi": 29, "henc": 29, "thought": 29, "numer": 29, "rang": 29, "size": 29, "typic": 29, "depth": [29, 30], "showcas": [29, 30], "string_input_nam": 29, "int_input_nam": 29, "int_shortened_input_nam": 29, "numeric_input_nam": 29, "numeric_shortened_input_nam": 29, "form": 29, "consist": 29, "intermedi": 29, "similarli": 29, "underli": 29, "belong": 29, "__": 29, "commonli": 29, "maximum": 29, "under": 29, "deactiv": 29, "per": 29, "whole": 29, "estim": 29, "region": 29, "devic": 29, "save": 29, "own": 29, "start_tim": 30, "loop": 30, "epoch": 30, "while": 30, "stuff": 30, "new_best_perform": 30, "min": 30, "runtim": 30, "break": 30, "test": 30, "re": 30, "overwritten": 30, "subset": [30, 31], "resultfield_nam": 30, "resultfield_valu": 30, "logtable_field_nam": 30, "logtable_field_valu": 30, "schema": 31, "figur": 31, "uniqu": 31, "through": 31, "domain": 31, "desir": 31, "overal": 31, "jointli": 31, "averag": 31, "view": 31}, "objects": {"": [[10, 0, 0, "-", "py_experimenter"]], "py_experimenter": [[3, 0, 0, "-", "config"], [4, 0, 0, "-", "database_connector"], [5, 0, 0, "-", "database_connector_lite"], [6, 0, 0, "-", "database_connector_mysql"], [7, 0, 0, "-", "exceptions"], [8, 0, 0, "-", "experiment_status"], [9, 0, 0, "-", "experimenter"], [11, 0, 0, "-", "result_processor"], [12, 0, 0, "-", "utils"]], "py_experimenter.config": [[3, 1, 1, "", "Cfg"], [3, 1, 1, "", "CodeCarbonCfg"], [3, 1, 1, "", "CustomCfg"], [3, 1, 1, "", "DatabaseCfg"], [3, 1, 1, "", "Keyfield"], [3, 1, 1, "", "PyExperimenterCfg"]], "py_experimenter.config.Cfg": [[3, 2, 1, "", "extract_config"], [3, 2, 1, "", "valid"]], "py_experimenter.config.CodeCarbonCfg": [[3, 2, 1, "", "extract_config"], [3, 2, 1, "", "valid"]], "py_experimenter.config.CustomCfg": [[3, 2, 1, "", "extract_config"], [3, 2, 1, "", "valid"]], "py_experimenter.config.DatabaseCfg": [[3, 2, 1, "", "_extract_keyfields"], [3, 2, 1, "", "_extract_logtables"], [3, 2, 1, "", "_extract_resultfields"], [3, 2, 1, "", "_extract_value_range"], [3, 2, 1, "", "extract_config"], [3, 2, 1, "", "get_experiment_configuration"], [3, 2, 1, "", "valid"]], "py_experimenter.config.Keyfield": [[3, 3, 1, "", "dtype"], [3, 3, 1, "", "name"], [3, 3, 1, "", "values"]], "py_experimenter.config.PyExperimenterCfg": [[3, 2, 1, "", "extract_config"], [3, 2, 1, "", "valid"]], "py_experimenter.database_connector": [[4, 1, 1, "", "DatabaseConnector"]], "py_experimenter.database_connector.DatabaseConnector": [[4, 2, 1, "", "_check_combination_in_existing_rows"], [4, 2, 1, "", "_compute_columns"], [4, 2, 1, "", "_create_table"], [4, 2, 1, "", "_delete_experiments_with_condition"], [4, 2, 1, "", "_exclude_fixed_columns"], [4, 2, 1, "", "_get_create_table_query"], [4, 2, 1, "", "_get_existing_rows"], [4, 2, 1, "", "_get_experiments_with_condition"], [4, 2, 1, "", "_get_pull_experiment_query"], [4, 2, 1, "", "_pop_experiments_with_status"], [4, 2, 1, "", "_prepare_update_query"], [4, 2, 1, "", "_pull_open_experiment"], [4, 2, 1, "", "_select_open_experiments_from_db"], [4, 2, 1, "", "_table_exists"], [4, 2, 1, "", "_table_has_correct_structure"], [4, 2, 1, "", "_test_connection"], [4, 2, 1, "", "_write_to_database"], [4, 2, 1, "", "close_connection"], [4, 2, 1, "", "commit"], [4, 2, 1, "", "connect"], [4, 2, 1, "", "create_table_if_not_existing"], [4, 2, 1, "", "cursor"], [4, 2, 1, "", "delete_table"], [4, 2, 1, "", "execute"], [4, 2, 1, "", "execute_queries"], [4, 2, 1, "", "fetchall"], [4, 2, 1, "", "fill_table"], [4, 2, 1, "", "get_autoincrement"], [4, 2, 1, "", "get_codecarbon_table"], [4, 2, 1, "", "get_experiment_configuration"], [4, 2, 1, "", "get_logtable"], [4, 2, 1, "", "get_structure_from_table"], [4, 2, 1, "", "get_table"], [4, 2, 1, "", "prepare_write_query"], [4, 2, 1, "", "pull_paused_experiment"], [4, 2, 1, "", "random_order_string"], [4, 2, 1, "", "reset_experiments"], [4, 2, 1, "", "update_database"]], "py_experimenter.database_connector_lite": [[5, 1, 1, "", "DatabaseConnectorLITE"]], "py_experimenter.database_connector_lite.DatabaseConnectorLITE": [[5, 2, 1, "", "_get_existing_rows"], [5, 2, 1, "", "_get_pull_experiment_query"], [5, 3, 1, "", "_prepared_statement_placeholder"], [5, 2, 1, "", "_pull_open_experiment"], [5, 2, 1, "", "_table_exists"], [5, 2, 1, "", "_table_has_correct_structure"], [5, 2, 1, "", "_test_connection"], [5, 3, 1, "", "_write_to_database_separator"], [5, 2, 1, "", "connect"], [5, 2, 1, "", "get_autoincrement"], [5, 2, 1, "", "get_structure_from_table"], [5, 2, 1, "", "random_order_string"]], "py_experimenter.database_connector_mysql": [[6, 1, 1, "", "DatabaseConnectorMYSQL"]], "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL": [[6, 2, 1, "", "_create_database_if_not_existing"], [6, 2, 1, "", "_get_database_credentials"], [6, 2, 1, "", "_get_existing_rows"], [6, 2, 1, "", "_get_pull_experiment_query"], [6, 3, 1, "", "_prepared_statement_placeholder"], [6, 2, 1, "", "_pull_open_experiment"], [6, 2, 1, "", "_start_transaction"], [6, 2, 1, "", "_table_exists"], [6, 2, 1, "", "_table_has_correct_structure"], [6, 2, 1, "", "_test_connection"], [6, 2, 1, "", "close_connection"], [6, 2, 1, "", "close_ssh_tunnel"], [6, 2, 1, "", "connect"], [6, 2, 1, "", "get_autoincrement"], [6, 2, 1, "", "get_ssh_tunnel"], [6, 2, 1, "", "get_structure_from_table"], [6, 2, 1, "", "random_order_string"], [6, 2, 1, "", "start_ssh_tunnel"]], "py_experimenter.exceptions": [[7, 4, 1, "", "ConfigError"], [7, 4, 1, "", "CreatingTableError"], [7, 4, 1, "", "DatabaseConnectionError"], [7, 4, 1, "", "DatabaseCreationError"], [7, 4, 1, "", "DatabaseError"], [7, 4, 1, "", "DatabaseQueryError"], [7, 4, 1, "", "EmptyFillDatabaseCallError"], [7, 4, 1, "", "InvalidColumnError"], [7, 4, 1, "", "InvalidConfigError"], [7, 4, 1, "", "InvalidLogFieldError"], [7, 4, 1, "", "InvalidLogtableError"], [7, 4, 1, "", "InvalidResultFieldError"], [7, 4, 1, "", "InvalidValuesInConfiguration"], [7, 4, 1, "", "MissingLogTableError"], [7, 4, 1, "", "NoConfigFileError"], [7, 4, 1, "", "NoExperimentsLeftException"], [7, 4, 1, "", "NoPausedExperimentsException"], [7, 4, 1, "", "ParameterCombinationError"], [7, 4, 1, "", "PyExperimenterError"], [7, 4, 1, "", "SshTunnelError"], [7, 4, 1, "", "TableHasWrongStructureError"]], "py_experimenter.experiment_status": [[8, 1, 1, "", "ExperimentStatus"]], "py_experimenter.experiment_status.ExperimentStatus": [[8, 3, 1, "", "ALL"], [8, 3, 1, "", "CREATED"], [8, 3, 1, "", "DONE"], [8, 3, 1, "", "ERROR"], [8, 3, 1, "", "PAUSED"], [8, 3, 1, "", "RUNNING"]], "py_experimenter.experimenter": [[9, 1, 1, "", "PyExperimenter"]], "py_experimenter.experimenter.PyExperimenter": [[9, 2, 1, "", "_delete_codecarbon_config"], [9, 2, 1, "", "_execute_experiment"], [9, 2, 1, "", "_execution_wrapper"], [9, 2, 1, "", "_worker"], [9, 2, 1, "", "_write_codecarbon_config"], [9, 2, 1, "", "close_ssh"], [9, 2, 1, "", "delete_table"], [9, 2, 1, "", "execute"], [9, 2, 1, "", "fill_table_from_combination"], [9, 2, 1, "", "fill_table_from_config"], [9, 2, 1, "", "fill_table_with_rows"], [9, 2, 1, "", "get_codecarbon_table"], [9, 2, 1, "", "get_logtable"], [9, 2, 1, "", "get_table"], [9, 2, 1, "", "reset_experiments"], [9, 2, 1, "", "unpause_experiment"]], "py_experimenter.result_processor": [[11, 1, 1, "", "ResultProcessor"]], "py_experimenter.result_processor.ResultProcessor": [[11, 2, 1, "", "_add_timestamps_to_results"], [11, 2, 1, "", "_change_status"], [11, 2, 1, "", "_set_machine"], [11, 2, 1, "", "_set_name"], [11, 2, 1, "", "_valid_logtable_logs"], [11, 2, 1, "", "_valid_result_fields"], [11, 2, 1, "", "_write_emissions"], [11, 2, 1, "", "_write_error"], [11, 2, 1, "", "process_logs"], [11, 2, 1, "", "process_results"]], "py_experimenter.utils": [[12, 5, 1, "", "combine_fill_table_parameters"], [12, 5, 1, "", "extract_codecarbon_columns"], [12, 5, 1, "", "get_timestamp_representation"], [12, 5, 1, "", "load_credential_config"], [12, 5, 1, "", "write_codecarbon_config"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:exception", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "exception", "Python exception"], "5": ["py", "function", "Python function"]}, "titleterms": {"usag": [0, 16, 17, 31], "3rd": 0, "parti": 0, "depend": 0, "poetri": 0, "author": 1, "core": 1, "develop": [1, 21], "team": 1, "contribut": [1, 21], "api": 2, "refer": 2, "py_experiment": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "config": 3, "modul": [3, 4, 5, 6, 7, 8, 9, 11, 12], "content": [3, 4, 5, 6, 7, 8, 9, 11, 12], "class": [3, 4, 5, 6, 8, 9, 11], "database_connector": 4, "database_connector_lit": 5, "database_connector_mysql": 6, "except": 7, "experiment_statu": 8, "experiment": 9, "submodul": 10, "result_processor": 11, "util": 12, "function": [12, 15, 16, 17, 18, 30], "changelog": 13, "v1": 13, "4": 13, "1": 13, "11": 13, "03": 13, "2024": 13, "featur": 13, "fix": 13, "0": 13, "20": 13, "02": 13, "3": 13, "2": 13, "23": 13, "01": 13, "24": 13, "07": 13, "2023": 13, "exampl": [13, 15, 16, 17, 18, 19], "06": 13, "chang": 13, "21": 13, "04": 13, "test": [13, 21, 26], "2022": 13, "09": 13, "v0": 13, "6": 13, "5": 13, "17": 13, "2021": 13, "10": 13, "14": 13, "cite": 14, "pyexperiment": [14, 15, 16, 17, 22, 28], "citat": 14, "string": 14, "bibtex": 14, "condit": 15, "paramet": 15, "grid": 15, "experi": [15, 16, 17, 18, 28, 29, 30], "configur": [15, 16, 17, 18, 28, 29], "file": [15, 16, 17, 18, 27, 28, 29], "defin": [15, 16, 17, 18], "execut": [15, 16, 17, 18, 28, 29], "initi": [15, 16], "fill": [15, 16, 28], "tabl": [15, 16, 28], "codecarbon": [15, 16, 17, 18, 28, 29], "gener": 16, "restart": 16, "fail": 16, "result": [16, 17, 28], "print": 16, "latex": 16, "aggreg": 16, "logtabl": [17, 29, 30], "run": 17, "check": 17, "paus": [18, 28], "continu": 18, "showcas": 18, "resum": 18, "entri": 18, "need": 20, "help": 20, "how": 21, "setup": 21, "workflow": 21, "extend": 21, "unit": 21, "updat": 21, "document": [21, 22], "creat": [21, 24, 28], "pull": 21, "request": 21, "welcom": 22, "": 22, "acknowledg": 22, "instal": 23, "an": 24, "issu": 24, "licens": 25, "releas": 26, "version": 26, "prepar": 26, "pypi": 26, "databas": [27, 28, 29], "credenti": 27, "from": 28, "With": 28, "specif": 28, "row": 28, "reset": 28, "obtain": 28, "unpaus": 28, "close": 28, "ssh": 28, "tunnel": 28, "inform": 29, "keyfield": 29, "resultfield": [29, 30], "custom": 29, "field": 29, "push": 30, "data": 30, "To": 30}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx": 58}, "alltitles": {"Usage of 3rd Party Dependencies": [[0, "usage-of-3rd-party-dependencies"]], "Poetry": [[0, "poetry"]], "Authors": [[1, "authors"]], "Core Development Team": [[1, "core-development-team"]], "Contributions": [[1, "contributions"]], "API Reference": [[2, "api-reference"]], "py_experimenter.config": [[3, "module-py_experimenter.config"]], "Module Contents": [[3, "module-contents"], [4, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [8, "module-contents"], [9, "module-contents"], [11, "module-contents"], [12, "module-contents"]], "Classes": [[3, "classes"], [4, "classes"], [5, "classes"], [6, "classes"], [8, "classes"], [9, "classes"], [11, "classes"]], "py_experimenter.database_connector": [[4, "module-py_experimenter.database_connector"]], "py_experimenter.database_connector_lite": [[5, "module-py_experimenter.database_connector_lite"]], "py_experimenter.database_connector_mysql": [[6, "module-py_experimenter.database_connector_mysql"]], "py_experimenter.exceptions": [[7, "module-py_experimenter.exceptions"]], "py_experimenter.experiment_status": [[8, "module-py_experimenter.experiment_status"]], "py_experimenter.experimenter": [[9, "module-py_experimenter.experimenter"]], "py_experimenter": [[10, "module-py_experimenter"]], "Submodules": [[10, "submodules"]], "py_experimenter.result_processor": [[11, "module-py_experimenter.result_processor"]], "py_experimenter.utils": [[12, "module-py_experimenter.utils"]], "Functions": [[12, "functions"]], "Changelog": [[13, "changelog"]], "v1.4.1 (11.03.2024)": [[13, "v1-4-1-11-03-2024"]], "Feature": [[13, "feature"], [13, "id1"], [13, "id3"], [13, "id5"], [13, "id7"], [13, "id10"], [13, "id11"], [13, "id14"], [13, "id18"]], "Fix": [[13, "fix"], [13, "id2"], [13, "id4"], [13, "id6"], [13, "id9"], [13, "id13"], [13, "id16"], [13, "id20"]], "v1.4.0 (20.02.2024)": [[13, "v1-4-0-20-02-2024"]], "v1.3.2 (23.01.2024)": [[13, "v1-3-2-23-01-2024"]], "v1.3.1 (24.07.2023)": [[13, "v1-3-1-24-07-2023"]], "Examples": [[13, "examples"], [13, "id8"], [13, "id12"], [13, "id15"], [13, "id19"], [19, "examples"]], "v1.3.0 (23.06.2023)": [[13, "v1-3-0-23-06-2023"]], "Changed": [[13, "changed"]], "v1.2.1 (21/04/2023)": [[13, "v1-2-1-21-04-2023"]], "v1.2.0 (04/04/2023)": [[13, "v1-2-0-04-04-2023"]], "Tests": [[13, "tests"], [13, "id17"], [13, "id21"]], "v1.1.0 (21/11/2022)": [[13, "v1-1-0-21-11-2022"]], "v1.0.0 (04/09/2022)": [[13, "v1-0-0-04-09-2022"]], "v0.0.6 (01/03/2022)": [[13, "v0-0-6-01-03-2022"]], "v0.0.5 (17/01/2022)": [[13, "v0-0-5-17-01-2022"]], "v0.0.4 (02/11/2021)": [[13, "v0-0-4-02-11-2021"]], "v0.0.3 (20/10/2021)": [[13, "v0-0-3-20-10-2021"]], "v0.0.2 (20/10/2021)": [[13, "v0-0-2-20-10-2021"]], "v0.0.1 (14/10/2021)": [[13, "v0-0-1-14-10-2021"]], "Cite PyExperimenter": [[14, "cite-pyexperimenter"]], "Citation String": [[14, "citation-string"]], "BibTex": [[14, "bibtex"]], "Example: Conditional Parameter Grids": [[15, "Example:-Conditional-Parameter-Grids"]], "Experiment Configuration File": [[15, "Experiment-Configuration-File"], [16, "Experiment-Configuration-File"], [17, "Experiment-Configuration-File"], [18, "Experiment-Configuration-File"], [29, "experiment-configuration-file"]], "Defining the execution function": [[15, "Defining-the-execution-function"], [16, "Defining-the-execution-function"], [17, "Defining-the-execution-function"]], "Executing PyExperimenter": [[15, "Executing-PyExperimenter"], [16, "Executing-PyExperimenter"], [17, "Executing-PyExperimenter"], [28, "executing-pyexperimenter"]], "Initialize PyExperimenter": [[15, "Initialize-PyExperimenter"], [16, "Initialize-PyExperimenter"]], "Fill Table": [[15, "Fill-Table"], [16, "Fill-Table"]], "Execute PyExperimenter": [[15, "Execute-PyExperimenter"], [16, "Execute-PyExperimenter"]], "CodeCarbon": [[15, "CodeCarbon"], [16, "CodeCarbon"], [17, "CodeCarbon"], [28, "codecarbon"], [29, "codecarbon"]], "Example: General Usage": [[16, "Example:-General-Usage"]], "Restart Failed Experiments": [[16, "Restart-Failed-Experiments"]], "Generating Result Table": [[16, "Generating-Result-Table"]], "Printing LaTex Table": [[16, "Printing-LaTex-Table"]], "Aggregating CodeCarbon Results": [[16, "Aggregating-CodeCarbon-Results"]], "Printing CodeCarbon Results as LaTex Table": [[16, "Printing-CodeCarbon-Results-as-LaTex-Table"]], "Example: Usage of Logtables": [[17, "Example:-Usage-of-Logtables"]], "Run Experiments": [[17, "Run-Experiments"]], "Check Results": [[17, "Check-Results"]], "Example: Pause and Continue": [[18, "Example:-Pause-and-Continue"]], "Defining Pausing Execution Function": [[18, "Defining-Pausing-Execution-Function"]], "Showcase Paused Execution": [[18, "Showcase-Paused-Execution"]], "Define resuming execution function": [[18, "Define-resuming-execution-function"]], "CodeCarbon Entries": [[18, "CodeCarbon-Entries"]], "Need Help?": [[20, "need-help"]], "How to Contribute": [[21, "how-to-contribute"]], "Setup Development Workflow": [[21, "setup-development-workflow"]], "Extend Unit Tests": [[21, "extend-unit-tests"]], "Update Documentation": [[21, "update-documentation"]], "Create Pull Request": [[21, "create-pull-request"]], "Welcome to PyExperimenter\u2019s documentation!": [[22, "welcome-to-pyexperimenter-s-documentation"]], "Acknowledgements": [[22, "acknowledgements"]], "Installation": [[23, "installation"]], "Creating an Issue": [[24, "creating-an-issue"]], "License": [[25, "license"]], "Release Version": [[26, "release-version"]], "Prepare Test PyPi / PyPi": [[26, "prepare-test-pypi-pypi"]], "Release Version to Test PyPi": [[26, "release-version-to-test-pypi"]], "Release Version to PyPi": [[26, "release-version-to-pypi"]], "Database Credential File": [[27, "database-credential-file"]], "Creating a PyExperimenter": [[28, "creating-a-pyexperimenter"]], "Fill Database Table": [[28, "fill-database-table"]], "Fill Table From Experiment Configuration File": [[28, "fill-table-from-experiment-configuration-file"]], "Fill Table With Specific Rows": [[28, "fill-table-with-specific-rows"]], "Execute Experiments": [[28, "execute-experiments"]], "Reset Experiments": [[28, "reset-experiments"]], "Obtain Results": [[28, "obtain-results"]], "Pausing and Unpausing Experiments": [[28, "pausing-and-unpausing-experiments"]], "Close SSH Tunnel": [[28, "close-ssh-tunnel"]], "Database Information": [[29, "database-information"]], "Keyfields": [[29, "keyfields"]], "Resultfields": [[29, "resultfields"]], "Logtables": [[29, "logtables"]], "Execution Information": [[29, "execution-information"]], "Custom Fields": [[29, "custom-fields"]], "Experiment Function": [[30, "experiment-function"]], "Push Data To Resultfields": [[30, "push-data-to-resultfields"]], "Push Data To Logtables": [[30, "push-data-to-logtables"]], "Usage": [[31, "usage"]]}, "indexentries": {"cfg (class in py_experimenter.config)": [[3, "py_experimenter.config.Cfg"]], "codecarboncfg (class in py_experimenter.config)": [[3, "py_experimenter.config.CodeCarbonCfg"]], "customcfg (class in py_experimenter.config)": [[3, "py_experimenter.config.CustomCfg"]], "databasecfg (class in py_experimenter.config)": [[3, "py_experimenter.config.DatabaseCfg"]], "keyfield (class in py_experimenter.config)": [[3, "py_experimenter.config.Keyfield"]], "pyexperimentercfg (class in py_experimenter.config)": [[3, "py_experimenter.config.PyExperimenterCfg"]], "_extract_keyfields() (py_experimenter.config.databasecfg static method)": [[3, "py_experimenter.config.DatabaseCfg._extract_keyfields"]], "_extract_logtables() (py_experimenter.config.databasecfg static method)": [[3, "py_experimenter.config.DatabaseCfg._extract_logtables"]], "_extract_resultfields() (py_experimenter.config.databasecfg static method)": [[3, "py_experimenter.config.DatabaseCfg._extract_resultfields"]], "_extract_value_range() (py_experimenter.config.databasecfg static method)": [[3, "py_experimenter.config.DatabaseCfg._extract_value_range"]], "dtype (py_experimenter.config.keyfield attribute)": [[3, "py_experimenter.config.Keyfield.dtype"]], "extract_config() (py_experimenter.config.cfg class method)": [[3, "py_experimenter.config.Cfg.extract_config"]], "extract_config() (py_experimenter.config.codecarboncfg static method)": [[3, "py_experimenter.config.CodeCarbonCfg.extract_config"]], "extract_config() (py_experimenter.config.customcfg static method)": [[3, "py_experimenter.config.CustomCfg.extract_config"]], "extract_config() (py_experimenter.config.databasecfg static method)": [[3, "py_experimenter.config.DatabaseCfg.extract_config"]], "extract_config() (py_experimenter.config.pyexperimentercfg static method)": [[3, "py_experimenter.config.PyExperimenterCfg.extract_config"]], "get_experiment_configuration() (py_experimenter.config.databasecfg method)": [[3, "py_experimenter.config.DatabaseCfg.get_experiment_configuration"]], "module": [[3, "module-py_experimenter.config"], [4, "module-py_experimenter.database_connector"], [5, "module-py_experimenter.database_connector_lite"], [6, "module-py_experimenter.database_connector_mysql"], [7, "module-py_experimenter.exceptions"], [8, "module-py_experimenter.experiment_status"], [9, "module-py_experimenter.experimenter"], [10, "module-py_experimenter"], [11, "module-py_experimenter.result_processor"], [12, "module-py_experimenter.utils"]], "name (py_experimenter.config.keyfield attribute)": [[3, "py_experimenter.config.Keyfield.name"]], "py_experimenter.config": [[3, "module-py_experimenter.config"]], "valid() (py_experimenter.config.cfg method)": [[3, "py_experimenter.config.Cfg.valid"]], "valid() (py_experimenter.config.codecarboncfg method)": [[3, "py_experimenter.config.CodeCarbonCfg.valid"]], "valid() (py_experimenter.config.customcfg method)": [[3, "py_experimenter.config.CustomCfg.valid"]], "valid() (py_experimenter.config.databasecfg method)": [[3, "py_experimenter.config.DatabaseCfg.valid"]], "valid() (py_experimenter.config.pyexperimentercfg method)": [[3, "py_experimenter.config.PyExperimenterCfg.valid"]], "values (py_experimenter.config.keyfield attribute)": [[3, "py_experimenter.config.Keyfield.values"]], "databaseconnector (class in py_experimenter.database_connector)": [[4, "py_experimenter.database_connector.DatabaseConnector"]], "_check_combination_in_existing_rows() (py_experimenter.database_connector.databaseconnector method)": [[4, "py_experimenter.database_connector.DatabaseConnector._check_combination_in_existing_rows"]], "_compute_columns() (py_experimenter.database_connector.databaseconnector static method)": [[4, "py_experimenter.database_connector.DatabaseConnector._compute_columns"]], "_create_table() (py_experimenter.database_connector.databaseconnector method)": [[4, "py_experimenter.database_connector.DatabaseConnector._create_table"]], "_delete_experiments_with_condition() (py_experimenter.database_connector.databaseconnector method)": [[4, "py_experimenter.database_connector.DatabaseConnector._delete_experiments_with_condition"]], "_exclude_fixed_columns() (py_experimenter.database_connector.databaseconnector method)": [[4, "py_experimenter.database_connector.DatabaseConnector._exclude_fixed_columns"]], "_get_create_table_query() (py_experimenter.database_connector.databaseconnector method)": [[4, "py_experimenter.database_connector.DatabaseConnector._get_create_table_query"]], "_get_existing_rows() (py_experimenter.database_connector.databaseconnector method)": [[4, "py_experimenter.database_connector.DatabaseConnector._get_existing_rows"]], "_get_experiments_with_condition() (py_experimenter.database_connector.databaseconnector method)": [[4, "py_experimenter.database_connector.DatabaseConnector._get_experiments_with_condition"]], "_get_pull_experiment_query() (py_experimenter.database_connector.databaseconnector method)": [[4, "py_experimenter.database_connector.DatabaseConnector._get_pull_experiment_query"]], "_pop_experiments_with_status() (py_experimenter.database_connector.databaseconnector method)": [[4, "py_experimenter.database_connector.DatabaseConnector._pop_experiments_with_status"]], "_prepare_update_query() (py_experimenter.database_connector.databaseconnector method)": [[4, "py_experimenter.database_connector.DatabaseConnector._prepare_update_query"]], "_pull_open_experiment() (py_experimenter.database_connector.databaseconnector method)": [[4, "py_experimenter.database_connector.DatabaseConnector._pull_open_experiment"]], "_select_open_experiments_from_db() (py_experimenter.database_connector.databaseconnector method)": [[4, "py_experimenter.database_connector.DatabaseConnector._select_open_experiments_from_db"]], "_table_exists() (py_experimenter.database_connector.databaseconnector method)": [[4, "py_experimenter.database_connector.DatabaseConnector._table_exists"]], "_table_has_correct_structure() (py_experimenter.database_connector.databaseconnector method)": [[4, "py_experimenter.database_connector.DatabaseConnector._table_has_correct_structure"]], "_test_connection() (py_experimenter.database_connector.databaseconnector method)": [[4, "py_experimenter.database_connector.DatabaseConnector._test_connection"]], "_write_to_database() (py_experimenter.database_connector.databaseconnector method)": [[4, "py_experimenter.database_connector.DatabaseConnector._write_to_database"]], "close_connection() (py_experimenter.database_connector.databaseconnector method)": [[4, "py_experimenter.database_connector.DatabaseConnector.close_connection"]], "commit() (py_experimenter.database_connector.databaseconnector method)": [[4, "py_experimenter.database_connector.DatabaseConnector.commit"]], "connect() (py_experimenter.database_connector.databaseconnector method)": [[4, "py_experimenter.database_connector.DatabaseConnector.connect"]], "create_table_if_not_existing() (py_experimenter.database_connector.databaseconnector method)": [[4, "py_experimenter.database_connector.DatabaseConnector.create_table_if_not_existing"]], "cursor() (py_experimenter.database_connector.databaseconnector method)": [[4, "py_experimenter.database_connector.DatabaseConnector.cursor"]], "delete_table() (py_experimenter.database_connector.databaseconnector method)": [[4, "py_experimenter.database_connector.DatabaseConnector.delete_table"]], "execute() (py_experimenter.database_connector.databaseconnector method)": [[4, "py_experimenter.database_connector.DatabaseConnector.execute"]], "execute_queries() (py_experimenter.database_connector.databaseconnector method)": [[4, "py_experimenter.database_connector.DatabaseConnector.execute_queries"]], "fetchall() (py_experimenter.database_connector.databaseconnector method)": [[4, "py_experimenter.database_connector.DatabaseConnector.fetchall"]], "fill_table() (py_experimenter.database_connector.databaseconnector method)": [[4, "py_experimenter.database_connector.DatabaseConnector.fill_table"]], "get_autoincrement() (py_experimenter.database_connector.databaseconnector static method)": [[4, "py_experimenter.database_connector.DatabaseConnector.get_autoincrement"]], "get_codecarbon_table() (py_experimenter.database_connector.databaseconnector method)": [[4, "py_experimenter.database_connector.DatabaseConnector.get_codecarbon_table"]], "get_experiment_configuration() (py_experimenter.database_connector.databaseconnector method)": [[4, "py_experimenter.database_connector.DatabaseConnector.get_experiment_configuration"]], "get_logtable() (py_experimenter.database_connector.databaseconnector method)": [[4, "py_experimenter.database_connector.DatabaseConnector.get_logtable"]], "get_structure_from_table() (py_experimenter.database_connector.databaseconnector method)": [[4, "py_experimenter.database_connector.DatabaseConnector.get_structure_from_table"]], "get_table() (py_experimenter.database_connector.databaseconnector method)": [[4, "py_experimenter.database_connector.DatabaseConnector.get_table"]], "prepare_write_query() (py_experimenter.database_connector.databaseconnector method)": [[4, "py_experimenter.database_connector.DatabaseConnector.prepare_write_query"]], "pull_paused_experiment() (py_experimenter.database_connector.databaseconnector method)": [[4, "py_experimenter.database_connector.DatabaseConnector.pull_paused_experiment"]], "py_experimenter.database_connector": [[4, "module-py_experimenter.database_connector"]], "random_order_string() (py_experimenter.database_connector.databaseconnector static method)": [[4, "py_experimenter.database_connector.DatabaseConnector.random_order_string"]], "reset_experiments() (py_experimenter.database_connector.databaseconnector method)": [[4, "py_experimenter.database_connector.DatabaseConnector.reset_experiments"]], "update_database() (py_experimenter.database_connector.databaseconnector method)": [[4, "py_experimenter.database_connector.DatabaseConnector.update_database"]], "databaseconnectorlite (class in py_experimenter.database_connector_lite)": [[5, "py_experimenter.database_connector_lite.DatabaseConnectorLITE"]], "_get_existing_rows() (py_experimenter.database_connector_lite.databaseconnectorlite method)": [[5, "py_experimenter.database_connector_lite.DatabaseConnectorLITE._get_existing_rows"]], "_get_pull_experiment_query() (py_experimenter.database_connector_lite.databaseconnectorlite method)": [[5, "py_experimenter.database_connector_lite.DatabaseConnectorLITE._get_pull_experiment_query"]], "_prepared_statement_placeholder (py_experimenter.database_connector_lite.databaseconnectorlite attribute)": [[5, "py_experimenter.database_connector_lite.DatabaseConnectorLITE._prepared_statement_placeholder"]], "_pull_open_experiment() (py_experimenter.database_connector_lite.databaseconnectorlite method)": [[5, "py_experimenter.database_connector_lite.DatabaseConnectorLITE._pull_open_experiment"]], "_table_exists() (py_experimenter.database_connector_lite.databaseconnectorlite method)": [[5, "py_experimenter.database_connector_lite.DatabaseConnectorLITE._table_exists"]], "_table_has_correct_structure() (py_experimenter.database_connector_lite.databaseconnectorlite method)": [[5, "py_experimenter.database_connector_lite.DatabaseConnectorLITE._table_has_correct_structure"]], "_test_connection() (py_experimenter.database_connector_lite.databaseconnectorlite method)": [[5, "py_experimenter.database_connector_lite.DatabaseConnectorLITE._test_connection"]], "_write_to_database_separator (py_experimenter.database_connector_lite.databaseconnectorlite attribute)": [[5, "py_experimenter.database_connector_lite.DatabaseConnectorLITE._write_to_database_separator"]], "connect() (py_experimenter.database_connector_lite.databaseconnectorlite method)": [[5, "py_experimenter.database_connector_lite.DatabaseConnectorLITE.connect"]], "get_autoincrement() (py_experimenter.database_connector_lite.databaseconnectorlite static method)": [[5, "py_experimenter.database_connector_lite.DatabaseConnectorLITE.get_autoincrement"]], "get_structure_from_table() (py_experimenter.database_connector_lite.databaseconnectorlite method)": [[5, "py_experimenter.database_connector_lite.DatabaseConnectorLITE.get_structure_from_table"]], "py_experimenter.database_connector_lite": [[5, "module-py_experimenter.database_connector_lite"]], "random_order_string() (py_experimenter.database_connector_lite.databaseconnectorlite static method)": [[5, "py_experimenter.database_connector_lite.DatabaseConnectorLITE.random_order_string"]], "databaseconnectormysql (class in py_experimenter.database_connector_mysql)": [[6, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL"]], "_create_database_if_not_existing() (py_experimenter.database_connector_mysql.databaseconnectormysql method)": [[6, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL._create_database_if_not_existing"]], "_get_database_credentials() (py_experimenter.database_connector_mysql.databaseconnectormysql method)": [[6, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL._get_database_credentials"]], "_get_existing_rows() (py_experimenter.database_connector_mysql.databaseconnectormysql method)": [[6, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL._get_existing_rows"]], "_get_pull_experiment_query() (py_experimenter.database_connector_mysql.databaseconnectormysql method)": [[6, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL._get_pull_experiment_query"]], "_prepared_statement_placeholder (py_experimenter.database_connector_mysql.databaseconnectormysql attribute)": [[6, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL._prepared_statement_placeholder"]], "_pull_open_experiment() (py_experimenter.database_connector_mysql.databaseconnectormysql method)": [[6, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL._pull_open_experiment"]], "_start_transaction() (py_experimenter.database_connector_mysql.databaseconnectormysql method)": [[6, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL._start_transaction"]], "_table_exists() (py_experimenter.database_connector_mysql.databaseconnectormysql method)": [[6, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL._table_exists"]], "_table_has_correct_structure() (py_experimenter.database_connector_mysql.databaseconnectormysql method)": [[6, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL._table_has_correct_structure"]], "_test_connection() (py_experimenter.database_connector_mysql.databaseconnectormysql method)": [[6, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL._test_connection"]], "close_connection() (py_experimenter.database_connector_mysql.databaseconnectormysql method)": [[6, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL.close_connection"]], "close_ssh_tunnel() (py_experimenter.database_connector_mysql.databaseconnectormysql method)": [[6, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL.close_ssh_tunnel"]], "connect() (py_experimenter.database_connector_mysql.databaseconnectormysql method)": [[6, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL.connect"]], "get_autoincrement() (py_experimenter.database_connector_mysql.databaseconnectormysql static method)": [[6, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL.get_autoincrement"]], "get_ssh_tunnel() (py_experimenter.database_connector_mysql.databaseconnectormysql method)": [[6, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL.get_ssh_tunnel"]], "get_structure_from_table() (py_experimenter.database_connector_mysql.databaseconnectormysql method)": [[6, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL.get_structure_from_table"]], "py_experimenter.database_connector_mysql": [[6, "module-py_experimenter.database_connector_mysql"]], "random_order_string() (py_experimenter.database_connector_mysql.databaseconnectormysql static method)": [[6, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL.random_order_string"]], "start_ssh_tunnel() (py_experimenter.database_connector_mysql.databaseconnectormysql method)": [[6, "py_experimenter.database_connector_mysql.DatabaseConnectorMYSQL.start_ssh_tunnel"]], "configerror": [[7, "py_experimenter.exceptions.ConfigError"]], "creatingtableerror": [[7, "py_experimenter.exceptions.CreatingTableError"]], "databaseconnectionerror": [[7, "py_experimenter.exceptions.DatabaseConnectionError"]], "databasecreationerror": [[7, "py_experimenter.exceptions.DatabaseCreationError"]], "databaseerror": [[7, "py_experimenter.exceptions.DatabaseError"]], "databasequeryerror": [[7, "py_experimenter.exceptions.DatabaseQueryError"]], "emptyfilldatabasecallerror": [[7, "py_experimenter.exceptions.EmptyFillDatabaseCallError"]], "invalidcolumnerror": [[7, "py_experimenter.exceptions.InvalidColumnError"]], "invalidconfigerror": [[7, "py_experimenter.exceptions.InvalidConfigError"]], "invalidlogfielderror": [[7, "py_experimenter.exceptions.InvalidLogFieldError"]], "invalidlogtableerror": [[7, "py_experimenter.exceptions.InvalidLogtableError"]], "invalidresultfielderror": [[7, "py_experimenter.exceptions.InvalidResultFieldError"]], "invalidvaluesinconfiguration": [[7, "py_experimenter.exceptions.InvalidValuesInConfiguration"]], "missinglogtableerror": [[7, "py_experimenter.exceptions.MissingLogTableError"]], "noconfigfileerror": [[7, "py_experimenter.exceptions.NoConfigFileError"]], "noexperimentsleftexception": [[7, "py_experimenter.exceptions.NoExperimentsLeftException"]], "nopausedexperimentsexception": [[7, "py_experimenter.exceptions.NoPausedExperimentsException"]], "parametercombinationerror": [[7, "py_experimenter.exceptions.ParameterCombinationError"]], "pyexperimentererror": [[7, "py_experimenter.exceptions.PyExperimenterError"]], "sshtunnelerror": [[7, "py_experimenter.exceptions.SshTunnelError"]], "tablehaswrongstructureerror": [[7, "py_experimenter.exceptions.TableHasWrongStructureError"]], "py_experimenter.exceptions": [[7, "module-py_experimenter.exceptions"]], "all (py_experimenter.experiment_status.experimentstatus attribute)": [[8, "py_experimenter.experiment_status.ExperimentStatus.ALL"]], "created (py_experimenter.experiment_status.experimentstatus attribute)": [[8, "py_experimenter.experiment_status.ExperimentStatus.CREATED"]], "done (py_experimenter.experiment_status.experimentstatus attribute)": [[8, "py_experimenter.experiment_status.ExperimentStatus.DONE"]], "error (py_experimenter.experiment_status.experimentstatus attribute)": [[8, "py_experimenter.experiment_status.ExperimentStatus.ERROR"]], "experimentstatus (class in py_experimenter.experiment_status)": [[8, "py_experimenter.experiment_status.ExperimentStatus"]], "paused (py_experimenter.experiment_status.experimentstatus attribute)": [[8, "py_experimenter.experiment_status.ExperimentStatus.PAUSED"]], "running (py_experimenter.experiment_status.experimentstatus attribute)": [[8, "py_experimenter.experiment_status.ExperimentStatus.RUNNING"]], "py_experimenter.experiment_status": [[8, "module-py_experimenter.experiment_status"]], "pyexperimenter (class in py_experimenter.experimenter)": [[9, "py_experimenter.experimenter.PyExperimenter"]], "_delete_codecarbon_config() (py_experimenter.experimenter.pyexperimenter method)": [[9, "py_experimenter.experimenter.PyExperimenter._delete_codecarbon_config"]], "_execute_experiment() (py_experimenter.experimenter.pyexperimenter method)": [[9, "py_experimenter.experimenter.PyExperimenter._execute_experiment"]], "_execution_wrapper() (py_experimenter.experimenter.pyexperimenter method)": [[9, "py_experimenter.experimenter.PyExperimenter._execution_wrapper"]], "_worker() (py_experimenter.experimenter.pyexperimenter method)": [[9, "py_experimenter.experimenter.PyExperimenter._worker"]], "_write_codecarbon_config() (py_experimenter.experimenter.pyexperimenter method)": [[9, "py_experimenter.experimenter.PyExperimenter._write_codecarbon_config"]], "close_ssh() (py_experimenter.experimenter.pyexperimenter method)": [[9, "py_experimenter.experimenter.PyExperimenter.close_ssh"]], "delete_table() (py_experimenter.experimenter.pyexperimenter method)": [[9, "py_experimenter.experimenter.PyExperimenter.delete_table"]], "execute() (py_experimenter.experimenter.pyexperimenter method)": [[9, "py_experimenter.experimenter.PyExperimenter.execute"]], "fill_table_from_combination() (py_experimenter.experimenter.pyexperimenter method)": [[9, "py_experimenter.experimenter.PyExperimenter.fill_table_from_combination"]], "fill_table_from_config() (py_experimenter.experimenter.pyexperimenter method)": [[9, "py_experimenter.experimenter.PyExperimenter.fill_table_from_config"]], "fill_table_with_rows() (py_experimenter.experimenter.pyexperimenter method)": [[9, "py_experimenter.experimenter.PyExperimenter.fill_table_with_rows"]], "get_codecarbon_table() (py_experimenter.experimenter.pyexperimenter method)": [[9, "py_experimenter.experimenter.PyExperimenter.get_codecarbon_table"]], "get_logtable() (py_experimenter.experimenter.pyexperimenter method)": [[9, "py_experimenter.experimenter.PyExperimenter.get_logtable"]], "get_table() (py_experimenter.experimenter.pyexperimenter method)": [[9, "py_experimenter.experimenter.PyExperimenter.get_table"]], "py_experimenter.experimenter": [[9, "module-py_experimenter.experimenter"]], "reset_experiments() (py_experimenter.experimenter.pyexperimenter method)": [[9, "py_experimenter.experimenter.PyExperimenter.reset_experiments"]], "unpause_experiment() (py_experimenter.experimenter.pyexperimenter method)": [[9, "py_experimenter.experimenter.PyExperimenter.unpause_experiment"]], "py_experimenter": [[10, "module-py_experimenter"]], "resultprocessor (class in py_experimenter.result_processor)": [[11, "py_experimenter.result_processor.ResultProcessor"]], "_add_timestamps_to_results() (py_experimenter.result_processor.resultprocessor static method)": [[11, "py_experimenter.result_processor.ResultProcessor._add_timestamps_to_results"]], "_change_status() (py_experimenter.result_processor.resultprocessor method)": [[11, "py_experimenter.result_processor.ResultProcessor._change_status"]], "_set_machine() (py_experimenter.result_processor.resultprocessor method)": [[11, "py_experimenter.result_processor.ResultProcessor._set_machine"]], "_set_name() (py_experimenter.result_processor.resultprocessor method)": [[11, "py_experimenter.result_processor.ResultProcessor._set_name"]], "_valid_logtable_logs() (py_experimenter.result_processor.resultprocessor method)": [[11, "py_experimenter.result_processor.ResultProcessor._valid_logtable_logs"]], "_valid_result_fields() (py_experimenter.result_processor.resultprocessor method)": [[11, "py_experimenter.result_processor.ResultProcessor._valid_result_fields"]], "_write_emissions() (py_experimenter.result_processor.resultprocessor method)": [[11, "py_experimenter.result_processor.ResultProcessor._write_emissions"]], "_write_error() (py_experimenter.result_processor.resultprocessor method)": [[11, "py_experimenter.result_processor.ResultProcessor._write_error"]], "process_logs() (py_experimenter.result_processor.resultprocessor method)": [[11, "py_experimenter.result_processor.ResultProcessor.process_logs"]], "process_results() (py_experimenter.result_processor.resultprocessor method)": [[11, "py_experimenter.result_processor.ResultProcessor.process_results"]], "py_experimenter.result_processor": [[11, "module-py_experimenter.result_processor"]], "combine_fill_table_parameters() (in module py_experimenter.utils)": [[12, "py_experimenter.utils.combine_fill_table_parameters"]], "extract_codecarbon_columns() (in module py_experimenter.utils)": [[12, "py_experimenter.utils.extract_codecarbon_columns"]], "get_timestamp_representation() (in module py_experimenter.utils)": [[12, "py_experimenter.utils.get_timestamp_representation"]], "load_credential_config() (in module py_experimenter.utils)": [[12, "py_experimenter.utils.load_credential_config"]], "py_experimenter.utils": [[12, "module-py_experimenter.utils"]], "write_codecarbon_config() (in module py_experimenter.utils)": [[12, "py_experimenter.utils.write_codecarbon_config"]]}})